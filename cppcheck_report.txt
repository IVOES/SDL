build-scripts/gen_audio_channel_conversion.c:285:14: style: Variable 'fptr' is assigned a value that is never used. [unreadVariable]
        fptr = cvtmatrix;
             ^
build-scripts/gen_audio_channel_conversion.c:331:14: style: Variable 'fptr' is assigned a value that is never used. [unreadVariable]
        fptr = cvtmatrix;
             ^
src/SDL.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_assert.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 72 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_dataqueue.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_dataqueue.c:183:12: style: The scope of the variable 'datalen' can be reduced. [variableScope]
    size_t datalen;
           ^
src/SDL_dataqueue.c:53:34: style:inconclusive: Function 'SDL_CreateDataQueue' argument 1 names different: declaration 'packetlen' definition '_packetlen'. [funcArgNamesDifferent]
SDL_CreateDataQueue(const size_t _packetlen, const size_t initialslack)
                                 ^
src/SDL_dataqueue.h:29:49: note: Function 'SDL_CreateDataQueue' argument 1 names different: declaration 'packetlen' definition '_packetlen'.
SDL_DataQueue *SDL_CreateDataQueue(const size_t packetlen, const size_t initialslack);
                                                ^
src/SDL_dataqueue.c:53:34: note: Function 'SDL_CreateDataQueue' argument 1 names different: declaration 'packetlen' definition '_packetlen'.
SDL_CreateDataQueue(const size_t _packetlen, const size_t initialslack)
                                 ^
src/SDL_dataqueue.c:175:60: style:inconclusive: Function 'SDL_WriteToDataQueue' argument 2 names different: declaration 'data' definition '_data'. [funcArgNamesDifferent]
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *_data, const size_t _len)
                                                           ^
src/SDL_dataqueue.h:32:60: note: Function 'SDL_WriteToDataQueue' argument 2 names different: declaration 'data' definition '_data'.
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *data, const size_t len);
                                                           ^
src/SDL_dataqueue.c:175:60: note: Function 'SDL_WriteToDataQueue' argument 2 names different: declaration 'data' definition '_data'.
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *_data, const size_t _len)
                                                           ^
src/SDL_dataqueue.c:175:80: style:inconclusive: Function 'SDL_WriteToDataQueue' argument 3 names different: declaration 'len' definition '_len'. [funcArgNamesDifferent]
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *_data, const size_t _len)
                                                                               ^
src/SDL_dataqueue.h:32:79: note: Function 'SDL_WriteToDataQueue' argument 3 names different: declaration 'len' definition '_len'.
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *data, const size_t len);
                                                                              ^
src/SDL_dataqueue.c:175:80: note: Function 'SDL_WriteToDataQueue' argument 3 names different: declaration 'len' definition '_len'.
int SDL_WriteToDataQueue(SDL_DataQueue *queue, const void *_data, const size_t _len)
                                                                               ^
src/SDL_dataqueue.c:234:51: style:inconclusive: Function 'SDL_PeekIntoDataQueue' argument 2 names different: declaration 'buf' definition '_buf'. [funcArgNamesDifferent]
SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                  ^
src/SDL_dataqueue.h:34:58: note: Function 'SDL_PeekIntoDataQueue' argument 2 names different: declaration 'buf' definition '_buf'.
size_t SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *buf, const size_t len);
                                                         ^
src/SDL_dataqueue.c:234:51: note: Function 'SDL_PeekIntoDataQueue' argument 2 names different: declaration 'buf' definition '_buf'.
SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                  ^
src/SDL_dataqueue.c:234:70: style:inconclusive: Function 'SDL_PeekIntoDataQueue' argument 3 names different: declaration 'len' definition '_len'. [funcArgNamesDifferent]
SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                                     ^
src/SDL_dataqueue.h:34:76: note: Function 'SDL_PeekIntoDataQueue' argument 3 names different: declaration 'len' definition '_len'.
size_t SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *buf, const size_t len);
                                                                           ^
src/SDL_dataqueue.c:234:70: note: Function 'SDL_PeekIntoDataQueue' argument 3 names different: declaration 'len' definition '_len'.
SDL_PeekIntoDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                                     ^
src/SDL_dataqueue.c:263:51: style:inconclusive: Function 'SDL_ReadFromDataQueue' argument 2 names different: declaration 'buf' definition '_buf'. [funcArgNamesDifferent]
SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                  ^
src/SDL_dataqueue.h:33:58: note: Function 'SDL_ReadFromDataQueue' argument 2 names different: declaration 'buf' definition '_buf'.
size_t SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *buf, const size_t len);
                                                         ^
src/SDL_dataqueue.c:263:51: note: Function 'SDL_ReadFromDataQueue' argument 2 names different: declaration 'buf' definition '_buf'.
SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                  ^
src/SDL_dataqueue.c:263:70: style:inconclusive: Function 'SDL_ReadFromDataQueue' argument 3 names different: declaration 'len' definition '_len'. [funcArgNamesDifferent]
SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                                     ^
src/SDL_dataqueue.h:33:76: note: Function 'SDL_ReadFromDataQueue' argument 3 names different: declaration 'len' definition '_len'.
size_t SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *buf, const size_t len);
                                                                           ^
src/SDL_dataqueue.c:263:70: note: Function 'SDL_ReadFromDataQueue' argument 3 names different: declaration 'len' definition '_len'.
SDL_ReadFromDataQueue(SDL_DataQueue *queue, void *_buf, const size_t _len)
                                                                     ^
src/SDL_error.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_guid.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_hints.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_hints.c:133:17: style: The scope of the variable 'env' can be reduced. [variableScope]
    const char *env;
                ^
src/SDL_list.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_log.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 31 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/atomic/SDL_atomic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/atomic/SDL_spinlock.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 24 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/SDL_audio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 72 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/SDL_audio.c:654:18: style: Variable 'data_len' is assigned a value that is never used. [unreadVariable]
    int data_len = 0;
                 ^
src/audio/SDL_audio.c:1252:11: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    int i = 0;
          ^
src/audio/SDL_audiocvt.c:866:22: style: Variable 'src_channels' is assigned a value that is never used. [unreadVariable]
        src_channels = dst_channels;
                     ^
src/audio/SDL_audiotypecvt.c:294:21: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
static void SDLCALL SDL_TARGETING("sse2") SDL_Convert_U8_to_F32_SSE2(SDL_AudioCVT *cvt, SDL_AudioFormat format)
                    ^
src/audio/SDL_mixer.c:110:13: style: The scope of the variable 'dst_sample' can be reduced. [variableScope]
        int dst_sample;
            ^
src/audio/SDL_mixer.c:134:13: style: The scope of the variable 'dst_sample' can be reduced. [variableScope]
        int dst_sample;
            ^
src/audio/SDL_mixer.c:158:13: style: The scope of the variable 'dst_sample' can be reduced. [variableScope]
        int dst_sample;
            ^
src/audio/SDL_mixer.c:235:15: style: The scope of the variable 'src1' can be reduced. [variableScope]
        float src1, src2;
              ^
src/audio/SDL_mixer.c:235:21: style: The scope of the variable 'src2' can be reduced. [variableScope]
        float src1, src2;
                    ^
src/audio/SDL_mixer.c:236:16: style: The scope of the variable 'dst_sample' can be reduced. [variableScope]
        double dst_sample;
               ^
src/audio/SDL_mixer.c:263:15: style: The scope of the variable 'src1' can be reduced. [variableScope]
        float src1, src2;
              ^
src/audio/SDL_mixer.c:263:21: style: The scope of the variable 'src2' can be reduced. [variableScope]
        float src1, src2;
                    ^
src/audio/SDL_mixer.c:264:16: style: The scope of the variable 'dst_sample' can be reduced. [variableScope]
        double dst_sample;
               ^
src/audio/SDL_wave.c:2112:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        audio_buf = NULL;
        ^
src/audio/SDL_wave.c:2113:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        audio_len = 0;
        ^
src/audio/SDL_wave.c:638:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result;
        ^
src/audio/SDL_wave.c:1032:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result;
        ^
src/audio/SDL_wave.c:2113:19: style: Variable 'audio_len' is assigned a value that is never used. [unreadVariable]
        audio_len = 0;
                  ^
src/audio/SDL_wave.c:246:17: style: The scope of the variable 'fmtstr2' can be reduced. [variableScope]
    const char *fmtstr2 = "        wBitsPerSample          %11u\n";
                ^
src/audio/SDL_wave.c:247:17: style: The scope of the variable 'fmtstr3' can be reduced. [variableScope]
    const char *fmtstr3 = "        cbSize                  %11u\n";
                ^
src/audio/SDL_wave.c:248:17: style: The scope of the variable 'fmtstr4a' can be reduced. [variableScope]
    const char *fmtstr4a = "        wValidBitsPerSample     %11u\n";
                ^
src/audio/SDL_wave.c:250:17: style: The scope of the variable 'fmtstr5' can be reduced. [variableScope]
    const char *fmtstr5 = "        dwChannelMask            0x%08x\n"
                ^
src/audio/SDL_wave.c:253:17: style: The scope of the variable 'fmtstr6' can be reduced. [variableScope]
    const char *fmtstr6 = "-------------------------------------------\n"
                ^
src/audio/SDL_wave.c:315:13: style: Variable 'dumppos' is assigned a value that is never used. [unreadVariable]
    dumppos += res > 0 ? res : 0;
            ^
src/audio/aaudio/SDL_aaudio.c:103:38: style: Expression is always false because 'else if' condition matches previous condition at line 101. [multiCondition]
        } else if (this->spec.format == AUDIO_S16SYS) {
                                     ^
src/audio/aaudio/SDL_aaudio.c:198:5: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
    if (res < 0) {
    ^
src/audio/aaudio/SDL_aaudio.c:200:7: note: Found duplicate branches for 'if' and 'else'.
    } else {
      ^
src/audio/aaudio/SDL_aaudio.c:198:5: note: Found duplicate branches for 'if' and 'else'.
    if (res < 0) {
    ^
src/audio/alsa/SDL_alsa_audio.c:688:9: style: The if condition is the same as the previous if condition [duplicateCondition]
    if (!iscapture) {
        ^
src/audio/alsa/SDL_alsa_audio.c:678:9: note: First condition
    if (!iscapture) {
        ^
src/audio/alsa/SDL_alsa_audio.c:688:9: note: Second condition
    if (!iscapture) {
        ^
src/audio/alsa/SDL_alsa_audio.c:773:18: style: The scope of the variable 'prev' can be reduced. [variableScope]
    ALSA_Device *prev;
                 ^
src/audio/alsa/SDL_alsa_audio.c:92:0: information: Skipping configuration 'SDL_AUDIO_DRIVER_ALSA;SDL_AUDIO_DRIVER_ALSA_DYNAMIC' since the value of 'SDL_AUDIO_DRIVER_ALSA_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char *alsa_library = SDL_AUDIO_DRIVER_ALSA_DYNAMIC;
^
src/audio/directsound/SDL_directsound.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/emscripten/SDL_emscriptenaudio.c:157:16: error: Syntax Error: AST broken, 'if' doesn't have two operands. [internalAstError]
            if (SDL3.capture.silenceTimer !== undefined) {
               ^
src/audio/jack/SDL_jackaudio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/netbsd/SDL_netbsdaudio.c:226:0: information: Skipping configuration 'AUDIO_GETFORMAT;SDL_AUDIO_DRIVER_NETBSD' since the value of 'AUDIO_GETFORMAT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (ioctl(this->hidden->audio_fd, AUDIO_GETFORMAT, &hwinfo) != -1) {
^
src/audio/netbsd/SDL_netbsdaudio.c:198:24: style: Unused variable: hwinfo [unusedVariable]
    audio_info_t info, hwinfo;
                       ^
src/audio/pipewire/SDL_pipewire.c:214:9: style: Condition '!load_pipewire_library()' is always true [knownConditionTrueFalse]
    if (!load_pipewire_library()) {
        ^
src/audio/pipewire/SDL_pipewire.c:526:21: style: The scope of the variable 'value' can be reduced. [variableScope]
    struct spa_pod *value;
                    ^
src/audio/pipewire/SDL_pipewire.c:579:17: style: The scope of the variable 'prop_val' can be reduced. [variableScope]
    const char *prop_val;
                ^
src/audio/pipewire/SDL_pipewire.c:684:17: style: The scope of the variable 'desc_buffer_len' can be reduced. [variableScope]
            int desc_buffer_len;
                ^
src/audio/pipewire/SDL_pipewire.c:685:17: style: The scope of the variable 'path_buffer_len' can be reduced. [variableScope]
            int path_buffer_len;
                ^
src/audio/pipewire/SDL_pipewire.c:943:12: style: The scope of the variable 'dst' can be reduced. [variableScope]
    Uint8 *dst;
           ^
src/audio/pipewire/SDL_pipewire.c:123:0: information: Skipping configuration 'SDL_AUDIO_DRIVER_PIPEWIRE;SDL_AUDIO_DRIVER_PIPEWIRE_DYNAMIC' since the value of 'SDL_AUDIO_DRIVER_PIPEWIRE_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char *pipewire_library = SDL_AUDIO_DRIVER_PIPEWIRE_DYNAMIC;
^
src/audio/ps2/SDL_ps2audio.c:57:25: warning: Redundant assignment of 'this->spec.freq' to itself. [selfAssignment]
        this->spec.freq = this->spec.freq;
                        ^
src/audio/psp/SDL_pspaudio.c:82:29: warning: Redundant assignment of 'this->spec.freq' to itself. [selfAssignment]
            this->spec.freq = this->spec.freq;
                            ^
src/audio/psp/SDL_pspaudio.c:48:9: style: The scope of the variable 'format' can be reduced. [variableScope]
    int format, mixlen, i;
        ^
src/audio/pulseaudio/SDL_pulseaudio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 53 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/qnx/SDL_qsa_audio.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/audio/sndio/SDL_sndioaudio.c:175:9: style: The scope of the variable 'revents' can be reduced. [variableScope]
    int revents;
        ^
src/audio/sndio/SDL_sndioaudio.c:176:9: style: The scope of the variable 'nfds' can be reduced. [variableScope]
    int nfds;
        ^
src/audio/sndio/SDL_sndioaudio.c:68:0: information: Skipping configuration 'SDL_AUDIO_DRIVER_SNDIO;SDL_AUDIO_DRIVER_SNDIO_DYNAMIC' since the value of 'SDL_AUDIO_DRIVER_SNDIO_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
static const char *sndio_library = SDL_AUDIO_DRIVER_SNDIO_DYNAMIC;
^
src/audio/wasapi/SDL_wasapi_winrt.cpp:109:80: error: syntax error [syntaxError]
    added_handler = watcher->Added += ref new TypedEventHandler<DeviceWatcher ^, DeviceInformation ^>([this](DeviceWatcher ^ sender, DeviceInformation ^ args) { OnDeviceAdded(sender, args); });
                                                                               ^
src/core/android/SDL_android.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/android/SDL_android.c:659:85: style:inconclusive: Function 'Java_org_libsdl_app_SDLAudioManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'. [funcArgNamesDifferent]
JNIEXPORT void JNICALL SDL_JAVA_AUDIO_INTERFACE(nativeSetupJNI)(JNIEnv *env, jclass cls)
                                                                                    ^
src/core/android/SDL_android.c:219:25: note: Function 'Java_org_libsdl_app_SDLAudioManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'.
    JNIEnv *env, jclass jcls);
                        ^
src/core/android/SDL_android.c:659:85: note: Function 'Java_org_libsdl_app_SDLAudioManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'.
JNIEXPORT void JNICALL SDL_JAVA_AUDIO_INTERFACE(nativeSetupJNI)(JNIEnv *env, jclass cls)
                                                                                    ^
src/core/android/SDL_android.c:707:90: style:inconclusive: Function 'Java_org_libsdl_app_SDLControllerManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'. [funcArgNamesDifferent]
JNIEXPORT void JNICALL SDL_JAVA_CONTROLLER_INTERFACE(nativeSetupJNI)(JNIEnv *env, jclass cls)
                                                                                         ^
src/core/android/SDL_android.c:237:25: note: Function 'Java_org_libsdl_app_SDLControllerManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'.
    JNIEnv *env, jclass jcls);
                        ^
src/core/android/SDL_android.c:707:90: note: Function 'Java_org_libsdl_app_SDLControllerManager_nativeSetupJNI' argument 2 names different: declaration 'jcls' definition 'cls'.
JNIEXPORT void JNICALL SDL_JAVA_CONTROLLER_INTERFACE(nativeSetupJNI)(JNIEnv *env, jclass cls)
                                                                                         ^
src/core/android/SDL_android.c:887:25: style:inconclusive: Function 'Java_org_libsdl_app_SDLActivity_onNativeResize' argument 2 names different: declaration 'cls' definition 'jcls'. [funcArgNamesDifferent]
    JNIEnv *env, jclass jcls)
                        ^
src/core/android/SDL_android.c:80:25: note: Function 'Java_org_libsdl_app_SDLActivity_onNativeResize' argument 2 names different: declaration 'cls' definition 'jcls'.
    JNIEnv *env, jclass cls);
                        ^
src/core/android/SDL_android.c:887:25: note: Function 'Java_org_libsdl_app_SDLActivity_onNativeResize' argument 2 names different: declaration 'cls' definition 'jcls'.
    JNIEnv *env, jclass jcls)
                        ^
src/core/android/SDL_android.c:899:25: style:inconclusive: Function 'Java_org_libsdl_app_SDLActivity_onNativeOrientationChanged' argument 2 names different: declaration 'cls' definition 'jcls'. [funcArgNamesDifferent]
    JNIEnv *env, jclass jcls,
                        ^
src/core/android/SDL_android.c:158:25: note: Function 'Java_org_libsdl_app_SDLActivity_onNativeOrientationChanged' argument 2 names different: declaration 'cls' definition 'jcls'.
    JNIEnv *env, jclass cls,
                        ^
src/core/android/SDL_android.c:899:25: note: Function 'Java_org_libsdl_app_SDLActivity_onNativeOrientationChanged' argument 2 names different: declaration 'cls' definition 'jcls'.
    JNIEnv *env, jclass jcls,
                        ^
src/core/freebsd/SDL_evdev_kbd_freebsd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/freebsd/SDL_evdev_kbd_freebsd.c:296:51: style:inconclusive: Function 'SDL_EVDEV_kbd_quit' argument 1 names different: declaration 'state' definition 'kbd'. [funcArgNamesDifferent]
void SDL_EVDEV_kbd_quit(SDL_EVDEV_keyboard_state *kbd)
                                                  ^
src/core/linux/SDL_evdev_kbd.h:30:58: note: Function 'SDL_EVDEV_kbd_quit' argument 1 names different: declaration 'state' definition 'kbd'.
extern void SDL_EVDEV_kbd_quit(SDL_EVDEV_keyboard_state *state);
                                                         ^
src/core/freebsd/SDL_evdev_kbd_freebsd.c:296:51: note: Function 'SDL_EVDEV_kbd_quit' argument 1 names different: declaration 'state' definition 'kbd'.
void SDL_EVDEV_kbd_quit(SDL_EVDEV_keyboard_state *kbd)
                                                  ^
src/core/freebsd/SDL_evdev_kbd_freebsd.c:471:54: style:inconclusive: Function 'SDL_EVDEV_kbd_keycode' argument 1 names different: declaration 'state' definition 'kbd'. [funcArgNamesDifferent]
void SDL_EVDEV_kbd_keycode(SDL_EVDEV_keyboard_state *kbd, unsigned int keycode, int down)
                                                     ^
src/core/linux/SDL_evdev_kbd.h:29:61: note: Function 'SDL_EVDEV_kbd_keycode' argument 1 names different: declaration 'state' definition 'kbd'.
extern void SDL_EVDEV_kbd_keycode(SDL_EVDEV_keyboard_state *state, unsigned int keycode, int down);
                                                            ^
src/core/freebsd/SDL_evdev_kbd_freebsd.c:471:54: note: Function 'SDL_EVDEV_kbd_keycode' argument 1 names different: declaration 'state' definition 'kbd'.
void SDL_EVDEV_kbd_keycode(SDL_EVDEV_keyboard_state *kbd, unsigned int keycode, int down)
                                                     ^
src/core/gdk/SDL_gdk.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/gdk/SDL_gdk.cpp:196:32: warning: Conversion of string literal "[GDK] Could not initialize - aborting" to bool always evaluates to true. [incorrectStringBooleanError]
        SDL_assert_always(0 && "[GDK] Could not initialize - aborting");
                               ^
src/core/haiku/SDL_BeApp.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 82 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/linux/SDL_dbus.c:424:21: style: The scope of the variable 'path' can be reduced. [variableScope]
        const char *path = "/org/freedesktop/portal/desktop";
                    ^
src/core/linux/SDL_dbus.c:425:21: style: The scope of the variable 'interface' can be reduced. [variableScope]
        const char *interface = "org.freedesktop.portal.Inhibit";
                    ^
src/core/linux/SDL_evdev.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/linux/SDL_evdev.c:691:0: information: Skipping configuration 'EVIOCGMTSLOTS;SDL_INPUT_LINUXEV' since the value of 'EVIOCGMTSLOTS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = ioctl(item->fd, EVIOCGMTSLOTS(mt_req_size), mt_req_code);
^
src/core/linux/SDL_evdev.c:718:0: information: Skipping configuration 'EVIOCGMTSLOTS;SDL_INPUT_LINUXEV' since the value of 'EVIOCGMTSLOTS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = ioctl(item->fd, EVIOCGMTSLOTS(mt_req_size), mt_req_code);
^
src/core/linux/SDL_evdev.c:736:0: information: Skipping configuration 'EVIOCGMTSLOTS;SDL_INPUT_LINUXEV' since the value of 'EVIOCGMTSLOTS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = ioctl(item->fd, EVIOCGMTSLOTS(mt_req_size), mt_req_code);
^
src/core/linux/SDL_evdev.c:754:0: information: Skipping configuration 'EVIOCGMTSLOTS;SDL_INPUT_LINUXEV' since the value of 'EVIOCGMTSLOTS' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ret = ioctl(item->fd, EVIOCGMTSLOTS(mt_req_size), mt_req_code);
^
src/core/linux/SDL_evdev_kbd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/linux/SDL_fcitx.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/linux/SDL_fcitx.c:124:59: style: Condition 'p_end_pos==-1' is always true [knownConditionTrueFalse]
                } else if (p_start_pos != -1 && p_end_pos == -1) {
                                                          ^
src/core/linux/SDL_fcitx.c:113:87: note: Assuming that condition 'p_end_pos==-1' is not redundant
            if (dbus->message_iter_get_arg_type(&sub) == DBUS_TYPE_INT32 && p_end_pos == -1) {
                                                                                      ^
src/core/linux/SDL_fcitx.c:124:59: note: Condition 'p_end_pos==-1' is always true
                } else if (p_start_pos != -1 && p_end_pos == -1) {
                                                          ^
src/core/linux/SDL_ibus.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/linux/SDL_ibus.c:699:46: style:inconclusive: Function 'SDL_IBus_UpdateTextRect' argument 1 names different: declaration 'window_relative_rect' definition 'rect'. [funcArgNamesDifferent]
void SDL_IBus_UpdateTextRect(const SDL_Rect *rect)
                                             ^
src/core/linux/SDL_ibus.h:47:53: note: Function 'SDL_IBus_UpdateTextRect' argument 1 names different: declaration 'window_relative_rect' definition 'rect'.
extern void SDL_IBus_UpdateTextRect(const SDL_Rect *window_relative_rect);
                                                    ^
src/core/linux/SDL_ibus.c:699:46: note: Function 'SDL_IBus_UpdateTextRect' argument 1 names different: declaration 'window_relative_rect' definition 'rect'.
void SDL_IBus_UpdateTextRect(const SDL_Rect *rect)
                                             ^
src/core/linux/SDL_threadprio.c:293:24: style: Variable 'osPriority' is assigned a value that is never used. [unreadVariable]
            osPriority = 1;
                       ^
src/core/linux/SDL_threadprio.c:295:24: style: Variable 'osPriority' is assigned a value that is never used. [unreadVariable]
            osPriority = rtkit_max_realtime_priority * 3 / 4;
                       ^
src/core/linux/SDL_threadprio.c:297:24: style: Variable 'osPriority' is assigned a value that is never used. [unreadVariable]
            osPriority = rtkit_max_realtime_priority;
                       ^
src/core/linux/SDL_threadprio.c:299:24: style: Variable 'osPriority' is assigned a value that is never used. [unreadVariable]
            osPriority = rtkit_max_realtime_priority / 2;
                       ^
src/core/linux/SDL_udev.c:301:0: information: Skipping configuration 'SDL_UDEV_DYNAMIC;SDL_USE_LIBUDEV' since the value of 'SDL_UDEV_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        _this->udev_handle = SDL_LoadObject(SDL_UDEV_DYNAMIC);
^
src/core/ngage/SDL_ngage_runapp.cpp:64:17: style: Variable 'oldHeap' is assigned a value that is never used. [unreadVariable]
        oldHeap = User::SwitchHeap(newHeap);
                ^
src/core/openbsd/SDL_wscons_kbd.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/openbsd/SDL_wscons_mouse.c:53:0: information: Skipping configuration 'WSMOUSEIO_SETMODE' since the value of 'WSMOUSEIO_SETMODE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ioctl(mouseInputData->fd, WSMOUSEIO_SETMODE, WSMOUSE_COMPAT);
^
src/core/openbsd/SDL_wscons_mouse.c:56:0: information: Skipping configuration 'WSMOUSEIO_SETVERSION' since the value of 'WSMOUSEIO_SETVERSION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    ioctl(mouseInputData->fd, WSMOUSEIO_SETVERSION, &version);
^
src/core/windows/SDL_windows.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/windows/SDL_xinput.h:32:1: error: Code 'using namespace XInputOnGameInput' is invalid C code. Use --std or --language to configure the language. [syntaxError]
using namespace XInputOnGameInput;
^
src/core/winrt/SDL_winrtapp_direct3d.h:25:5: information: The code 'class SDL_WinRTApp sealed :' is not handled. You can use -I or --include to add handling of this code. [class_X_Y]
ref class SDL_WinRTApp sealed : public Windows::ApplicationModel::Core::IFrameworkView
    ^
src/core/winrt/SDL_winrtapp_direct3d.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/core/winrt/SDL_winrtapp_direct3d.cpp:171:56: error: syntax error [syntaxError]
        ref new TypedEventHandler<CoreApplicationView ^, IActivatedEventArgs ^>(this, &SDL_WinRTApp::OnAppActivated);
                                                       ^
src/core/winrt/SDL_winrtapp_xaml.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/cpuinfo/SDL_cpuinfo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/cpuinfo/SDL_cpuinfo.c:284:38: style: Condition 'CPU_CPUIDMaxFunction>=1' is always false [knownConditionTrueFalse]
            if (CPU_CPUIDMaxFunction >= 1) {
                                     ^
src/cpuinfo/SDL_cpuinfo.c:282:13: note: Assignment 'a=b=c=d=0', assigned value is 0
            cpuid(0, a, b, c, d);
            ^
src/cpuinfo/SDL_cpuinfo.c:283:36: note: Assignment 'CPU_CPUIDMaxFunction=a', assigned value is 0
            CPU_CPUIDMaxFunction = a;
                                   ^
src/cpuinfo/SDL_cpuinfo.c:284:38: note: Condition 'CPU_CPUIDMaxFunction>=1' is always false
            if (CPU_CPUIDMaxFunction >= 1) {
                                     ^
src/cpuinfo/SDL_cpuinfo.c:309:47: style: Condition '(a&6)==6' is always false [knownConditionTrueFalse]
                    CPU_OSSavesYMM = ((a & 6) == 6) ? SDL_TRUE : SDL_FALSE;
                                              ^
src/cpuinfo/SDL_cpuinfo.c:285:17: note: Assignment 'a=b=c=d=0', assigned value is 0
                cpuid(1, a, b, c, d);
                ^
src/cpuinfo/SDL_cpuinfo.c:309:47: note: Condition '(a&6)==6' is always false
                    CPU_OSSavesYMM = ((a & 6) == 6) ? SDL_TRUE : SDL_FALSE;
                                              ^
src/cpuinfo/SDL_cpuinfo.c:310:69: style: Condition '(a&0xe0)==0xe0' is always false [knownConditionTrueFalse]
                    CPU_OSSavesZMM = (CPU_OSSavesYMM && ((a & 0xe0) == 0xe0)) ? SDL_TRUE : SDL_FALSE;
                                                                    ^
src/cpuinfo/SDL_cpuinfo.c:285:17: note: Assignment 'a=b=c=d=0', assigned value is 0
                cpuid(1, a, b, c, d);
                ^
src/cpuinfo/SDL_cpuinfo.c:310:69: note: Condition '(a&0xe0)==0xe0' is always false
                    CPU_OSSavesZMM = (CPU_OSSavesYMM && ((a & 0xe0) == 0xe0)) ? SDL_TRUE : SDL_FALSE;
                                                                    ^
src/cpuinfo/SDL_cpuinfo.c:642:26: style: Condition 'SDL_CPUCount<=0' is always true [knownConditionTrueFalse]
        if (SDL_CPUCount <= 0) {
                         ^
src/cpuinfo/SDL_cpuinfo.c:620:9: note: Assuming that condition '!SDL_CPUCount' is not redundant
    if (!SDL_CPUCount) {
        ^
src/cpuinfo/SDL_cpuinfo.c:642:26: note: Condition 'SDL_CPUCount<=0' is always true
        if (SDL_CPUCount <= 0) {
                         ^
src/cpuinfo/SDL_cpuinfo.c:909:28: style: Condition 'CPU_haveARMSIMD()' is always false [knownConditionTrueFalse]
        if (CPU_haveARMSIMD()) {
                           ^
src/cpuinfo/SDL_cpuinfo.c:913:25: style: Condition 'CPU_haveNEON()' is always false [knownConditionTrueFalse]
        if (CPU_haveNEON()) {
                        ^
src/cpuinfo/SDL_cpuinfo.c:1019:9: style: Condition '!SDL_SystemRAM' is always true [knownConditionTrueFalse]
    if (!SDL_SystemRAM) {
        ^
src/cpuinfo/SDL_cpuinfo.c:666:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i = 0;
            ^
src/cpuinfo/SDL_cpuinfo.c:634:26: style: Condition 'SDL_CPUCount<=0' is always true [knownConditionTrueFalse]
        if (SDL_CPUCount <= 0) {
                         ^
src/cpuinfo/SDL_cpuinfo.c:620:9: note: Assuming that condition '!SDL_CPUCount' is not redundant
    if (!SDL_CPUCount) {
        ^
src/cpuinfo/SDL_cpuinfo.c:634:26: note: Condition 'SDL_CPUCount<=0' is always true
        if (SDL_CPUCount <= 0) {
                         ^
src/cpuinfo/SDL_cpuinfo.c:1047:27: style: Condition 'SDL_SystemRAM<=0' is always true [knownConditionTrueFalse]
        if (SDL_SystemRAM <= 0) {
                          ^
src/cpuinfo/SDL_cpuinfo.c:1019:9: note: Assuming that condition '!SDL_SystemRAM' is not redundant
    if (!SDL_SystemRAM) {
        ^
src/cpuinfo/SDL_cpuinfo.c:1047:27: note: Condition 'SDL_SystemRAM<=0' is always true
        if (SDL_SystemRAM <= 0) {
                          ^
src/cpuinfo/SDL_cpuinfo.c:624:0: information: Skipping configuration 'HAVE_SYSCONF;_SC_NPROCESSORS_ONLN' since the value of '_SC_NPROCESSORS_ONLN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            SDL_CPUCount = (int)sysconf(_SC_NPROCESSORS_ONLN);
^
src/cpuinfo/SDL_cpuinfo.c:1023:0: information: Skipping configuration 'HAVE_SYSCONF;_SC_PAGESIZE;_SC_PHYS_PAGES' since the value of '_SC_PAGESIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            SDL_SystemRAM = (int)((Sint64)sysconf(_SC_PHYS_PAGES) * sysconf(_SC_PAGESIZE) / (1024 * 1024));
^
src/cpuinfo/SDL_cpuinfo.c:1023:0: information: Skipping configuration 'HAVE_SYSCONF;_SC_PAGESIZE;_SC_PHYS_PAGES' since the value of '_SC_PHYS_PAGES' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
            SDL_SystemRAM = (int)((Sint64)sysconf(_SC_PHYS_PAGES) * sysconf(_SC_PAGESIZE) / (1024 * 1024));
^
src/dynapi/SDL_dynapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 29 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_SetError_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:41:1: note: Function 'SDL_SetError_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'.
SDL_DYNAPI_PROC(int,SDL_SetError,(SDL_PRINTF_FORMAT_STRING const char *a, ...),(a),return)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_SetError_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_sscanf_DEFAULT' argument 1 names different: declaration 'a' definition 'buf'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:44:1: note: Function 'SDL_sscanf_DEFAULT' argument 1 names different: declaration 'a' definition 'buf'.
SDL_DYNAPI_PROC(int,SDL_sscanf,(const char *a, SDL_SCANF_FORMAT_STRING const char *b, ...),(a,b),return)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_sscanf_DEFAULT' argument 1 names different: declaration 'a' definition 'buf'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_sscanf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:44:1: note: Function 'SDL_sscanf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(int,SDL_sscanf,(const char *a, SDL_SCANF_FORMAT_STRING const char *b, ...),(a,b),return)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_sscanf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_asprintf_DEFAULT' argument 1 names different: declaration 'a' definition 'strp'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:42:1: note: Function 'SDL_asprintf_DEFAULT' argument 1 names different: declaration 'a' definition 'strp'.
SDL_DYNAPI_PROC(int,SDL_asprintf,(char **a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),return)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_asprintf_DEFAULT' argument 1 names different: declaration 'a' definition 'strp'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_asprintf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:42:1: note: Function 'SDL_asprintf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(int,SDL_asprintf,(char **a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),return)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_asprintf_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_Log_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:33:1: note: Function 'SDL_Log_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_Log,(SDL_PRINTF_FORMAT_STRING const char *a, ...),(a),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_Log_DEFAULT' argument 1 names different: declaration 'a' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogMessage_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:38:1: note: Function 'SDL_LogMessage_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogMessage,(int a, SDL_LogPriority b, SDL_PRINTF_FORMAT_STRING const char *c, ...),(a,b,c),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogMessage_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogMessage_DEFAULT' argument 2 names different: declaration 'b' definition 'priority'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:38:1: note: Function 'SDL_LogMessage_DEFAULT' argument 2 names different: declaration 'b' definition 'priority'.
SDL_DYNAPI_PROC(void,SDL_LogMessage,(int a, SDL_LogPriority b, SDL_PRINTF_FORMAT_STRING const char *c, ...),(a,b,c),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogMessage_DEFAULT' argument 2 names different: declaration 'b' definition 'priority'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogMessage_DEFAULT' argument 3 names different: declaration 'c' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:38:1: note: Function 'SDL_LogMessage_DEFAULT' argument 3 names different: declaration 'c' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogMessage,(int a, SDL_LogPriority b, SDL_PRINTF_FORMAT_STRING const char *c, ...),(a,b,c),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogMessage_DEFAULT' argument 3 names different: declaration 'c' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogVerbose_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:39:1: note: Function 'SDL_LogVerbose_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogVerbose,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogVerbose_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogVerbose_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:39:1: note: Function 'SDL_LogVerbose_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogVerbose,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogVerbose_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogDebug_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:35:1: note: Function 'SDL_LogDebug_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogDebug,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogDebug_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogDebug_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:35:1: note: Function 'SDL_LogDebug_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogDebug,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogDebug_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogInfo_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:37:1: note: Function 'SDL_LogInfo_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogInfo,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogInfo_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogInfo_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:37:1: note: Function 'SDL_LogInfo_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogInfo,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogInfo_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogWarn_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:40:1: note: Function 'SDL_LogWarn_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogWarn,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogWarn_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogWarn_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:40:1: note: Function 'SDL_LogWarn_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogWarn,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogWarn_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogError_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:36:1: note: Function 'SDL_LogError_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogError,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogError_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogError_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:36:1: note: Function 'SDL_LogError_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogError,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogError_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogCritical_DEFAULT' argument 1 names different: declaration 'a' definition 'category'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:34:1: note: Function 'SDL_LogCritical_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_PROC(void,SDL_LogCritical,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogCritical_DEFAULT' argument 1 names different: declaration 'a' definition 'category'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi.c:202:1: style:inconclusive: Function 'SDL_LogCritical_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'. [funcArgNamesDifferent]
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/dynapi/SDL_dynapi_procs.h:34:1: note: Function 'SDL_LogCritical_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_PROC(void,SDL_LogCritical,(int a, SDL_PRINTF_FORMAT_STRING const char *b, ...),(a,b),)
^
src/dynapi/SDL_dynapi.c:202:1: note: Function 'SDL_LogCritical_DEFAULT' argument 2 names different: declaration 'b' definition 'fmt'.
SDL_DYNAPI_VARARGS(static, _DEFAULT, SDL_InitDynamicAPI())
^
src/events/SDL_clipboardevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_displayevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_dropevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_dropevents.c:33:18: style: The scope of the variable 'last_drop_x' can be reduced. [variableScope]
    static float last_drop_x = 0;
                 ^
src/events/SDL_dropevents.c:34:18: style: The scope of the variable 'last_drop_y' can be reduced. [variableScope]
    static float last_drop_y = 0;
                 ^
src/events/SDL_events.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 71 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_events.c:695:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, used, sentinels_expected = 0;
        ^
src/events/SDL_events.c:695:18: style: The scope of the variable 'sentinels_expected' can be reduced. [variableScope]
    int i, used, sentinels_expected = 0;
                 ^
src/events/SDL_events.c:1022:17: style: The scope of the variable 'wakeup_window' can be reduced. [variableScope]
    SDL_Window *wakeup_window;
                ^
src/events/SDL_keyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_keyboard.c:1039:25: style: The scope of the variable 'advance' can be reduced. [variableScope]
        size_t pos = 0, advance, length = SDL_strlen(text);
                        ^
src/events/SDL_mouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 74 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_mouse.c:1168:13: style: The scope of the variable 'pixel' can be reduced. [variableScope]
    Uint32 *pixel;
            ^
src/events/SDL_quit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_touch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/SDL_touch.c:75:16: style: The scope of the variable 'touch' can be reduced. [variableScope]
    SDL_Touch *touch;
               ^
src/events/SDL_touch.c:155:30: style:inconclusive: Function 'SDL_AddTouch' argument 1 names different: declaration 'id' definition 'touchID'. [funcArgNamesDifferent]
int SDL_AddTouch(SDL_TouchID touchID, SDL_TouchDeviceType type, const char *name)
                             ^
src/events/SDL_touch_c.h:40:37: note: Function 'SDL_AddTouch' argument 1 names different: declaration 'id' definition 'touchID'.
extern int SDL_AddTouch(SDL_TouchID id, SDL_TouchDeviceType type, const char *name);
                                    ^
src/events/SDL_touch.c:155:30: note: Function 'SDL_AddTouch' argument 1 names different: declaration 'id' definition 'touchID'.
int SDL_AddTouch(SDL_TouchID touchID, SDL_TouchDeviceType type, const char *name)
                             ^
src/events/SDL_windowevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/events/imKStoUCS.c:313:34: warning: Either the condition 'keysym>0x589' is redundant or the array 'keysym_to_unicode_590_5fe[111]' is accessed at index -6, which is out of bounds. [negativeIndex]
 return keysym_to_unicode_590_5fe[keysym - 0x590];
                                 ^
src/events/imKStoUCS.c:312:21: note: Assuming that condition 'keysym>0x589' is not redundant
    else if (keysym > 0x589 && keysym < 0x5ff)
                    ^
src/events/imKStoUCS.c:313:34: note: Negative array index
 return keysym_to_unicode_590_5fe[keysym - 0x590];
                                 ^
src/file/SDL_rwops.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 25 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/file/SDL_rwops.c:358:0: information: Skipping configuration 'HAVE_FSEEKO;HAVE_STDIO_H;OFF_MAX;OFF_MIN' since the value of 'OFF_MAX' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (offset < (Sint64)(FSEEK_OFF_MIN) || offset > (Sint64)(FSEEK_OFF_MAX)) {
^
src/file/SDL_rwops.c:358:0: information: Skipping configuration 'HAVE_FSEEKO;HAVE_STDIO_H;OFF_MAX;OFF_MIN' since the value of 'OFF_MIN' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (offset < (Sint64)(FSEEK_OFF_MIN) || offset > (Sint64)(FSEEK_OFF_MAX)) {
^
src/filesystem/unix/SDL_sysfilesystem.c:200:16: style: Condition 'retval==NULL' is always true [knownConditionTrueFalse]
    if (retval == NULL && (access("/proc", F_OK) == 0)) {
               ^
src/filesystem/unix/SDL_sysfilesystem.c:125:20: note: Assignment 'retval=NULL', assigned value is 0
    char *retval = NULL;
                   ^
src/filesystem/unix/SDL_sysfilesystem.c:200:16: note: Condition 'retval==NULL' is always true
    if (retval == NULL && (access("/proc", F_OK) == 0)) {
               ^
src/filesystem/unix/SDL_sysfilesystem.c:45:13: style: The scope of the variable 'rc' can be reduced. [variableScope]
    ssize_t rc = -1;
            ^
src/filesystem/unix/SDL_sysfilesystem.c:45:16: style: Variable 'rc' is assigned a value that is never used. [unreadVariable]
    ssize_t rc = -1;
               ^
src/filesystem/windows/SDL_sysfilesystem.c:74:5: warning:inconclusive: Possible null pointer dereference: path [nullPointer]
    path[i + 1] = '\0'; /* chop off filename. */
    ^
src/filesystem/windows/SDL_sysfilesystem.c:35:19: note: Assignment 'path=NULL', assigned value is 0
    WCHAR *path = NULL;
                  ^
src/filesystem/windows/SDL_sysfilesystem.c:61:13: note: Assuming condition is false
    if (len == 0) {
            ^
src/filesystem/windows/SDL_sysfilesystem.c:74:5: note: Null pointer dereference
    path[i + 1] = '\0'; /* chop off filename. */
    ^
src/haptic/SDL_haptic.c:601:20: style: The scope of the variable 'max_gain' can be reduced. [variableScope]
    int real_gain, max_gain;
                   ^
src/haptic/darwin/SDL_syshaptic.c:1031:20: style: The scope of the variable 'custom' can be reduced. [variableScope]
    FFCUSTOMFORCE *custom;
                   ^
src/haptic/darwin/SDL_syshaptic.c:242:11: style: Variable 'refCF' is assigned a value that is never used. [unreadVariable]
    refCF = 0;
          ^
src/haptic/linux/SDL_syshaptic.c:453:9: style: The scope of the variable 'fd' can be reduced. [variableScope]
    int fd;
        ^
src/haptic/windows/SDL_dinputhaptic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/haptic/windows/SDL_dinputhaptic.c:384:18: style: Variable 'dipdw.dwData' is reassigned a value before the old one has been used. [redundantAssignment]
    dipdw.dwData = DIPROPAUTOCENTER_OFF;
                 ^
src/haptic/windows/SDL_dinputhaptic.c:376:18: note: dipdw.dwData is assigned
    dipdw.dwData = 10000;
                 ^
src/haptic/windows/SDL_dinputhaptic.c:384:18: note: dipdw.dwData is overwritten
    dipdw.dwData = DIPROPAUTOCENTER_OFF;
                 ^
src/haptic/windows/SDL_dinputhaptic.c:868:20: style: The scope of the variable 'custom' can be reduced. [variableScope]
    DICUSTOMFORCE *custom;
                   ^
src/haptic/windows/SDL_dinputhaptic.c:1086:18: style: Variable 'dipdw.dwData' is assigned a value that is never used. [unreadVariable]
    dipdw.dwData = (DWORD)gain * 100; /* 0 to 10,000 */
                 ^
src/haptic/windows/SDL_dinputhaptic.c:1107:18: style: Variable 'dipdw.dwData' is assigned a value that is never used. [unreadVariable]
    dipdw.dwData = (autocenter == 0) ? DIPROPAUTOCENTER_OFF : DIPROPAUTOCENTER_ON;
                 ^
src/haptic/windows/SDL_windowshaptic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 17 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/haptic/windows/SDL_xinputhaptic.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 59 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hidapi/SDL_hidapi.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 84 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hidapi/SDL_hidapi.c:1147:22: warning: Logical conjunction always evaluates to false: attempts > 0 && success == 0. [incorrectLogicOperator]
    if (attempts > 0 && success == 0) {
                     ^
src/hidapi/SDL_hidapi.c:1044:20: note: 'attempts' is assigned value '0' here.
    int attempts = 0, success = 0;
                   ^
src/hidapi/SDL_hidapi.c:1044:33: note: 'success' is assigned value '0' here.
    int attempts = 0, success = 0;
                                ^
src/hidapi/SDL_hidapi.c:1147:22: note: Logical conjunction always evaluates to false: attempts > 0 && success == 0.
    if (attempts > 0 && success == 0) {
                     ^
src/hidapi/SDL_hidapi.c:1147:18: style: The comparison 'attempts > 0' is always false. [knownConditionTrueFalse]
    if (attempts > 0 && success == 0) {
                 ^
src/hidapi/SDL_hidapi.c:1044:20: note: 'attempts' is assigned value '0' here.
    int attempts = 0, success = 0;
                   ^
src/hidapi/SDL_hidapi.c:1147:18: note: The comparison 'attempts > 0' is always false.
    if (attempts > 0 && success == 0) {
                 ^
src/hidapi/SDL_hidapi.c:1147:33: style: The comparison 'success == 0' is always true. [knownConditionTrueFalse]
    if (attempts > 0 && success == 0) {
                                ^
src/hidapi/SDL_hidapi.c:1044:33: note: 'success' is assigned value '0' here.
    int attempts = 0, success = 0;
                                ^
src/hidapi/SDL_hidapi.c:1147:33: note: The comparison 'success == 0' is always true.
    if (attempts > 0 && success == 0) {
                                ^
src/hidapi/SDL_hidapi.c:448:20: style: The scope of the variable 'len' can be reduced. [variableScope]
            size_t len;
                   ^
src/hidapi/SDL_hidapi.c:444:22: style: union member 'Anonymous1::enough_for_inotify' is never used. [unusedStructMember]
                char enough_for_inotify[sizeof(struct inotify_event) + NAME_MAX + 1];
                     ^
src/hidapi/android/hid.cpp:467:6: style:inconclusive: Technically the member function 'CHIDDevice::GetId' can be const. [functionConst]
 int GetId()
     ^
src/hidapi/android/hid.cpp:472:25: style:inconclusive: Technically the member function 'CHIDDevice::GetDeviceInfo' can be const. [functionConst]
 const hid_device_info *GetDeviceInfo()
                        ^
src/hidapi/android/hid.cpp:482:7: performance:inconclusive: Technically the member function 'CHIDDevice::ExceptionCheck' can be static (but you may consider moving to unnamed namespace). [functionStatic]
 void ExceptionCheck( JNIEnv *env, const char *pszMethodName )
      ^
src/hidapi/android/hid.cpp:162:2: style: Class 'hid_mutex_guard' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 hid_mutex_guard( pthread_mutex_t *pMutex ) : m_pMutex( pMutex )
 ^
src/hidapi/android/hid.cpp:525:4: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
   if ( m_bIsWaitingForOpen )
   ^
src/hidapi/android/hid.cpp:529:4: note: Found duplicate branches for 'if' and 'else'.
   else
   ^
src/hidapi/android/hid.cpp:525:4: note: Found duplicate branches for 'if' and 'else'.
   if ( m_bIsWaitingForOpen )
   ^
src/hidapi/android/hid.cpp:1165:56: style:inconclusive: Function 'PLATFORM_hid_write' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int  HID_API_EXPORT HID_API_CALL hid_write(hid_device *device, const unsigned char *data, size_t length)
                                                       ^
src/hidapi/hidapi/hidapi.h:226:58: note: Function 'PLATFORM_hid_write' argument 1 names different: declaration 'dev' definition 'device'.
  int  HID_API_EXPORT HID_API_CALL hid_write(hid_device *dev, const unsigned char *data, size_t length);
                                                         ^
src/hidapi/android/hid.cpp:1165:56: note: Function 'PLATFORM_hid_write' argument 1 names different: declaration 'dev' definition 'device'.
int  HID_API_EXPORT HID_API_CALL hid_write(hid_device *device, const unsigned char *data, size_t length)
                                                       ^
src/hidapi/android/hid.cpp:1205:62: style:inconclusive: Function 'PLATFORM_hid_read_timeout' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT HID_API_CALL hid_read_timeout(hid_device *device, unsigned char *data, size_t length, int milliseconds)
                                                             ^
src/hidapi/hidapi/hidapi.h:247:64: note: Function 'PLATFORM_hid_read_timeout' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT HID_API_CALL hid_read_timeout(hid_device *dev, unsigned char *data, size_t length, int milliseconds);
                                                               ^
src/hidapi/android/hid.cpp:1205:62: note: Function 'PLATFORM_hid_read_timeout' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT HID_API_CALL hid_read_timeout(hid_device *device, unsigned char *data, size_t length, int milliseconds)
                                                             ^
src/hidapi/android/hid.cpp:1231:55: style:inconclusive: Function 'PLATFORM_hid_read' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int  HID_API_EXPORT HID_API_CALL hid_read(hid_device *device, unsigned char *data, size_t length)
                                                      ^
src/hidapi/hidapi/hidapi.h:267:57: note: Function 'PLATFORM_hid_read' argument 1 names different: declaration 'dev' definition 'device'.
  int  HID_API_EXPORT HID_API_CALL hid_read(hid_device *dev, unsigned char *data, size_t length);
                                                        ^
src/hidapi/android/hid.cpp:1231:55: note: Function 'PLATFORM_hid_read' argument 1 names different: declaration 'dev' definition 'device'.
int  HID_API_EXPORT HID_API_CALL hid_read(hid_device *device, unsigned char *data, size_t length)
                                                      ^
src/hidapi/android/hid.cpp:1238:66: style:inconclusive: Function 'PLATFORM_hid_set_nonblocking' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int  HID_API_EXPORT HID_API_CALL hid_set_nonblocking(hid_device *device, int nonblock)
                                                                 ^
src/hidapi/hidapi/hidapi.h:287:68: note: Function 'PLATFORM_hid_set_nonblocking' argument 1 names different: declaration 'dev' definition 'device'.
  int  HID_API_EXPORT HID_API_CALL hid_set_nonblocking(hid_device *dev, int nonblock);
                                                                   ^
src/hidapi/android/hid.cpp:1238:66: note: Function 'PLATFORM_hid_set_nonblocking' argument 1 names different: declaration 'dev' definition 'device'.
int  HID_API_EXPORT HID_API_CALL hid_set_nonblocking(hid_device *device, int nonblock)
                                                                 ^
src/hidapi/android/hid.cpp:1243:69: style:inconclusive: Function 'PLATFORM_hid_send_feature_report' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT HID_API_CALL hid_send_feature_report(hid_device *device, const unsigned char *data, size_t length)
                                                                    ^
src/hidapi/hidapi/hidapi.h:315:71: note: Function 'PLATFORM_hid_send_feature_report' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT HID_API_CALL hid_send_feature_report(hid_device *dev, const unsigned char *data, size_t length);
                                                                      ^
src/hidapi/android/hid.cpp:1243:69: note: Function 'PLATFORM_hid_send_feature_report' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT HID_API_CALL hid_send_feature_report(hid_device *device, const unsigned char *data, size_t length)
                                                                    ^
src/hidapi/android/hid.cpp:1259:68: style:inconclusive: Function 'PLATFORM_hid_get_feature_report' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT HID_API_CALL hid_get_feature_report(hid_device *device, unsigned char *data, size_t length)
                                                                   ^
src/hidapi/hidapi/hidapi.h:340:70: note: Function 'PLATFORM_hid_get_feature_report' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT HID_API_CALL hid_get_feature_report(hid_device *dev, unsigned char *data, size_t length);
                                                                     ^
src/hidapi/android/hid.cpp:1259:68: note: Function 'PLATFORM_hid_get_feature_report' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT HID_API_CALL hid_get_feature_report(hid_device *device, unsigned char *data, size_t length)
                                                                   ^
src/hidapi/android/hid.cpp:1274:56: style:inconclusive: Function 'PLATFORM_hid_close' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
void HID_API_EXPORT HID_API_CALL hid_close(hid_device *device)
                                                       ^
src/hidapi/hidapi/hidapi.h:347:58: note: Function 'PLATFORM_hid_close' argument 1 names different: declaration 'dev' definition 'device'.
  void HID_API_EXPORT HID_API_CALL hid_close(hid_device *dev);
                                                         ^
src/hidapi/android/hid.cpp:1274:56: note: Function 'PLATFORM_hid_close' argument 1 names different: declaration 'dev' definition 'device'.
void HID_API_EXPORT HID_API_CALL hid_close(hid_device *device)
                                                       ^
src/hidapi/android/hid.cpp:1297:65: style:inconclusive: Function 'PLATFORM_hid_get_manufacturer_string' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT_CALL hid_get_manufacturer_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                                ^
src/hidapi/hidapi/hidapi.h:359:67: note: Function 'PLATFORM_hid_get_manufacturer_string' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT_CALL hid_get_manufacturer_string(hid_device *dev, wchar_t *string, size_t maxlen);
                                                                  ^
src/hidapi/android/hid.cpp:1297:65: note: Function 'PLATFORM_hid_get_manufacturer_string' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT_CALL hid_get_manufacturer_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                                ^
src/hidapi/android/hid.cpp:1311:60: style:inconclusive: Function 'PLATFORM_hid_get_product_string' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT_CALL hid_get_product_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                           ^
src/hidapi/hidapi/hidapi.h:371:62: note: Function 'PLATFORM_hid_get_product_string' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT_CALL hid_get_product_string(hid_device *dev, wchar_t *string, size_t maxlen);
                                                             ^
src/hidapi/android/hid.cpp:1311:60: note: Function 'PLATFORM_hid_get_product_string' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT_CALL hid_get_product_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                           ^
src/hidapi/android/hid.cpp:1325:66: style:inconclusive: Function 'PLATFORM_hid_get_serial_number_string' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT_CALL hid_get_serial_number_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                                 ^
src/hidapi/hidapi/hidapi.h:383:68: note: Function 'PLATFORM_hid_get_serial_number_string' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT_CALL hid_get_serial_number_string(hid_device *dev, wchar_t *string, size_t maxlen);
                                                                   ^
src/hidapi/android/hid.cpp:1325:66: note: Function 'PLATFORM_hid_get_serial_number_string' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT_CALL hid_get_serial_number_string(hid_device *device, wchar_t *string, size_t maxlen)
                                                                 ^
src/hidapi/android/hid.cpp:1339:60: style:inconclusive: Function 'PLATFORM_hid_get_indexed_string' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
int HID_API_EXPORT_CALL hid_get_indexed_string(hid_device *device, int string_index, wchar_t *string, size_t maxlen)
                                                           ^
src/hidapi/hidapi/hidapi.h:396:62: note: Function 'PLATFORM_hid_get_indexed_string' argument 1 names different: declaration 'dev' definition 'device'.
  int HID_API_EXPORT_CALL hid_get_indexed_string(hid_device *dev, int string_index, wchar_t *string, size_t maxlen);
                                                             ^
src/hidapi/android/hid.cpp:1339:60: note: Function 'PLATFORM_hid_get_indexed_string' argument 1 names different: declaration 'dev' definition 'device'.
int HID_API_EXPORT_CALL hid_get_indexed_string(hid_device *device, int string_index, wchar_t *string, size_t maxlen)
                                                           ^
src/hidapi/android/hid.cpp:1344:66: style:inconclusive: Function 'PLATFORM_hid_error' argument 1 names different: declaration 'dev' definition 'device'. [funcArgNamesDifferent]
HID_API_EXPORT const wchar_t* HID_API_CALL hid_error(hid_device *device)
                                                                 ^
src/hidapi/hidapi/hidapi.h:407:68: note: Function 'PLATFORM_hid_error' argument 1 names different: declaration 'dev' definition 'device'.
  HID_API_EXPORT const wchar_t* HID_API_CALL hid_error(hid_device *dev);
                                                                   ^
src/hidapi/android/hid.cpp:1344:66: note: Function 'PLATFORM_hid_error' argument 1 names different: declaration 'dev' definition 'device'.
HID_API_EXPORT const wchar_t* HID_API_CALL hid_error(hid_device *device)
                                                                 ^
src/hidapi/hidapi/hidapi.h:55:0: information: Skipping configuration 'NAMESPACE' since the value of 'NAMESPACE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
namespace NAMESPACE {
^
src/hidapi/hidapi/hidapi.h:55:0: information: Skipping configuration 'NAMESPACE;_WIN32' since the value of 'NAMESPACE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
namespace NAMESPACE {
^
src/hidapi/hidtest/hidtest.cpp:97:2: warning: %d in format string (no. 1) requires 'int' but the argument type is 'wchar_t'. [invalidPrintfArgType_sint]
 printf("Serial Number String: (%d) %ls", wstr[0], wstr);
 ^
src/hidapi/hidtest/hidtest.cpp:120:6: style: Variable 'res' is reassigned a value before the old one has been used. [redundantAssignment]
 res = hid_send_feature_report(handle, buf, 17);
     ^
src/hidapi/hidtest/hidtest.cpp:112:6: note: res is assigned
 res = hid_read(handle, buf, 17);
     ^
src/hidapi/hidtest/hidtest.cpp:120:6: note: res is overwritten
 res = hid_send_feature_report(handle, buf, 17);
     ^
src/hidapi/libusb/hid.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 63 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hidapi/libusb/hid.c:1476:7: style: The scope of the variable 'res' can be reduced. [variableScope]
  int res;
      ^
src/hidapi/libusb/hidusb.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 62 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/hidapi/linux/hid.c:283:33: style: The scope of the variable 'hid_dev' can be reduced. [variableScope]
 struct udev_device *udev_dev, *hid_dev;
                                ^
src/hidapi/linux/hid.c:55:0: information: Skipping configuration 'NAMESPACE' since the value of 'NAMESPACE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
namespace NAMESPACE
^
src/hidapi/linux/hid.c:55:0: information: Skipping configuration 'NAMESPACE;_WIN32' since the value of 'NAMESPACE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
namespace NAMESPACE
^
src/hidapi/mac/hid.c:932:8: style:inconclusive: Found duplicate branches for 'if' and 'else'. [duplicateBranch]
  else if (res == kIOReturnUnsupported) {
       ^
src/hidapi/mac/hid.c:936:3: note: Found duplicate branches for 'if' and 'else'.
  else {
  ^
src/hidapi/mac/hid.c:932:8: note: Found duplicate branches for 'if' and 'else'.
  else if (res == kIOReturnUnsupported) {
       ^
src/hidapi/mac/hid.c:405:14: style: The scope of the variable 'keys' can be reduced. [variableScope]
 const void *keys[2] = { (void *) CFSTR(kIOHIDDeviceUsagePageKey), (void *) CFSTR(kIOHIDDeviceUsageKey) };
             ^
src/hidapi/mac/hid.c:406:14: style: The scope of the variable 'vals' can be reduced. [variableScope]
 const void *vals[2] = { (void *) pageNumRef, (void *) usageNumRef };
             ^
src/hidapi/mac/hid.c:431:14: style: The scope of the variable 'keys' can be reduced. [variableScope]
 const void *keys[1] = { (void *) CFSTR(kIOHIDVendorIDKey) };
             ^
src/hidapi/mac/hid.c:432:14: style: The scope of the variable 'vals' can be reduced. [variableScope]
 const void *vals[1] = { (void *) vidNumRef };
             ^
src/hidapi/testgui/mac_support.cpp:112:6: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
 err = AEInstallEventHandler(kCoreEventClass, kAEReopenApplication,
     ^
src/hidapi/testgui/mac_support.cpp:110:6: note: err is assigned
 err = AEInstallEventHandler(kCoreEventClass, kAEQuitApplication,
     ^
src/hidapi/testgui/mac_support.cpp:112:6: note: err is overwritten
 err = AEInstallEventHandler(kCoreEventClass, kAEReopenApplication,
     ^
src/hidapi/testgui/mac_support.cpp:58:28: style: Variable 'ignoreErrForThisSample' is assigned a value that is never used. [unreadVariable]
    ignoreErrForThisSample = AEProcessAppleEvent(&eventRecord);
                           ^
src/hidapi/testgui/mac_support.cpp:112:6: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
 err = AEInstallEventHandler(kCoreEventClass, kAEReopenApplication,
     ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::device_list' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::connect_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::disconnect_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::rescan_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::output_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::connected_label' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::output_text' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::output_len' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::feature_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::get_feature_button' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::feature_text' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::feature_len' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::get_feature_text' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::input_text' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::title_font' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::devices' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:73:2: warning:inconclusive: Member variable 'MainWindow::connected_device' is not initialized in the constructor. [uninitMemberVar]
 MainWindow() {};
 ^
src/hidapi/testgui/test.cpp:75:2: style: Class 'MainWindow' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
 MainWindow(FXApp *a);
 ^
src/hidapi/testgui/test.cpp:351:11: style: The scope of the variable 'len' can be reduced. [variableScope]
 long int len;
          ^
src/hidapi/testgui/test.cpp:115:31: style:inconclusive: Function 'MainWindow' argument 1 names different: declaration 'a' definition 'app'. [funcArgNamesDifferent]
MainWindow::MainWindow(FXApp *app)
                              ^
src/hidapi/testgui/test.cpp:75:20: note: Function 'MainWindow' argument 1 names different: declaration 'a' definition 'app'.
 MainWindow(FXApp *a);
                   ^
src/hidapi/testgui/test.cpp:115:31: note: Function 'MainWindow' argument 1 names different: declaration 'a' definition 'app'.
MainWindow::MainWindow(FXApp *app)
                              ^
src/hidapi/windows/hid.c:745:7: style: Variable 'res' is reassigned a value before the old one has been used. [redundantAssignment]
  res = SetupDiGetDeviceInterfaceDetailA(device_info_set,
      ^
src/hidapi/windows/hid.c:731:7: note: res is assigned
  res = SetupDiGetDeviceInterfaceDetailA(device_info_set,
      ^
src/hidapi/windows/hid.c:745:7: note: res is overwritten
  res = SetupDiGetDeviceInterfaceDetailA(device_info_set,
      ^
src/hidapi/windows/hid.c:291:8: error: Uninitialized variable: msg [uninitvar]
 ptr = msg;
       ^
src/hidapi/windows/hid.c:286:6: note: Assuming condition is false
 if (!count)
     ^
src/hidapi/windows/hid.c:291:8: note: Uninitialized variable: msg
 ptr = msg;
       ^
src/hidapi/windows/hid.c:292:10: error: Uninitialized variable: ptr [uninitvar]
 while (*ptr) {
         ^
src/hidapi/windows/hid.c:286:6: note: Assuming condition is false
 if (!count)
     ^
src/hidapi/windows/hid.c:291:8: note: Assignment 'ptr=msg', assigned value is <Uninit>
 ptr = msg;
       ^
src/hidapi/windows/hid.c:292:10: note: Uninitialized variable: ptr
 while (*ptr) {
         ^
src/hidapi/windows/hid.c:303:27: error: Uninitialized variable: msg [uninitvar]
 device->last_error_str = msg;
                          ^
src/hidapi/windows/hid.c:286:6: note: Assuming condition is false
 if (!count)
     ^
src/hidapi/windows/hid.c:303:27: note: Uninitialized variable: msg
 device->last_error_str = msg;
                          ^
src/hidapi/windows/hid.c:698:17: style: Condition 'hid_init()<0' is always false [knownConditionTrueFalse]
 if (hid_init() < 0)
                ^
src/hidapi/windows/hid.c:1015:17: style: Condition 'hid_init()<0' is always false [knownConditionTrueFalse]
 if (hid_init() < 0) {
                ^
src/joystick/SDL_gamepad.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/SDL_gamepad.c:1474:35: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    char *buf, *line, *line_end, *tmp, *comma, line_platform[64];
                                  ^
src/joystick/SDL_gamepad.c:1892:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/joystick/SDL_gamepad.c:3020:23: style: The scope of the variable 'pGamepadMap' can be reduced. [variableScope]
    GamepadMapping_t *pGamepadMap;
                      ^
src/joystick/SDL_joystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 90 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/SDL_joystick.c:177:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
        ^
src/joystick/SDL_joystick.c:177:12: style: The scope of the variable 'num_joysticks' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
           ^
src/joystick/SDL_joystick.c:177:27: style: The scope of the variable 'device_index' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
                          ^
src/joystick/SDL_joystick.c:354:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
        ^
src/joystick/SDL_joystick.c:354:12: style: The scope of the variable 'num_joysticks' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
           ^
src/joystick/SDL_joystick.c:354:27: style: The scope of the variable 'device_index' can be reduced. [variableScope]
    int i, num_joysticks, device_index;
                          ^
src/joystick/SDL_joystick.c:355:9: style: The scope of the variable 'joystick_index' can be reduced. [variableScope]
    int joystick_index = 0, total_joysticks = 0;
        ^
src/joystick/SDL_joystick.c:355:29: style: The scope of the variable 'total_joysticks' can be reduced. [variableScope]
    int joystick_index = 0, total_joysticks = 0;
                            ^
src/joystick/SDL_joystick.c:474:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/joystick/SDL_joystick.c:1223:19: style: The scope of the variable 'joysticklistprev' can be reduced. [variableScope]
    SDL_Joystick *joysticklistprev;
                  ^
src/joystick/SDL_joystick.c:1224:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/joystick/android/SDL_sysjoystick.c:201:23: style: The scope of the variable 'item' can be reduced. [variableScope]
    SDL_joylist_item *item;
                      ^
src/joystick/android/SDL_sysjoystick.c:220:23: style: The scope of the variable 'item' can be reduced. [variableScope]
    SDL_joylist_item *item;
                      ^
src/joystick/android/SDL_sysjoystick.c:620:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i;
            ^
src/joystick/android/SDL_sysjoystick.c:237:38: style:inconclusive: Function 'Android_OnJoy' argument 2 names different: declaration 'axisnum' definition 'axis'. [funcArgNamesDifferent]
int Android_OnJoy(int device_id, int axis, float value)
                                     ^
src/joystick/android/SDL_sysjoystick_c.h:33:45: note: Function 'Android_OnJoy' argument 2 names different: declaration 'axisnum' definition 'axis'.
extern int Android_OnJoy(int device_id, int axisnum, float value);
                                            ^
src/joystick/android/SDL_sysjoystick.c:237:38: note: Function 'Android_OnJoy' argument 2 names different: declaration 'axisnum' definition 'axis'.
int Android_OnJoy(int device_id, int axis, float value)
                                     ^
src/joystick/android/SDL_sysjoystick.c:370:34: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
            if (button_mask & (1 << i)) {
                                 ^
src/joystick/android/SDL_sysjoystick.c:370:34: error: Signed integer overflow for expression '1<<i'. [integerOverflow]
            if (button_mask & (1 << i)) {
                                 ^
src/joystick/bsd/SDL_bsdjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/bsd/SDL_bsdjoystick.c:340:23: style: Checking if unsigned expression 'rep->size' is less than zero. [unsignedLessThanZero]
        if (rep->size <= 0) {
                      ^
src/joystick/bsd/SDL_bsdjoystick.c:153:9: style: struct member 'Anonymous1::uhid_report' is never used. [unusedStructMember]
    int uhid_report;
        ^
src/joystick/bsd/SDL_bsdjoystick.c:456:0: information: Skipping configuration 'SDL_JOYSTICK_HIDAPI;SDL_JOYSTICK_USBHID;USB_GET_DEVICEINFO' since the value of 'USB_GET_DEVICEINFO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (ioctl(hw->fd, USB_GET_DEVICEINFO, &di) != -1) {
^
src/joystick/bsd/SDL_bsdjoystick.c:456:0: information: Skipping configuration 'SDL_JOYSTICK_USBHID;USB_GET_DEVICEINFO' since the value of 'USB_GET_DEVICEINFO' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        if (ioctl(hw->fd, USB_GET_DEVICEINFO, &di) != -1) {
^
src/joystick/darwin/SDL_iokitjoystick.c:605:17: style: The scope of the variable 'keys' can be reduced. [variableScope]
    const void *keys[2] = { (void *)CFSTR(kIOHIDDeviceUsagePageKey), (void *)CFSTR(kIOHIDDeviceUsageKey) };
                ^
src/joystick/darwin/SDL_iokitjoystick.c:606:17: style: The scope of the variable 'vals' can be reduced. [variableScope]
    const void *vals[2] = { (void *)pageNumRef, (void *)usageNumRef };
                ^
src/joystick/darwin/SDL_iokitjoystick.c:177:18: style: Variable 'value' is assigned a value that is never used. [unreadVariable]
    SInt32 value = 0;
                 ^
src/joystick/darwin/SDL_iokitjoystick.c:928:21: style: Variable 'goodRead' is assigned a value that is never used. [unreadVariable]
    int i, goodRead = SDL_FALSE;
                    ^
src/joystick/emscripten/SDL_sysjoystick.c:178:17: style: The scope of the variable 'i' can be reduced. [variableScope]
    int retval, i, numjs;
                ^
src/joystick/emscripten/SDL_sysjoystick.c:328:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, result, buttonState;
        ^
src/joystick/emscripten/SDL_sysjoystick.c:328:12: style: The scope of the variable 'result' can be reduced. [variableScope]
    int i, result, buttonState;
           ^
src/joystick/emscripten/SDL_sysjoystick.c:328:20: style: The scope of the variable 'buttonState' can be reduced. [variableScope]
    int i, result, buttonState;
                   ^
src/joystick/hidapi/SDL_hidapi_gamecube.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_ps3.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_ps3.c:582:9: style: The scope of the variable 'size' can be reduced. [variableScope]
    int size;
        ^
src/joystick/hidapi/SDL_hidapi_ps4.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_ps4.c:183:9: style: The scope of the variable 'size' can be reduced. [variableScope]
    int size;
        ^
src/joystick/hidapi/SDL_hidapi_ps4.c:879:9: style: The scope of the variable 'touchpad_x' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
        ^
src/joystick/hidapi/SDL_hidapi_ps4.c:879:21: style: The scope of the variable 'touchpad_y' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
                    ^
src/joystick/hidapi/SDL_hidapi_ps4.c:1185:22: style: The scope of the variable 'serial' can be reduced. [variableScope]
                char serial[18];
                     ^
src/joystick/hidapi/SDL_hidapi_ps5.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_ps5.c:275:9: style: The scope of the variable 'size' can be reduced. [variableScope]
    int size;
        ^
src/joystick/hidapi/SDL_hidapi_ps5.c:1253:9: style: The scope of the variable 'touchpad_x' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
        ^
src/joystick/hidapi/SDL_hidapi_ps5.c:1253:21: style: The scope of the variable 'touchpad_y' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
                    ^
src/joystick/hidapi/SDL_hidapi_ps5.c:1296:9: style: The scope of the variable 'touchpad_x' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
        ^
src/joystick/hidapi/SDL_hidapi_ps5.c:1296:21: style: The scope of the variable 'touchpad_y' can be reduced. [variableScope]
    int touchpad_x, touchpad_y;
                    ^
src/joystick/hidapi/SDL_hidapi_rumble.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_steam.c:852:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        pData += nLength;
        ^
src/joystick/hidapi/SDL_hidapi_switch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1776:68: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fGyroScaleY * (float)values[1]);
                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1777:66: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fGyroScaleZ * (float)values[2];
                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1780:69: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[0] = -(ctx->m_IMUScaleData.fAccelScaleY * (float)values[1]);
                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2062:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2063:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2065:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2066:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:2068:98: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO, sensor_timestamp[2], &packet->imuState[0].sGyroX);
                                                                                                 ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2069:99: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[0].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL, sensor_timestamp[2], &packet->imuState[0].sAccelX);
                                                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2074:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[0], &packet->imuState[2].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2075:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[2].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[0], &packet->imuState[2].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sGyroX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:2077:100: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sGyroX' value is lifetime=sGyroX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_GYRO_L, sensor_timestamp[1], &packet->imuState[1].sGyroX);
                                                                                                   ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sGyroX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: error: The address of local variable 'sAccelX' is accessed at non-zero index. [objectIndex]
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Address of variable taken here.
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:2078:101: note: Calling function 'SendSensorUpdate', 6th argument '&packet->imuState[1].sAccelX' value is lifetime=sAccelX
                SendSensorUpdate(timestamp, joystick, ctx, SDL_SENSOR_ACCEL_L, sensor_timestamp[1], &packet->imuState[1].sAccelX);
                                                                                                    ^
src/joystick/hidapi/SDL_hidapi_switch.c:1781:67: note: The address of local variable 'sAccelX' is accessed at non-zero index.
        data[1] = ctx->m_IMUScaleData.fAccelScaleZ * (float)values[2];
                                                                  ^
src/joystick/hidapi/SDL_hidapi_switch.c:969:9: style: The scope of the variable 'attempts' can be reduced. [variableScope]
    int attempts = 0;
        ^
src/joystick/hidapi/SDL_hidapi_switch.c:969:18: style: Variable 'attempts' is assigned a value that is never used. [unreadVariable]
    int attempts = 0;
                 ^
src/joystick/hidapi/SDL_hidapi_wii.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_wii.c:1480:125: style: Condition 'ctx->m_eCommState==k_eWiiCommunicationState_CheckMotionPlusStage1' is always false [knownConditionTrueFalse]
                SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "HIDAPI Wii: Motion Plus DISCONNECTED (stage %d)\n", ctx->m_eCommState == k_eWiiCommunicationState_CheckMotionPlusStage1 ? 1 : 2);
                                                                                                                            ^
src/joystick/hidapi/SDL_hidapi_wii.c:1472:42: note: Assuming that condition 'ctx->m_eCommState==k_eWiiCommunicationState_CheckMotionPlusStage1' is not redundant
            } else if (ctx->m_eCommState == k_eWiiCommunicationState_CheckMotionPlusStage1) {
                                         ^
src/joystick/hidapi/SDL_hidapi_wii.c:1480:125: note: Condition 'ctx->m_eCommState==k_eWiiCommunicationState_CheckMotionPlusStage1' is always false
                SDL_LogDebug(SDL_LOG_CATEGORY_INPUT, "HIDAPI Wii: Motion Plus DISCONNECTED (stage %d)\n", ctx->m_eCommState == k_eWiiCommunicationState_CheckMotionPlusStage1 ? 1 : 2);
                                                                                                                            ^
src/joystick/hidapi/SDL_hidapi_xbox360.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_xbox360w.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 37 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapi_xboxone.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/hidapi/SDL_hidapijoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/linux/SDL_sysjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/linux/SDL_sysjoystick.c:1818:12: style: Variable 'mapped' is reassigned a value before the old one has been used. [redundantAssignment]
    mapped = 0;
           ^
src/joystick/linux/SDL_sysjoystick.c:1811:16: note: mapped is assigned
        mapped |= 0x2;
               ^
src/joystick/linux/SDL_sysjoystick.c:1818:12: note: mapped is overwritten
    mapped = 0;
           ^
src/joystick/linux/SDL_sysjoystick.c:1883:12: style: Variable 'mapped' is reassigned a value before the old one has been used. [redundantAssignment]
    mapped = 0;
           ^
src/joystick/linux/SDL_sysjoystick.c:1876:16: note: mapped is assigned
        mapped |= 0x2;
               ^
src/joystick/linux/SDL_sysjoystick.c:1883:12: note: mapped is overwritten
    mapped = 0;
           ^
src/joystick/linux/SDL_sysjoystick.c:1932:20: style: Variable 'mapped' is assigned a value that is never used. [unreadVariable]
            mapped |= 0xF;
                   ^
src/joystick/linux/SDL_sysjoystick.c:1945:20: style: Variable 'mapped' is assigned a value that is never used. [unreadVariable]
            mapped |= 0xF;
                   ^
src/joystick/ps2/SDL_sysjoystick.c:69:10: style: The scope of the variable 'actAlign' can be reduced. [variableScope]
    char actAlign[6];
         ^
src/joystick/ps2/SDL_sysjoystick.c:70:9: style: The scope of the variable 'res' can be reduced. [variableScope]
    int res;
        ^
src/joystick/ps2/SDL_sysjoystick.c:271:13: style: The scope of the variable 'i' can be reduced. [variableScope]
    uint8_t i;
            ^
src/joystick/ps2/SDL_sysjoystick.c:272:13: style: The scope of the variable 'previous_axis' can be reduced. [variableScope]
    uint8_t previous_axis, current_axis;
            ^
src/joystick/ps2/SDL_sysjoystick.c:272:28: style: The scope of the variable 'current_axis' can be reduced. [variableScope]
    uint8_t previous_axis, current_axis;
                           ^
src/joystick/ps2/SDL_sysjoystick.c:273:20: style: The scope of the variable 'previous' can be reduced. [variableScope]
    uint16_t mask, previous, current;
                   ^
src/joystick/ps2/SDL_sysjoystick.c:273:30: style: The scope of the variable 'current' can be reduced. [variableScope]
    uint16_t mask, previous, current;
                             ^
src/joystick/psp/SDL_sysjoystick.c:198:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/joystick/vita/SDL_sysjoystick.c:215:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/joystick/windows/SDL_dinputjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/windows/SDL_dinputjoystick.c:798:16: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
        result = IDirectInputDevice8_Unacquire(joystick->hwdata->InputDevice);
               ^
src/joystick/windows/SDL_dinputjoystick.c:788:16: note: result is assigned
        result =
               ^
src/joystick/windows/SDL_dinputjoystick.c:798:16: note: result is overwritten
        result = IDirectInputDevice8_Unacquire(joystick->hwdata->InputDevice);
               ^
src/joystick/windows/SDL_dinputjoystick.c:832:18: style: Variable 'dipdw.dwData' is reassigned a value before the old one has been used. [redundantAssignment]
    dipdw.dwData = INPUT_QSIZE;
                 ^
src/joystick/windows/SDL_dinputjoystick.c:808:22: note: dipdw.dwData is assigned
        dipdw.dwData = DIPROPAUTOCENTER_ON;
                     ^
src/joystick/windows/SDL_dinputjoystick.c:832:18: note: dipdw.dwData is overwritten
    dipdw.dwData = INPUT_QSIZE;
                 ^
src/joystick/windows/SDL_dinputjoystick.c:835:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result =
           ^
src/joystick/windows/SDL_dinputjoystick.c:810:16: note: result is assigned
        result =
               ^
src/joystick/windows/SDL_dinputjoystick.c:835:12: note: result is overwritten
    result =
           ^
src/joystick/windows/SDL_dinputjoystick.c:587:35: style:inconclusive: Function 'SDL_DINPUT_JoystickPresent' argument 1 names different: declaration 'vendor' definition 'vendor_id'. [funcArgNamesDifferent]
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                  ^
src/joystick/windows/SDL_dinputjoystick_c.h:30:51: note: Function 'SDL_DINPUT_JoystickPresent' argument 1 names different: declaration 'vendor' definition 'vendor_id'.
extern SDL_bool SDL_DINPUT_JoystickPresent(Uint16 vendor, Uint16 product, Uint16 version);
                                                  ^
src/joystick/windows/SDL_dinputjoystick.c:587:35: note: Function 'SDL_DINPUT_JoystickPresent' argument 1 names different: declaration 'vendor' definition 'vendor_id'.
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                  ^
src/joystick/windows/SDL_dinputjoystick.c:587:53: style:inconclusive: Function 'SDL_DINPUT_JoystickPresent' argument 2 names different: declaration 'product' definition 'product_id'. [funcArgNamesDifferent]
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                                    ^
src/joystick/windows/SDL_dinputjoystick_c.h:30:66: note: Function 'SDL_DINPUT_JoystickPresent' argument 2 names different: declaration 'product' definition 'product_id'.
extern SDL_bool SDL_DINPUT_JoystickPresent(Uint16 vendor, Uint16 product, Uint16 version);
                                                                 ^
src/joystick/windows/SDL_dinputjoystick.c:587:53: note: Function 'SDL_DINPUT_JoystickPresent' argument 2 names different: declaration 'product' definition 'product_id'.
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                                    ^
src/joystick/windows/SDL_dinputjoystick.c:587:72: style:inconclusive: Function 'SDL_DINPUT_JoystickPresent' argument 3 names different: declaration 'version' definition 'version_number'. [funcArgNamesDifferent]
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                                                       ^
src/joystick/windows/SDL_dinputjoystick_c.h:30:82: note: Function 'SDL_DINPUT_JoystickPresent' argument 3 names different: declaration 'version' definition 'version_number'.
extern SDL_bool SDL_DINPUT_JoystickPresent(Uint16 vendor, Uint16 product, Uint16 version);
                                                                                 ^
src/joystick/windows/SDL_dinputjoystick.c:587:72: note: Function 'SDL_DINPUT_JoystickPresent' argument 3 names different: declaration 'version' definition 'version_number'.
SDL_DINPUT_JoystickPresent(Uint16 vendor_id, Uint16 product_id, Uint16 version_number)
                                                                       ^
src/joystick/windows/SDL_rawinputjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 15 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/windows/SDL_rawinputjoystick.c:1823:30: style: Variable 'has_trigger_data' is assigned a value that is never used. [unreadVariable]
            has_trigger_data = SDL_TRUE;
                             ^
src/joystick/windows/SDL_windows_gaming_input.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/windows/SDL_windows_gaming_input.c:591:22: style: The scope of the variable 'i' can be reduced. [variableScope]
            unsigned i, count = 0;
                     ^
src/joystick/windows/SDL_windowsjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 65 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/windows/SDL_xinputjoystick.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/joystick/windows/SDL_xinputjoystick.c:523:16: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
        result = XINPUTGETBATTERYINFORMATION(joystick->hwdata->userid, BATTERY_DEVTYPE_GAMEPAD, &XBatteryInformation);
               ^
src/libm/e_atan2.c:65:10: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
 m = ((hy>>31)&1)|((hx>>30)&2); /* 2*sign(x)+sign(y) */
         ^
src/libm/e_fmod.c:38:18: style: Same expression on both sides of '/'. [duplicateExpression]
     return (x*y)/(x*y);
                 ^
src/libm/e_fmod.c:69:18: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 68. [shiftTooManyBitsSigned]
         hx = (hx<<n)|(lx>>(32-n));
                 ^
src/libm/e_fmod.c:68:10: note: Assuming that condition 'n<=31' is not redundant
     if(n<=31) {
         ^
src/libm/e_fmod.c:69:18: note: Shift
         hx = (hx<<n)|(lx>>(32-n));
                 ^
src/libm/e_fmod.c:81:18: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour. See condition at line 80. [shiftTooManyBitsSigned]
         hy = (hy<<n)|(ly>>(32-n));
                 ^
src/libm/e_fmod.c:80:10: note: Assuming that condition 'n<=31' is not redundant
     if(n<=31) {
         ^
src/libm/e_fmod.c:81:18: note: Shift
         hy = (hy<<n)|(ly>>(32-n));
                 ^
src/libm/e_log.c:88:9: style: The scope of the variable 'hfsq' can be reduced. [variableScope]
 double hfsq,f,s,z,R,w,t1,t2,dk;
        ^
src/libm/e_pow.c:193:8: style: Condition 'ix>=0x3ff00000' is always true [knownConditionTrueFalse]
  if(ix>=0x3ff00000) return (hy>0)? huge*huge:tiny*tiny;
       ^
src/libm/e_pow.c:192:8: note: Assuming that condition 'ix<=0x3fefffff' is not redundant
  if(ix<=0x3fefffff) return (hy<0)? huge*huge:tiny*tiny;
       ^
src/libm/e_pow.c:193:8: note: Condition 'ix>=0x3ff00000' is always true
  if(ix>=0x3ff00000) return (hy>0)? huge*huge:tiny*tiny;
       ^
src/libm/e_pow.c:178:13: style: Same expression on both sides of '/'. [duplicateExpression]
   z = (z-z)/(z-z); /* (-1)**non-int is NaN */
            ^
src/libm/e_pow.c:187:54: style: Same expression on both sides of '/'. [duplicateExpression]
 if(((((u_int32_t)hx>>31)-1)|yisint)==0) return (x-x)/(x-x);
                                                     ^
src/libm/e_pow.c:106:14: style: The scope of the variable 'z_h' can be reduced. [variableScope]
 double z,ax,z_h,z_l,p_h,p_l;
             ^
src/libm/e_pow.c:106:18: style: The scope of the variable 'z_l' can be reduced. [variableScope]
 double z,ax,z_h,z_l,p_h,p_l;
                 ^
src/libm/e_rem_pio2.c:72:15: style: The scope of the variable 'w' can be reduced. [variableScope]
 double z=0.0,w,t,r,fn;
              ^
src/libm/e_rem_pio2.c:72:17: style: The scope of the variable 't' can be reduced. [variableScope]
 double z=0.0,w,t,r,fn;
                ^
src/libm/e_rem_pio2.c:72:19: style: The scope of the variable 'r' can be reduced. [variableScope]
 double z=0.0,w,t,r,fn;
                  ^
src/libm/e_rem_pio2.c:72:21: style: The scope of the variable 'fn' can be reduced. [variableScope]
 double z=0.0,w,t,r,fn;
                    ^
src/libm/e_rem_pio2.c:74:15: style: The scope of the variable 'j' can be reduced. [variableScope]
 int32_t e0,i,j,nx,n,ix,hx;
              ^
src/libm/e_sqrt.c:106:15: style: Same expression on both sides of '/'. [duplicateExpression]
  return (x-x)/(x-x);  /* sqrt(-ve) = sNaN */
              ^
src/libm/e_sqrt.c:92:23: style: The scope of the variable 'i' can be reduced. [variableScope]
 int32_t ix0,s0,q,m,t,i;
                      ^
src/libm/e_sqrt.c:93:14: style: The scope of the variable 't1' can be reduced. [variableScope]
 u_int32_t r,t1,s1,ix1,q1;
             ^
src/libm/k_cos.c:62:9: style: The scope of the variable 'a' can be reduced. [variableScope]
 double a,hz,z,r,qx;
        ^
src/libm/k_cos.c:62:11: style: The scope of the variable 'hz' can be reduced. [variableScope]
 double a,hz,z,r,qx;
          ^
src/libm/k_cos.c:62:18: style: The scope of the variable 'qx' can be reduced. [variableScope]
 double a,hz,z,r,qx;
                 ^
src/libm/k_rem_pio2.c:253:6: style: The if condition is the same as the previous if condition [duplicateCondition]
 if(z==0.0) {
     ^
src/libm/k_rem_pio2.c:147:11: note: 'zero' is assigned value '0.0' here.
zero   = 0.0,
          ^
src/libm/k_rem_pio2.c:236:6: note: First condition
 if(z==zero) {
     ^
src/libm/k_rem_pio2.c:253:6: note: Second condition
 if(z==0.0) {
     ^
src/libm/k_tan.c:104:28: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
     return (double)(1-((hx>>30)&2))*(v-2.0*(x-(w*w/(w+v)-r)));
                           ^
src/libm/s_cos.c:49:14: style: The scope of the variable 'z' can be reduced. [variableScope]
 double y[2],z=0.0;
             ^
src/libm/s_floor.c:39:11: portability: Shifting a negative value is technically undefined behaviour [shiftNegativeLHS]
 j0 = ((i0>>20)&0x7ff)-0x3ff;
          ^
src/libm/s_modf.c:28:31: style:inconclusive: Function 'SDL_uclibc_modf' argument 2 names different: declaration 'y' definition 'iptr'. [funcArgNamesDifferent]
double modf(double x, double *iptr)
                              ^
src/libm/math_libm.h:39:42: note: Function 'SDL_uclibc_modf' argument 2 names different: declaration 'y' definition 'iptr'.
double SDL_uclibc_modf(double x, double *y);
                                         ^
src/libm/s_modf.c:28:31: note: Function 'SDL_uclibc_modf' argument 2 names different: declaration 'y' definition 'iptr'.
double modf(double x, double *iptr)
                              ^
src/libm/s_sin.c:49:14: style: The scope of the variable 'z' can be reduced. [variableScope]
 double y[2],z=0.0;
             ^
src/libm/s_tan.c:48:14: style: The scope of the variable 'z' can be reduced. [variableScope]
 double y[2],z=0.0;
             ^
src/loadso/dlopen/SDL_sysloadso.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/locale/emscripten/SDL_syslocale.c:40:22: error: syntax error: =[...]; [syntaxError]
                list = [ oneOfThese ];
                     ^
src/power/SDL_power.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 13 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/power/linux/SDL_syspower.c:191:15: style: Condition 'secs<0' is always true [knownConditionTrueFalse]
    if ((secs < 0) && (*seconds < 0)) {
              ^
src/power/linux/SDL_syspower.c:134:17: note: Assignment 'secs=-1', assigned value is -1
    int secs = -1;
                ^
src/power/linux/SDL_syspower.c:191:15: note: Condition 'secs<0' is always true
    if ((secs < 0) && (*seconds < 0)) {
              ^
src/power/psp/SDL_syspower.c:42:16: style: Variable '*state' is reassigned a value before the old one has been used. [redundantAssignment]
        *state = SDL_POWERSTATE_NO_BATTERY;
               ^
src/power/psp/SDL_syspower.c:37:12: note: *state is assigned
    *state = SDL_POWERSTATE_UNKNOWN;
           ^
src/power/psp/SDL_syspower.c:42:16: note: *state is overwritten
        *state = SDL_POWERSTATE_NO_BATTERY;
               ^
src/power/vita/SDL_syspower.c:41:9: style: Condition '!battery' is always false [knownConditionTrueFalse]
    if (!battery) {
        ^
src/power/vita/SDL_syspower.c:33:19: note: Assignment 'battery=1', assigned value is 1
    int battery = 1;
                  ^
src/power/vita/SDL_syspower.c:41:9: note: Condition '!battery' is always false
    if (!battery) {
        ^
src/power/vita/SDL_syspower.c:42:16: style: Variable '*state' is reassigned a value before the old one has been used. [redundantAssignment]
        *state = SDL_POWERSTATE_NO_BATTERY;
               ^
src/power/vita/SDL_syspower.c:37:12: note: *state is assigned
    *state = SDL_POWERSTATE_UNKNOWN;
           ^
src/power/vita/SDL_syspower.c:42:16: note: *state is overwritten
        *state = SDL_POWERSTATE_NO_BATTERY;
               ^
src/render/SDL_render.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 18 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/SDL_render.c:3419:12: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
    xy0_ = (const float *)((const char *)xy + prev * xy_stride);
           ^
src/render/SDL_render.c:3419:28: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    xy0_ = (const float *)((const char *)xy + prev * xy_stride);
                           ^
src/render/SDL_render.c:3420:12: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
    xy1_ = (const float *)((const char *)xy + k * xy_stride);
           ^
src/render/SDL_render.c:3420:28: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
    xy1_ = (const float *)((const char *)xy + k * xy_stride);
                           ^
src/render/SDL_render.c:3428:16: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
        uv0_ = (const float *)((const char *)uv + prev * uv_stride);
               ^
src/render/SDL_render.c:3428:32: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        uv0_ = (const float *)((const char *)uv + prev * uv_stride);
                               ^
src/render/SDL_render.c:3429:16: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
        uv1_ = (const float *)((const char *)uv + k * uv_stride);
               ^
src/render/SDL_render.c:3429:32: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
        uv1_ = (const float *)((const char *)uv + k * uv_stride);
                               ^
src/render/SDL_render.c:3557:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + k0 * xy_stride);
                   ^
src/render/SDL_render.c:3557:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + k0 * xy_stride);
                                   ^
src/render/SDL_render.c:3558:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + k1 * xy_stride);
                   ^
src/render/SDL_render.c:3558:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + k1 * xy_stride);
                                   ^
src/render/SDL_render.c:3559:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + k2 * xy_stride);
                   ^
src/render/SDL_render.c:3559:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + k2 * xy_stride);
                                   ^
src/render/SDL_render.c:3615:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + A * xy_stride);
                   ^
src/render/SDL_render.c:3615:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + A * xy_stride);
                                   ^
src/render/SDL_render.c:3616:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + B * xy_stride);
                   ^
src/render/SDL_render.c:3616:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + B * xy_stride);
                                   ^
src/render/SDL_render.c:3617:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + C * xy_stride);
                   ^
src/render/SDL_render.c:3617:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + C * xy_stride);
                                   ^
src/render/SDL_render.c:3635:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + C2 * xy_stride);
                   ^
src/render/SDL_render.c:3635:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy2_ = (const float *)((const char *)xy + C2 * xy_stride);
                                   ^
src/render/SDL_render.c:3673:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + A * xy_stride);
                   ^
src/render/SDL_render.c:3673:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy0_ = (const float *)((const char *)xy + A * xy_stride);
                                   ^
src/render/SDL_render.c:3674:20: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + B * xy_stride);
                   ^
src/render/SDL_render.c:3674:36: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy1_ = (const float *)((const char *)xy + B * xy_stride);
                                   ^
src/render/SDL_render.c:3677:24: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
                uv0_ = (const float *)((const char *)uv + A * uv_stride);
                       ^
src/render/SDL_render.c:3677:40: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
                uv0_ = (const float *)((const char *)uv + A * uv_stride);
                                       ^
src/render/SDL_render.c:3678:24: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
                uv1_ = (const float *)((const char *)uv + B * uv_stride);
                       ^
src/render/SDL_render.c:3678:40: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
                uv1_ = (const float *)((const char *)uv + B * uv_stride);
                                       ^
src/render/SDL_render.c:3847:32: portability: Casting between const signed char * and const float * which have an incompatible binary data representation. [invalidPointerCast]
            const float *uv_ = (const float *)((const char *)uv + i * uv_stride);
                               ^
src/render/SDL_render.c:3847:48: portability:inconclusive: Casting from const float * to const signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            const float *uv_ = (const float *)((const char *)uv + i * uv_stride);
                                               ^
src/render/SDL_render.c:3417:32: style: The scope of the variable 'uv0_' can be reduced. [variableScope]
    const float *xy0_, *xy1_, *uv0_, *uv1_;
                               ^
src/render/SDL_render.c:3417:39: style: The scope of the variable 'uv1_' can be reduced. [variableScope]
    const float *xy0_, *xy1_, *uv0_, *uv1_;
                                      ^
src/render/SDL_render.c:1758:19: style: The scope of the variable 'renderer' can be reduced. [variableScope]
    SDL_Renderer *renderer;
                  ^
src/render/SDL_render.c:1824:19: style: The scope of the variable 'renderer' can be reduced. [variableScope]
    SDL_Renderer *renderer;
                  ^
src/render/direct3d/SDL_render_d3d.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/direct3d11/SDL_render_d3d11.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 50 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/direct3d11/SDL_render_winrt.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/direct3d12/SDL_render_d3d12.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/opengl/SDL_render_gl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 76 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/opengles2/SDL_render_gles2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 51 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/render/opengles2/SDL_render_gles2.c:852:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/opengles2/SDL_render_gles2.c:852:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/opengles2/SDL_render_gles2.c:854:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                  ^
src/render/opengles2/SDL_render_gles2.c:854:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                            ^
src/render/opengles2/SDL_render_gles2.c:892:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/opengles2/SDL_render_gles2.c:892:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/opengles2/SDL_render_gles2.c:1917:12: style: The scope of the variable 'src' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
           ^
src/render/opengles2/SDL_render_gles2.c:1917:18: style: The scope of the variable 'dst' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
                 ^
src/render/opengles2/SDL_render_gles2.c:1917:24: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
                       ^
src/render/opengles2/SDL_render_gles2.c:1918:15: style: The scope of the variable 'length' can be reduced. [variableScope]
    int w, h, length, rows;
              ^
src/render/opengles2/SDL_render_gles2.c:1918:23: style: The scope of the variable 'rows' can be reduced. [variableScope]
    int w, h, length, rows;
                      ^
src/render/ps2/SDL_render_ps2.c:258:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/ps2/SDL_render_ps2.c:258:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/ps2/SDL_render_ps2.c:260:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                  ^
src/render/ps2/SDL_render_ps2.c:260:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                            ^
src/render/ps2/SDL_render_ps2.c:290:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/ps2/SDL_render_ps2.c:290:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/ps2/SDL_render_ps2.c:151:9: style: The scope of the variable 'row' can be reduced. [variableScope]
    int row, length, dpitch;
        ^
src/render/ps2/SDL_render_ps2.c:637:53: style: Clarify calculation precedence for '&' and '?'. [clarifyCalculation]
    data->vsync = flags & SDL_RENDERER_PRESENTVSYNC ? (dynamicVsync ? 2 : 1) : 0;
                                                    ^
src/render/ps2/SDL_render_ps2.c:404:66: portability: 'vertices' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        const GSPRIMUVPOINT *verts = (GSPRIMUVPOINT *) (vertices + cmd->data.draw.first);
                                                                 ^
src/render/ps2/SDL_render_ps2.c:410:61: portability: 'vertices' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        const GSPRIMPOINT *verts = (GSPRIMPOINT *)(vertices + cmd->data.draw.first);
                                                            ^
src/render/ps2/SDL_render_ps2.c:421:57: portability: 'vertices' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    const GSPRIMPOINT *verts = (GSPRIMPOINT *)(vertices + cmd->data.draw.first);
                                                        ^
src/render/ps2/SDL_render_ps2.c:434:57: portability: 'vertices' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    const GSPRIMPOINT *verts = (GSPRIMPOINT *)(vertices + cmd->data.draw.first);
                                                        ^
src/render/psp/SDL_render_psp.c:679:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/psp/SDL_render_psp.c:679:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/psp/SDL_render_psp.c:714:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/psp/SDL_render_psp.c:714:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/psp/SDL_render_psp.c:716:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                  ^
src/render/psp/SDL_render_psp.c:716:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                            ^
src/render/psp/SDL_render_psp.c:568:9: style: The scope of the variable 'row' can be reduced. [variableScope]
    int row, length, dpitch;
        ^
src/render/psp/SDL_render_psp.c:793:14: style: Variable 'verts' is assigned a value that is never used. [unreadVariable]
        verts++;
             ^
src/render/vitagxm/SDL_render_vita_gxm.c:754:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/vitagxm/SDL_render_vita_gxm.c:754:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/vitagxm/SDL_render_vita_gxm.c:756:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                  ^
src/render/vitagxm/SDL_render_vita_gxm.c:756:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            uv_ = (float *)((char *)uv + j * uv_stride);
                            ^
src/render/vitagxm/SDL_render_vita_gxm.c:792:19: portability: Casting between signed char * and float * which have an incompatible binary data representation. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                  ^
src/render/vitagxm/SDL_render_vita_gxm.c:792:29: portability:inconclusive: Casting from const float * to signed char * is not portable due to different binary data representations on different platforms. [invalidPointerCast]
            xy_ = (float *)((char *)xy + j * xy_stride);
                            ^
src/render/vitagxm/SDL_render_vita_gxm.c:1089:12: style: The scope of the variable 'src' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
           ^
src/render/vitagxm/SDL_render_vita_gxm.c:1089:18: style: The scope of the variable 'dst' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
                 ^
src/render/vitagxm/SDL_render_vita_gxm.c:1089:24: style: The scope of the variable 'tmp' can be reduced. [variableScope]
    Uint8 *src, *dst, *tmp;
                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:1090:15: style: The scope of the variable 'length' can be reduced. [variableScope]
    int w, h, length, rows;
              ^
src/render/vitagxm/SDL_render_vita_gxm.c:1090:23: style: The scope of the variable 'rows' can be reduced. [variableScope]
    int w, h, length, rows;
                      ^
src/render/vitagxm/SDL_render_vita_gxm.c:371:20: portability: 'pixels' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            pixels += pitch;
                   ^
src/render/vitagxm/SDL_render_vita_gxm.c:354:40: style: Variable 'vita_texture' is assigned a value that is never used. [unreadVariable]
    VITA_GXM_TextureData *vita_texture = (VITA_GXM_TextureData *)texture->driverdata;
                                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:385:67: portability: 'gxm_texture_get_datap(vita_texture->tex)' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        Uint8 *Dpixels = gxm_texture_get_datap(vita_texture->tex) + (vita_texture->pitch * vita_texture->h);
                                                                  ^
src/render/vitagxm/SDL_render_vita_gxm.c:398:24: portability: 'pixels' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                pixels += uv_src_pitch;
                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:399:22: portability: 'Udst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                Udst += uv_pitch;
                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:409:24: portability: 'pixels' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                pixels += uv_src_pitch;
                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:410:22: portability: 'Vdst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                Vdst += uv_pitch;
                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:422:25: portability: 'Dpixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        UVdst = Dpixels + (UVrect.y * uv_pitch) + UVrect.x;
                        ^
src/render/vitagxm/SDL_render_vita_gxm.c:432:24: portability: 'pixels' is of type 'const void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                pixels += uv_src_pitch;
                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:433:23: portability: 'UVdst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                UVdst += uv_pitch;
                      ^
src/render/vitagxm/SDL_render_vita_gxm.c:482:27: portability: 'pixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Vdst = pixels + (UVrect.y * uv_pitch) + UVrect.x;
                          ^
src/render/vitagxm/SDL_render_vita_gxm.c:483:27: portability: 'pixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Udst = pixels + (uv_pitch * ((vita_texture->h + 1) / 2)) + (UVrect.y * uv_pitch) + UVrect.x;
                          ^
src/render/vitagxm/SDL_render_vita_gxm.c:483:70: portability: 'pixels+(uv_pitch*((vita_texture->h+1)/2))' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Udst = pixels + (uv_pitch * ((vita_texture->h + 1) / 2)) + (UVrect.y * uv_pitch) + UVrect.x;
                                                                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:485:27: portability: 'pixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Udst = pixels + (UVrect.y * uv_pitch) + UVrect.x;
                          ^
src/render/vitagxm/SDL_render_vita_gxm.c:486:27: portability: 'pixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Vdst = pixels + (uv_pitch * ((vita_texture->h + 1) / 2)) + (UVrect.y * uv_pitch) + UVrect.x;
                          ^
src/render/vitagxm/SDL_render_vita_gxm.c:486:70: portability: 'pixels+(uv_pitch*((vita_texture->h+1)/2))' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
            Vdst = pixels + (uv_pitch * ((vita_texture->h + 1) / 2)) + (UVrect.y * uv_pitch) + UVrect.x;
                                                                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:498:22: portability: 'Udst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                Udst += uv_pitch;
                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:509:22: portability: 'Vdst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                Vdst += uv_pitch;
                     ^
src/render/vitagxm/SDL_render_vita_gxm.c:553:24: portability: 'pixels' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        UVdst = pixels + (UVrect.y * uv_pitch) + UVrect.x;
                       ^
src/render/vitagxm/SDL_render_vita_gxm.c:564:23: portability: 'UVdst' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
                UVdst += uv_pitch;
                      ^
src/render/vitagxm/SDL_render_vita_gxm_tools.c:579:9: style: Variable 'err' is reassigned a value before the old one has been used. [redundantAssignment]
    err = sceGxmShaderPatcherCreate(&patcherParams, &data->shaderPatcher);
        ^
src/render/vitagxm/SDL_render_vita_gxm_tools.c:520:9: note: err is assigned
    err = sceGxmDepthStencilSurfaceInit(
        ^
src/render/vitagxm/SDL_render_vita_gxm_tools.c:579:9: note: err is overwritten
    err = sceGxmShaderPatcherCreate(&patcherParams, &data->shaderPatcher);
        ^
src/sensor/SDL_sensor.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/sensor/SDL_sensor.c:108:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_sensors, device_index;
        ^
src/sensor/SDL_sensor.c:108:12: style: The scope of the variable 'num_sensors' can be reduced. [variableScope]
    int i, num_sensors, device_index;
           ^
src/sensor/SDL_sensor.c:108:25: style: The scope of the variable 'device_index' can be reduced. [variableScope]
    int i, num_sensors, device_index;
                        ^
src/sensor/SDL_sensor.c:109:9: style: The scope of the variable 'sensor_index' can be reduced. [variableScope]
    int sensor_index = 0, total_sensors = 0;
        ^
src/sensor/SDL_sensor.c:109:27: style: The scope of the variable 'total_sensors' can be reduced. [variableScope]
    int sensor_index = 0, total_sensors = 0;
                          ^
src/sensor/SDL_sensor.c:163:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_sensors, device_index;
        ^
src/sensor/SDL_sensor.c:163:12: style: The scope of the variable 'num_sensors' can be reduced. [variableScope]
    int i, num_sensors, device_index;
           ^
src/sensor/SDL_sensor.c:163:25: style: The scope of the variable 'device_index' can be reduced. [variableScope]
    int i, num_sensors, device_index;
                        ^
src/sensor/android/SDL_androidsensor.c:49:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, sensors_count;
        ^
src/sensor/n3ds/SDL_n3dssensor.c:151:11: style: The scope of the variable 'data' can be reduced. [variableScope]
    float data[3];
          ^
src/sensor/n3ds/SDL_n3dssensor.c:169:11: style: The scope of the variable 'data' can be reduced. [variableScope]
    float data[3];
          ^
src/sensor/windows/SDL_windowssensor.c:330:25: style: The scope of the variable 'old_sensor' can be reduced. [variableScope]
    SDL_Windows_Sensor *old_sensor;
                        ^
src/stdlib/SDL_getenv.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/stdlib/SDL_getenv.c:210:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len, i;
           ^
src/stdlib/SDL_getenv.c:210:17: style: The scope of the variable 'i' can be reduced. [variableScope]
    size_t len, i;
                ^
src/stdlib/SDL_iconv.c:197:10: style: The scope of the variable 'fromcode_buffer' can be reduced. [variableScope]
    char fromcode_buffer[64];
         ^
src/stdlib/SDL_iconv.c:198:10: style: The scope of the variable 'tocode_buffer' can be reduced. [variableScope]
    char tocode_buffer[64];
         ^
src/stdlib/SDL_iconv.c:793:12: style: The scope of the variable 'retCode' can be reduced. [variableScope]
    size_t retCode = 0;
           ^
src/stdlib/SDL_iconv.c:793:20: style: Variable 'retCode' is assigned a value that is never used. [unreadVariable]
    size_t retCode = 0;
                   ^
src/stdlib/SDL_malloc.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 32 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/stdlib/SDL_malloc.c:4064:24: warning: The address of local variable 'sz' might be accessed at non-zero index. [objectIndex]
      contents_size += request2size(sizes[i]);
                       ^
src/stdlib/SDL_malloc.c:4422:33: note: Address of variable taken here.
  return ialloc(gm, n_elements, &sz, 3, chunks);
                                ^
src/stdlib/SDL_malloc.c:4422:33: note: Calling function 'ialloc', 3rd argument '&sz' value is lifetime=sz
  return ialloc(gm, n_elements, &sz, 3, chunks);
                                ^
src/stdlib/SDL_malloc.c:4064:24: note: The address of local variable 'sz' might be accessed at non-zero index.
      contents_size += request2size(sizes[i]);
                       ^
src/stdlib/SDL_malloc.c:2899:35: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      size_t mfree = m->topsize + TOP_FOOT_SIZE;
                                  ^
src/stdlib/SDL_malloc.c:2946:33: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      used = fp - (m->topsize + TOP_FOOT_SIZE);
                                ^
src/stdlib/SDL_malloc.c:3307:39: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  chunk_plus_offset(p, psize)->head = TOP_FOOT_SIZE;
                                      ^
src/stdlib/SDL_malloc.c:3403:41: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                        ^
src/stdlib/SDL_malloc.c:3485:17: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        asize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
                ^
src/stdlib/SDL_malloc.c:3499:15: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      asize = granularity_align(nb - m->topsize + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
              ^
src/stdlib/SDL_malloc.c:3511:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
            asize < nb + TOP_FOOT_SIZE + SIZE_T_ONE) {
                         ^
src/stdlib/SDL_malloc.c:3512:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
          size_t esize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE - asize);
                         ^
src/stdlib/SDL_malloc.c:3536:23: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    size_t req = nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE;
                      ^
src/stdlib/SDL_malloc.c:3549:20: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    size_t asize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
                   ^
src/stdlib/SDL_malloc.c:3559:26: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        if (ssize > nb + TOP_FOOT_SIZE) {
                         ^
src/stdlib/SDL_malloc.c:3579:47: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                              ^
src/stdlib/SDL_malloc.c:3583:64: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
        init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) -TOP_FOOT_SIZE);
                                                               ^
src/stdlib/SDL_malloc.c:3649:59: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
      if (!cinuse(p) && (char*)p + psize >= base + size - TOP_FOOT_SIZE) {
                                                          ^
src/stdlib/SDL_malloc.c:3680:12: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    pad += TOP_FOOT_SIZE; /* ensure enough room for segment overhead */
           ^
src/stdlib/SDL_malloc.c:2899:35: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      size_t mfree = m->topsize + TOP_FOOT_SIZE;
                                  ^
src/stdlib/SDL_malloc.c:2946:33: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      used = fp - (m->topsize + TOP_FOOT_SIZE);
                                ^
src/stdlib/SDL_malloc.c:3307:39: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  chunk_plus_offset(p, psize)->head = TOP_FOOT_SIZE;
                                      ^
src/stdlib/SDL_malloc.c:3403:41: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                        ^
src/stdlib/SDL_malloc.c:3485:17: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        asize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
                ^
src/stdlib/SDL_malloc.c:3499:15: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      asize = granularity_align(nb - m->topsize + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
              ^
src/stdlib/SDL_malloc.c:3511:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
            asize < nb + TOP_FOOT_SIZE + SIZE_T_ONE) {
                         ^
src/stdlib/SDL_malloc.c:3512:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
          size_t esize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE - asize);
                         ^
src/stdlib/SDL_malloc.c:3536:23: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    size_t req = nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE;
                      ^
src/stdlib/SDL_malloc.c:3549:20: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    size_t asize = granularity_align(nb + TOP_FOOT_SIZE + MALLOC_ALIGNMENT + SIZE_T_ONE);
                   ^
src/stdlib/SDL_malloc.c:3559:26: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        if (ssize > nb + TOP_FOOT_SIZE) {
                         ^
src/stdlib/SDL_malloc.c:3579:47: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        init_top(m, (mchunkptr)tbase, tsize - TOP_FOOT_SIZE);
                                              ^
src/stdlib/SDL_malloc.c:3583:64: style: Same value in both branches of ternary operator. [duplicateValueTernary]
        init_top(m, mn, (size_t)((tbase + tsize) - (char*)mn) -TOP_FOOT_SIZE);
                                                               ^
src/stdlib/SDL_malloc.c:3649:59: style: Same value in both branches of ternary operator. [duplicateValueTernary]
      if (!cinuse(p) && (char*)p + psize >= base + size - TOP_FOOT_SIZE) {
                                                          ^
src/stdlib/SDL_malloc.c:3680:12: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    pad += TOP_FOOT_SIZE; /* ensure enough room for segment overhead */
           ^
src/stdlib/SDL_malloc.c:3778:27: style: Opposite expression on both sides of '&'. [oppositeExpression]
      binmap_t leastbit = least_bit(leftbits);
                          ^
src/stdlib/SDL_malloc.c:3820:23: style: Opposite expression on both sides of '&'. [oppositeExpression]
  binmap_t leastbit = least_bit(m->treemap);
                      ^
src/stdlib/SDL_malloc.c:4198:31: style: Opposite expression on both sides of '&'. [oppositeExpression]
          binmap_t leastbit = least_bit(leftbits);
                              ^
src/stdlib/SDL_malloc.c:3490:19: style: Checking if unsigned expression 'asize' is less than zero. [unsignedLessThanZero]
        if (asize < HALF_MAX_SIZE_T &&
                  ^
src/stdlib/SDL_malloc.c:3501:17: style: Checking if unsigned expression 'asize' is less than zero. [unsignedLessThanZero]
      if (asize < HALF_MAX_SIZE_T &&
                ^
src/stdlib/SDL_malloc.c:3510:19: style: Checking if unsigned expression 'asize' is less than zero. [unsignedLessThanZero]
        if (asize < HALF_MAX_SIZE_T &&
                  ^
src/stdlib/SDL_malloc.c:3513:21: style: Checking if unsigned expression 'esize' is less than zero. [unsignedLessThanZero]
          if (esize < HALF_MAX_SIZE_T) {
                    ^
src/stdlib/SDL_malloc.c:3550:15: style: Checking if unsigned expression 'asize' is less than zero. [unsignedLessThanZero]
    if (asize < HALF_MAX_SIZE_T) {
              ^
src/stdlib/SDL_malloc.c:3703:21: style: Unsigned expression 'extra' can't be negative so it is unnecessary to test it. [unsignedPositive]
          if (extra >= HALF_MAX_SIZE_T) /* Avoid wrapping negative */
                    ^
src/stdlib/SDL_malloc.c:672:23: style: struct member 'mallinfo::smblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE smblks;   /* always 0 */
                      ^
src/stdlib/SDL_malloc.c:673:23: style: struct member 'mallinfo::hblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE hblks;    /* always 0 */
                      ^
src/stdlib/SDL_malloc.c:676:23: style: struct member 'mallinfo::fsmblks' is never used. [unusedStructMember]
  MALLINFO_FIELD_TYPE fsmblks;  /* always 0 */
                      ^
src/stdlib/SDL_malloc.c:2937:15: style: Variable 'fp' is assigned a value that is never used. [unreadVariable]
    size_t fp = 0;
              ^
src/stdlib/SDL_malloc.c:3518:19: style: Variable 'end' is assigned a value that is never used. [unreadVariable]
              end = (char*)CALL_MORECORE(-asize);
                  ^
src/stdlib/SDL_malloc.c:2563:0: information: Skipping configuration 'CLSIZE;NBPG' since the value of 'CLSIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mparams.page_size = malloc_getpagesize;
^
src/stdlib/SDL_malloc.c:2563:0: information: Skipping configuration 'CLSIZE;NBPG' since the value of 'NBPG' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mparams.page_size = malloc_getpagesize;
^
src/stdlib/SDL_malloc.c:2640:3: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
  assert(sz == ((sp->base + sp->size) - (char*)p) - TOP_FOOT_SIZE);
  ^
src/stdlib/SDL_malloc.c:2834:25: error: Pointer addition with NULL pointer. [nullPointerArithmetic]
    sum += m->topsize + TOP_FOOT_SIZE;
                        ^
src/stdlib/SDL_malloc.c:2640:3: style: Same value in both branches of ternary operator. [duplicateValueTernary]
  assert(sz == ((sp->base + sp->size) - (char*)p) - TOP_FOOT_SIZE);
  ^
src/stdlib/SDL_malloc.c:2834:25: style: Same value in both branches of ternary operator. [duplicateValueTernary]
    sum += m->topsize + TOP_FOOT_SIZE;
                        ^
src/stdlib/SDL_malloc.c:2563:0: information: Skipping configuration 'EXEC_PAGESIZE' since the value of 'EXEC_PAGESIZE' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    mparams.page_size = malloc_getpagesize;
^
src/stdlib/SDL_malloc.c:4077:7: style: Condition 'was_enabled' is always false [knownConditionTrueFalse]
  if (was_enabled)
      ^
src/stdlib/SDL_malloc.c:4074:17: note: Assignment 'was_enabled=(m)->mflags&((unsigned long)0)', assigned value is 0
  was_enabled = use_mmap(m);
                ^
src/stdlib/SDL_malloc.c:4077:7: note: Condition 'was_enabled' is always false
  if (was_enabled)
      ^
src/stdlib/SDL_malloc.c:3694:28: style: Variable 'newsize' is assigned a value that is never used. [unreadVariable]
            size_t newsize = sp->size - extra;
                           ^
src/stdlib/SDL_qsort.c:407:7: style: The scope of the variable 'stacktop' can be reduced. [variableScope]
  int stacktop=0;
      ^
src/stdlib/SDL_qsort.c:438:7: style: The scope of the variable 'stacktop' can be reduced. [variableScope]
  int stacktop=0;
      ^
src/stdlib/SDL_qsort.c:540:17: style: The scope of the variable 'pivot' can be reduced. [variableScope]
    const void *pivot;
                ^
src/stdlib/SDL_qsort.c:541:12: style: The scope of the variable 'corr' can be reduced. [variableScope]
    size_t corr;
           ^
src/stdlib/SDL_qsort.c:542:9: style: The scope of the variable 'rc' can be reduced. [variableScope]
    int rc;
        ^
src/stdlib/SDL_qsort.c:366:1: warning: %p in format string (no. 2) requires an address but the argument type is 'unsigned long'. [invalidPrintfArgType_p]
fprintf(stderr, "pivot_big: first=%p last=%p size=%lu n=%lu\n", first, (unsigned long)last, size, (unsigned long)((last-first+1)/size));
^
src/stdlib/SDL_qsort.c:366:1: portability: %lu in format string (no. 3) requires 'unsigned long' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_uint]
fprintf(stderr, "pivot_big: first=%p last=%p size=%lu n=%lu\n", first, (unsigned long)last, size, (unsigned long)((last-first+1)/size));
^
src/stdlib/SDL_qsort.c:480:1: portability: %d in format string (no. 1) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
fprintf(stderr,"Doing %d:%d: ",
^
src/stdlib/SDL_qsort.c:480:1: portability: %d in format string (no. 2) requires 'int' but the argument type is 'size_t {aka unsigned long}'. [invalidPrintfArgType_sint]
fprintf(stderr,"Doing %d:%d: ",
^
src/stdlib/SDL_stdlib.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/stdlib/SDL_string.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 58 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/stdlib/SDL_string.c:1574:9: warning: Either the condition 'info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
    if (info->force_sign && value >= 0L) {
        ^
src/stdlib/SDL_string.c:1578:24: note: Assuming that condition 'info' is not redundant
    SDL_ltoa(value, p, info ? info->radix : 10);
                       ^
src/stdlib/SDL_string.c:1574:9: note: Null pointer dereference
    if (info->force_sign && value >= 0L) {
        ^
src/stdlib/SDL_string.c:1598:9: warning: Either the condition 'info' is redundant or there is possible null pointer dereference: info. [nullPointerRedundantCheck]
    if (info->force_sign && value >= (Sint64)0) {
        ^
src/stdlib/SDL_string.c:1602:25: note: Assuming that condition 'info' is not redundant
    SDL_lltoa(value, p, info ? info->radix : 10);
                        ^
src/stdlib/SDL_string.c:1598:9: note: Null pointer dereference
    if (info->force_sign && value >= (Sint64)0) {
        ^
src/stdlib/SDL_string.c:567:12: style: The scope of the variable 'i' can be reduced. [variableScope]
    size_t i = 0;
           ^
src/stdlib/SDL_string.c:568:12: style: The scope of the variable 'trailing_bytes' can be reduced. [variableScope]
    size_t trailing_bytes = 0;
           ^
src/stdlib/SDL_string.c:1075:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a, b, result;
        ^
src/stdlib/SDL_string.c:1075:12: style: The scope of the variable 'b' can be reduced. [variableScope]
    int a, b, result;
           ^
src/stdlib/SDL_string.c:1098:9: style: The scope of the variable 'a' can be reduced. [variableScope]
    int a, b, result = 0;
        ^
src/stdlib/SDL_string.c:1098:12: style: The scope of the variable 'b' can be reduced. [variableScope]
    int a, b, result = 0;
           ^
src/stdlib/SDL_string.c:1487:12: style: The scope of the variable 'slen' can be reduced. [variableScope]
    size_t slen, sz;
           ^
src/stdlib/SDL_string.c:1968:9: style: The scope of the variable 'retval' can be reduced. [variableScope]
    int retval;
        ^
src/stdlib/SDL_string.c:836:40: warning: Either the condition 'value>0' is redundant or there is division by zero at line 836. [zerodivcond]
            *bufp++ = ntoa_table[value % radix];
                                       ^
src/stdlib/SDL_string.c:835:22: note: Assuming that condition 'value>0' is not redundant
        while (value > 0) {
                     ^
src/stdlib/SDL_string.c:837:22: note: Assignment to 'value/=radix'
            value /= radix;
                     ^
src/stdlib/SDL_string.c:836:40: note: Division by zero
            *bufp++ = ntoa_table[value % radix];
                                       ^
src/stdlib/SDL_string.c:511:15: style: Variable 'a' is assigned a value that is never used. [unreadVariable]
    wchar_t a = 0;
              ^
src/stdlib/SDL_string.c:512:15: style: Variable 'b' is assigned a value that is never used. [unreadVariable]
    wchar_t b = 0;
              ^
src/stdlib/SDL_string.c:567:14: style: Variable 'i' is assigned a value that is never used. [unreadVariable]
    size_t i = 0;
             ^
src/stdlib/SDL_string.c:568:27: style: Variable 'trailing_bytes' is assigned a value that is never used. [unreadVariable]
    size_t trailing_bytes = 0;
                          ^
src/test/SDL_test_common.c:1826:17: style: The scope of the variable 'window' can be reduced. [variableScope]
    SDL_Window *window;
                ^
src/test/SDL_test_common.c:1828:28: style: The scope of the variable 'mode' can be reduced. [variableScope]
    const SDL_DisplayMode *mode;
                           ^
src/test/SDL_test_common.c:1177:30: style: Variable 'adapterIndex' is assigned a value that is never used. [unreadVariable]
            int adapterIndex = 0;
                             ^
src/test/SDL_test_common.c:1178:29: style: Variable 'outputIndex' is assigned a value that is never used. [unreadVariable]
            int outputIndex = 0;
                            ^
src/test/SDL_test_compare.c:47:10: style: The scope of the variable 'imageFilename' can be reduced. [variableScope]
    char imageFilename[FILENAME_SIZE];
         ^
src/test/SDL_test_compare.c:48:10: style: The scope of the variable 'referenceFilename' can be reduced. [variableScope]
    char referenceFilename[FILENAME_SIZE];
         ^
src/test/SDL_test_crc32.c:45:20: error: Signed integer overflow for expression 'i<<24'. [integerOverflow]
        for (c = i << 24, j = 8; j > 0; --j) {
                   ^
src/test/SDL_test_font.c:3138:26: style: The scope of the variable 'charpos' can be reduced. [variableScope]
    const unsigned char *charpos;
                         ^
src/test/SDL_test_font.c:3139:13: style: The scope of the variable 'curpos' can be reduced. [variableScope]
    Uint32 *curpos;
            ^
src/test/SDL_test_font.c:3140:12: style: The scope of the variable 'linepos' can be reduced. [variableScope]
    Uint8 *linepos;
           ^
src/test/SDL_test_harness.c:383:17: style: The scope of the variable 'currentSuiteName' can be reduced. [variableScope]
    const char *currentSuiteName;
                ^
src/test/SDL_test_harness.c:403:25: style: Variable 'testFailedCount' is assigned a value that is never used. [unreadVariable]
    int testFailedCount = 0;
                        ^
src/test/SDL_test_harness.c:404:25: style: Variable 'testPassedCount' is assigned a value that is never used. [unreadVariable]
    int testPassedCount = 0;
                        ^
src/test/SDL_test_harness.c:405:26: style: Variable 'testSkippedCount' is assigned a value that is never used. [unreadVariable]
    int testSkippedCount = 0;
                         ^
src/thread/SDL_thread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/SDL_thread.c:237:13: warning: Identical inner 'if' condition is always true. [identicalInnerCondition]
        if (!tls_errbuf) {
            ^
src/thread/SDL_thread.c:235:9: note: outer condition: !tls_errbuf
    if (!tls_errbuf && !tls_being_created) {
        ^
src/thread/SDL_thread.c:237:13: note: identical inner condition: !tls_errbuf
        if (!tls_errbuf) {
            ^
src/thread/generic/SDL_syscond.c:75:40: style:inconclusive: Function 'SDL_DestroyCond_generic' argument 1 names different: declaration 'cond' definition '_cond'. [funcArgNamesDifferent]
void SDL_DestroyCond_generic(SDL_cond *_cond)
                                       ^
src/thread/generic/SDL_syscond_c.h:29:40: note: Function 'SDL_DestroyCond_generic' argument 1 names different: declaration 'cond' definition '_cond'.
void SDL_DestroyCond_generic(SDL_cond *cond);
                                       ^
src/thread/generic/SDL_syscond.c:75:40: note: Function 'SDL_DestroyCond_generic' argument 1 names different: declaration 'cond' definition '_cond'.
void SDL_DestroyCond_generic(SDL_cond *_cond)
                                       ^
src/thread/generic/SDL_syscond.c:93:38: style:inconclusive: Function 'SDL_CondSignal_generic' argument 1 names different: declaration 'cond' definition '_cond'. [funcArgNamesDifferent]
int SDL_CondSignal_generic(SDL_cond *_cond)
                                     ^
src/thread/generic/SDL_syscond_c.h:30:38: note: Function 'SDL_CondSignal_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondSignal_generic(SDL_cond *cond);
                                     ^
src/thread/generic/SDL_syscond.c:93:38: note: Function 'SDL_CondSignal_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondSignal_generic(SDL_cond *_cond)
                                     ^
src/thread/generic/SDL_syscond.c:117:41: style:inconclusive: Function 'SDL_CondBroadcast_generic' argument 1 names different: declaration 'cond' definition '_cond'. [funcArgNamesDifferent]
int SDL_CondBroadcast_generic(SDL_cond *_cond)
                                        ^
src/thread/generic/SDL_syscond_c.h:31:41: note: Function 'SDL_CondBroadcast_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondBroadcast_generic(SDL_cond *cond);
                                        ^
src/thread/generic/SDL_syscond.c:117:41: note: Function 'SDL_CondBroadcast_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondBroadcast_generic(SDL_cond *_cond)
                                        ^
src/thread/generic/SDL_syscond.c:171:45: style:inconclusive: Function 'SDL_CondWaitTimeoutNS_generic' argument 1 names different: declaration 'cond' definition '_cond'. [funcArgNamesDifferent]
int SDL_CondWaitTimeoutNS_generic(SDL_cond *_cond, SDL_mutex *mutex, Sint64 timeoutNS)
                                            ^
src/thread/generic/SDL_syscond_c.h:32:45: note: Function 'SDL_CondWaitTimeoutNS_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondWaitTimeoutNS_generic(SDL_cond *cond, SDL_mutex *mutex, Sint64 timeoutNS);
                                            ^
src/thread/generic/SDL_syscond.c:171:45: note: Function 'SDL_CondWaitTimeoutNS_generic' argument 1 names different: declaration 'cond' definition '_cond'.
int SDL_CondWaitTimeoutNS_generic(SDL_cond *_cond, SDL_mutex *mutex, Sint64 timeoutNS)
                                            ^
src/thread/generic/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/generic/SDL_systls.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/n3ds/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/ngage/SDL_sysmutex.cpp:66:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        mutex = NULL;
        ^
src/thread/ngage/SDL_syssem.cpp:99:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        sem = NULL;
        ^
src/thread/ngage/SDL_systhread.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/ps2/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/psp/SDL_sysmutex.c:44:18: style: Variable 'res' is assigned a value that is never used. [unreadVariable]
    SceInt32 res = 0;
                 ^
src/thread/psp/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/pthread/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 63 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/pthread/SDL_systls.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/stdcpp/SDL_systhread.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/stdcpp/SDL_systhread.cpp:40:19: style: C-style pointer casting [cstyleCast]
    SDL_RunThread((SDL_Thread *)args);
                  ^
src/thread/vita/SDL_sysmutex.c:40:18: style: Variable 'res' is assigned a value that is never used. [unreadVariable]
    SceInt32 res = 0;
                 ^
src/thread/vita/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/windows/SDL_syscond_cv.c:229:14: style: Redundant initialization for 'impl'. The initialized value is overwritten before it is read. [redundantInitialization]
        impl = &SDL_cond_impl_cv;
             ^
src/thread/windows/SDL_syscond_cv.c:214:37: note: impl is initialized
        const SDL_cond_impl_t *impl = &SDL_cond_impl_generic;
                                    ^
src/thread/windows/SDL_syscond_cv.c:229:14: note: impl is overwritten
        impl = &SDL_cond_impl_cv;
             ^
src/thread/windows/SDL_systhread.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 50 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/thread/windows/SDL_systls.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/timer/SDL_timer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 50 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/timer/unix/SDL_systimer.c:74:0: information: Skipping configuration 'CLOCK_MONOTONIC_RAW;HAVE_CLOCK_GETTIME;SDL_TIMER_UNIX' since the value of 'CLOCK_MONOTONIC_RAW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    if (clock_gettime(SDL_MONOTONIC_CLOCK, &value) == 0) {
^
src/timer/unix/SDL_systimer.c:98:0: information: Skipping configuration 'CLOCK_MONOTONIC_RAW;HAVE_CLOCK_GETTIME;SDL_TIMER_UNIX' since the value of 'CLOCK_MONOTONIC_RAW' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        clock_gettime(SDL_MONOTONIC_CLOCK, &now);
^
src/timer/windows/SDL_systimer.c:63:0: information: Skipping configuration 'CREATE_WAITABLE_TIMER_HIGH_RESOLUTION;SDL_TIMER_WINDOWS' since the value of 'CREATE_WAITABLE_TIMER_HIGH_RESOLUTION' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    HANDLE timer = CreateWaitableTimerExW(NULL, NULL, CREATE_WAITABLE_TIMER_HIGH_RESOLUTION, TIMER_ALL_ACCESS);
^
src/video/SDL_RLEaccel.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_RLEaccel.c:1017:9: style: The scope of the variable 'max_transl_run' can be reduced. [variableScope]
    int max_transl_run = 65535;
        ^
src/video/SDL_RLEaccel.c:1107:13: style: The scope of the variable 'x' can be reduced. [variableScope]
        int x, y;
            ^
src/video/SDL_blit.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_blit_0.c:512:9: style: The scope of the variable 'which' can be reduced. [variableScope]
    int which;
        ^
src/video/SDL_blit_1.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_blit_A.c:1214:14: style: The scope of the variable 'sR' can be reduced. [variableScope]
    unsigned sR, sG, sB;
             ^
src/video/SDL_blit_A.c:1214:18: style: The scope of the variable 'sG' can be reduced. [variableScope]
    unsigned sR, sG, sB;
                 ^
src/video/SDL_blit_A.c:1214:22: style: The scope of the variable 'sB' can be reduced. [variableScope]
    unsigned sR, sG, sB;
                     ^
src/video/SDL_blit_A.c:1215:14: style: The scope of the variable 'dR' can be reduced. [variableScope]
    unsigned dR, dG, dB, dA;
             ^
src/video/SDL_blit_A.c:1215:18: style: The scope of the variable 'dG' can be reduced. [variableScope]
    unsigned dR, dG, dB, dA;
                 ^
src/video/SDL_blit_A.c:1215:22: style: The scope of the variable 'dB' can be reduced. [variableScope]
    unsigned dR, dG, dB, dA;
                     ^
src/video/SDL_blit_A.c:1215:26: style: The scope of the variable 'dA' can be reduced. [variableScope]
    unsigned dR, dG, dB, dA;
                         ^
src/video/SDL_blit_A.c:226:13: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
static void SDL_TARGETING("mmx") BlitRGBtoRGBSurfaceAlphaMMX(SDL_BlitInfo *info)
            ^
src/video/SDL_blit_N.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 14 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_blit_N.c:893:46: style: Condition 'GetL3CacheSize()==0' is always false [knownConditionTrueFalse]
                        | ((GetL3CacheSize() == 0) ? BLIT_FEATURE_ALTIVEC_DONT_USE_PREFETCH : 0));
                                             ^
src/video/SDL_blit_auto.c:33:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:42:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:116:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:125:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:209:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:218:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:323:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:332:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:394:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:403:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:480:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:489:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:573:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:582:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:687:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:696:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:758:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:767:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:844:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:853:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:942:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:951:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1057:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1066:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1129:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1138:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1215:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1224:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1308:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1317:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1422:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1431:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1491:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1500:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1574:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1583:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1667:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1676:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1781:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1790:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1853:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1862:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:1940:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:1949:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2038:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2047:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2153:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2162:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2224:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2233:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2317:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2326:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2418:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2427:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2533:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2542:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2607:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2616:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2701:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2710:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2802:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2811:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2917:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2926:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:2989:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:2998:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3081:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3090:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3188:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3197:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3307:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3316:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3381:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3390:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3474:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3483:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3575:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3584:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3690:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3699:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3764:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3773:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3858:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3867:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:3959:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:3968:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4074:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4083:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4147:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4156:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4241:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4250:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4348:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4357:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4467:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4476:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4542:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4551:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4636:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4645:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4737:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4746:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4852:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4861:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:4925:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:4934:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5018:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5027:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5119:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5128:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5234:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5243:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5308:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5317:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5403:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5412:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5510:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5519:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5629:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5638:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5704:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5713:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5798:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5807:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:5899:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:5908:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6014:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6023:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6087:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6096:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6180:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6189:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6281:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6290:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6396:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6405:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6470:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6479:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6565:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6574:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6672:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6681:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_auto.c:6791:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_auto.c:6800:17: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint32 *src = 0;
                ^
src/video/SDL_blit_copy.c:89:24: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
static SDL_INLINE void SDL_TARGETING("mmx") SDL_BlitCopyMMX(Uint8 *dst, const Uint8 *src, const int dstskip, const int srcskip, const int w, int h)
                       ^
src/video/SDL_blit_slow.c:56:9: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    int srcy, srcx;
        ^
src/video/SDL_blit_slow.c:76:16: style: The scope of the variable 'src' can be reduced. [variableScope]
        Uint8 *src = 0;
               ^
src/video/SDL_clipboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_egl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_egl.c:259:20: style: Condition 'retval==NULL' is always true [knownConditionTrueFalse]
        if (retval == NULL && is_egl_15_or_later && _this->egl_data->eglGetProcAddress) {
                   ^
src/video/SDL_egl.c:253:34: note: Assignment 'retval=NULL', assigned value is 0
    SDL_FunctionPointer retval = NULL;
                                 ^
src/video/SDL_egl.c:259:20: note: Condition 'retval==NULL' is always true
        if (retval == NULL && is_egl_15_or_later && _this->egl_data->eglGetProcAddress) {
                   ^
src/video/SDL_egl.c:184:17: style: The scope of the variable 'ext_start' can be reduced. [variableScope]
    const char *ext_start;
                ^
src/video/SDL_egl.c:471:48: style:inconclusive: Function 'SDL_EGL_LoadLibraryOnly' argument 2 names different: declaration 'path' definition 'egl_path'. [funcArgNamesDifferent]
int SDL_EGL_LoadLibraryOnly(_THIS, const char *egl_path)
                                               ^
src/video/SDL_egl_c.h:123:55: note: Function 'SDL_EGL_LoadLibraryOnly' argument 2 names different: declaration 'path' definition 'egl_path'.
extern int SDL_EGL_LoadLibraryOnly(_THIS, const char *path);
                                                      ^
src/video/SDL_egl.c:471:48: note: Function 'SDL_EGL_LoadLibraryOnly' argument 2 names different: declaration 'path' definition 'egl_path'.
int SDL_EGL_LoadLibraryOnly(_THIS, const char *egl_path)
                                               ^
src/video/SDL_egl.c:506:44: style:inconclusive: Function 'SDL_EGL_LoadLibrary' argument 2 names different: declaration 'path' definition 'egl_path'. [funcArgNamesDifferent]
int SDL_EGL_LoadLibrary(_THIS, const char *egl_path, NativeDisplayType native_display, EGLenum platform)
                                           ^
src/video/SDL_egl_c.h:124:51: note: Function 'SDL_EGL_LoadLibrary' argument 2 names different: declaration 'path' definition 'egl_path'.
extern int SDL_EGL_LoadLibrary(_THIS, const char *path, NativeDisplayType native_display, EGLenum platform);
                                                  ^
src/video/SDL_egl.c:506:44: note: Function 'SDL_EGL_LoadLibrary' argument 2 names different: declaration 'path' definition 'egl_path'.
int SDL_EGL_LoadLibrary(_THIS, const char *egl_path, NativeDisplayType native_display, EGLenum platform)
                                           ^
src/video/SDL_fillrect.c:304:12: warning: Either the condition 'fill_function==NULL' is redundant or there is possible null pointer dereference: fill_function. [nullPointerRedundantCheck]
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:373:23: note: Assuming that condition 'fill_function==NULL' is not redundant
    if (fill_function == NULL) {
                      ^
src/video/SDL_fillrect.c:304:12: note: Null pointer dereference
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:131:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
src/video/SDL_fillrect.c:173:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
src/video/SDL_fillrect.c:205:9: style: The scope of the variable 'n' can be reduced. [variableScope]
    int n;
        ^
src/video/SDL_fillrect.c:304:12: warning: Either the condition 'fill_function==NULL' is redundant or there is possible null pointer dereference: fill_function. [nullPointerRedundantCheck]
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:343:75: note: Assuming that condition 'fill_function==NULL' is not redundant
    if (SDL_HasNEON() && dst->format->BytesPerPixel != 3 && fill_function == NULL) {
                                                                          ^
src/video/SDL_fillrect.c:304:12: note: Null pointer dereference
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:304:12: warning: Either the condition 'fill_function==NULL' is redundant or there is possible null pointer dereference: fill_function. [nullPointerRedundantCheck]
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:358:78: note: Assuming that condition 'fill_function==NULL' is not redundant
    if (SDL_HasARMSIMD() && dst->format->BytesPerPixel != 3 && fill_function == NULL) {
                                                                             ^
src/video/SDL_fillrect.c:304:12: note: Null pointer dereference
    void (*fill_function)(Uint8 * pixels, int pitch, Uint32 color, int w, int h) = NULL;
           ^
src/video/SDL_fillrect.c:123:1: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
DEFINE_SSE_FILLRECT(2, Uint16)
^
src/video/SDL_pixels.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_pixels.c:1073:14: warning: Either the condition 'map->dst' is redundant or there is possible null pointer dereference: dst. [nullPointerRedundantCheck]
    dstfmt = dst->format;
             ^
src/video/SDL_pixels.c:1116:12: note: Assuming that condition 'map->dst' is not redundant
    if (map->dst) {
           ^
src/video/SDL_pixels.c:1114:16: note: Assignment to 'map->dst=dst'
    map->dst = dst;
               ^
src/video/SDL_pixels.c:1073:14: note: Null pointer dereference
    dstfmt = dst->format;
             ^
src/video/SDL_pixels.c:794:18: style: The scope of the variable 'distance' can be reduced. [variableScope]
    unsigned int distance;
                 ^
src/video/SDL_pixels.c:795:9: style: The scope of the variable 'rd' can be reduced. [variableScope]
    int rd, gd, bd, ad;
        ^
src/video/SDL_pixels.c:795:13: style: The scope of the variable 'gd' can be reduced. [variableScope]
    int rd, gd, bd, ad;
            ^
src/video/SDL_pixels.c:795:17: style: The scope of the variable 'bd' can be reduced. [variableScope]
    int rd, gd, bd, ad;
                ^
src/video/SDL_pixels.c:795:21: style: The scope of the variable 'ad' can be reduced. [variableScope]
    int rd, gd, bd, ad;
                    ^
src/video/SDL_rect.c:33:9: style: The scope of the variable 'rect_y1' can be reduced. [variableScope]
    int rect_y1, rect_y2;
        ^
src/video/SDL_rect.c:33:18: style: The scope of the variable 'rect_y2' can be reduced. [variableScope]
    int rect_y1, rect_y2;
                 ^
src/video/SDL_shape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_shape.c:68:12: style: The scope of the variable 'bitmap_scanline' can be reduced. [variableScope]
    Uint8 *bitmap_scanline;
           ^
src/video/SDL_shape.c:62:11: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
    int x = 0;
          ^
src/video/SDL_shape.c:64:38: style: Variable 'alpha' is assigned a value that is never used. [unreadVariable]
    Uint8 r = 0, g = 0, b = 0, alpha = 0;
                                     ^
src/video/SDL_shape.c:66:24: style: Variable 'pixel_value' is assigned a value that is never used. [unreadVariable]
    Uint32 pixel_value = 0, mask_value = 0;
                       ^
src/video/SDL_shape.c:124:11: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
    int x = 0, y = 0;
          ^
src/video/SDL_shape.c:126:24: style: Variable 'pixel_value' is assigned a value that is never used. [unreadVariable]
    Uint32 pixel_value = 0;
                       ^
src/video/SDL_stretch.c:815:13: style: The comparison 'ret == -1' is always true. [knownConditionTrueFalse]
    if (ret == -1) {
            ^
src/video/SDL_stretch.c:793:16: note: 'ret' is assigned value '-1' here.
    int ret = -1;
               ^
src/video/SDL_stretch.c:815:13: note: The comparison 'ret == -1' is always true.
    if (ret == -1) {
            ^
src/video/SDL_stretch.c:845:5: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:845:5: style: The scope of the variable 'n' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:845:5: style: The scope of the variable 'src_h0' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:865:5: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:865:5: style: The scope of the variable 'n' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:865:5: style: The scope of the variable 'src_h0' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:885:5: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:885:5: style: The scope of the variable 'n' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:885:5: style: The scope of the variable 'src_h0' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:907:5: style: The scope of the variable 'srcy' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:907:5: style: The scope of the variable 'n' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:907:5: style: The scope of the variable 'src_h0' can be reduced. [variableScope]
    SDL_SCALE_NEAREST__START
    ^
src/video/SDL_stretch.c:790:45: style:inconclusive: Function 'SDL_LowerSoftStretchLinear' argument 1 names different: declaration 'src' definition 's'. [funcArgNamesDifferent]
int SDL_LowerSoftStretchLinear(SDL_Surface *s, const SDL_Rect *srcrect,
                                            ^
src/video/SDL_stretch.c:26:52: note: Function 'SDL_LowerSoftStretchLinear' argument 1 names different: declaration 'src' definition 's'.
static int SDL_LowerSoftStretchLinear(SDL_Surface *src, const SDL_Rect *srcrect, SDL_Surface *dst, const SDL_Rect *dstrect);
                                                   ^
src/video/SDL_stretch.c:790:45: note: Function 'SDL_LowerSoftStretchLinear' argument 1 names different: declaration 'src' definition 's'.
int SDL_LowerSoftStretchLinear(SDL_Surface *s, const SDL_Rect *srcrect,
                                            ^
src/video/SDL_stretch.c:791:45: style:inconclusive: Function 'SDL_LowerSoftStretchLinear' argument 3 names different: declaration 'dst' definition 'd'. [funcArgNamesDifferent]
                               SDL_Surface *d, const SDL_Rect *dstrect)
                                            ^
src/video/SDL_stretch.c:26:95: note: Function 'SDL_LowerSoftStretchLinear' argument 3 names different: declaration 'dst' definition 'd'.
static int SDL_LowerSoftStretchLinear(SDL_Surface *src, const SDL_Rect *srcrect, SDL_Surface *dst, const SDL_Rect *dstrect);
                                                                                              ^
src/video/SDL_stretch.c:791:45: note: Function 'SDL_LowerSoftStretchLinear' argument 3 names different: declaration 'dst' definition 'd'.
                               SDL_Surface *d, const SDL_Rect *dstrect)
                                            ^
src/video/SDL_stretch.c:923:46: style:inconclusive: Function 'SDL_LowerSoftStretchNearest' argument 1 names different: declaration 'src' definition 's'. [funcArgNamesDifferent]
int SDL_LowerSoftStretchNearest(SDL_Surface *s, const SDL_Rect *srcrect,
                                             ^
src/video/SDL_stretch.c:25:53: note: Function 'SDL_LowerSoftStretchNearest' argument 1 names different: declaration 'src' definition 's'.
static int SDL_LowerSoftStretchNearest(SDL_Surface *src, const SDL_Rect *srcrect, SDL_Surface *dst, const SDL_Rect *dstrect);
                                                    ^
src/video/SDL_stretch.c:923:46: note: Function 'SDL_LowerSoftStretchNearest' argument 1 names different: declaration 'src' definition 's'.
int SDL_LowerSoftStretchNearest(SDL_Surface *s, const SDL_Rect *srcrect,
                                             ^
src/video/SDL_stretch.c:924:46: style:inconclusive: Function 'SDL_LowerSoftStretchNearest' argument 3 names different: declaration 'dst' definition 'd'. [funcArgNamesDifferent]
                                SDL_Surface *d, const SDL_Rect *dstrect)
                                             ^
src/video/SDL_stretch.c:25:96: note: Function 'SDL_LowerSoftStretchNearest' argument 3 names different: declaration 'dst' definition 'd'.
static int SDL_LowerSoftStretchNearest(SDL_Surface *src, const SDL_Rect *srcrect, SDL_Surface *dst, const SDL_Rect *dstrect);
                                                                                               ^
src/video/SDL_stretch.c:924:46: note: Function 'SDL_LowerSoftStretchNearest' argument 3 names different: declaration 'dst' definition 'd'.
                                SDL_Surface *d, const SDL_Rect *dstrect)
                                             ^
src/video/SDL_stretch.c:804:13: style: The comparison 'ret == -1' is always true. [knownConditionTrueFalse]
    if (ret == -1 && hasNEON()) {
            ^
src/video/SDL_stretch.c:793:16: note: 'ret' is assigned value '-1' here.
    int ret = -1;
               ^
src/video/SDL_stretch.c:804:13: note: The comparison 'ret == -1' is always true.
    if (ret == -1 && hasNEON()) {
            ^
src/video/SDL_stretch.c:407:12: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
static int SDL_TARGETING("sse2") scale_mat_SSE(const Uint32 *src, int src_w, int src_h, int src_pitch, Uint32 *dst, int dst_w, int dst_h, int dst_pitch)
           ^
src/video/SDL_surface.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_video.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 81 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_video.c:931:13: style: Condition '!mode' is always true [knownConditionTrueFalse]
        if (!mode) {
            ^
src/video/SDL_video.c:924:12: note: Assignment 'mode=NULL', assigned value is 0
    mode = NULL;
           ^
src/video/SDL_video.c:931:13: note: Condition '!mode' is always true
        if (!mode) {
            ^
src/video/SDL_video.c:913:9: warning:inconclusive: Either the condition '!mode' is redundant or there is possible null pointer dereference: mode. [nullPointerRedundantCheck]
    if (mode->screen_w <= 0 || mode->screen_h <= 0) {
        ^
src/video/SDL_video.c:931:13: note: Assuming that condition '!mode' is not redundant
        if (!mode) {
            ^
src/video/SDL_video.c:913:9: note: Null pointer dereference
    if (mode->screen_w <= 0 || mode->screen_h <= 0) {
        ^
src/video/SDL_video.c:329:11: style: The scope of the variable 'src' can be reduced. [variableScope]
    void *src;
          ^
src/video/SDL_video.c:744:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/SDL_video.c:1023:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/SDL_video.c:1062:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/SDL_video.c:1210:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, dist;
        ^
src/video/SDL_video.c:1210:12: style: The scope of the variable 'dist' can be reduced. [variableScope]
    int i, dist;
           ^
src/video/SDL_video.c:1212:9: style: The scope of the variable 'closest_dist' can be reduced. [variableScope]
    int closest_dist = 0x7FFFFFFF;
        ^
src/video/SDL_video.c:715:40: style:inconclusive: Function 'SDL_DelVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'. [funcArgNamesDifferent]
void SDL_DelVideoDisplay(SDL_DisplayID displayID, SDL_bool send_event)
                                       ^
src/video/SDL_sysvideo.h:495:47: note: Function 'SDL_DelVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'.
extern void SDL_DelVideoDisplay(SDL_DisplayID display, SDL_bool send_event);
                                              ^
src/video/SDL_video.c:715:40: note: Function 'SDL_DelVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'.
void SDL_DelVideoDisplay(SDL_DisplayID displayID, SDL_bool send_event)
                                       ^
src/video/SDL_video.c:776:53: style:inconclusive: Function 'SDL_GetVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'. [funcArgNamesDifferent]
SDL_VideoDisplay *SDL_GetVideoDisplay(SDL_DisplayID displayID)
                                                    ^
src/video/SDL_sysvideo.h:500:60: note: Function 'SDL_GetVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'.
extern SDL_VideoDisplay *SDL_GetVideoDisplay(SDL_DisplayID display);
                                                           ^
src/video/SDL_video.c:776:53: note: Function 'SDL_GetVideoDisplay' argument 1 names different: declaration 'display' definition 'displayID'.
SDL_VideoDisplay *SDL_GetVideoDisplay(SDL_DisplayID displayID)
                                                    ^
src/video/SDL_video.c:817:57: style:inconclusive: Function 'SDL_GetDisplayDriverData' argument 1 names different: declaration 'display' definition 'displayID'. [funcArgNamesDifferent]
SDL_DisplayData *SDL_GetDisplayDriverData(SDL_DisplayID displayID)
                                                        ^
src/video/SDL_sysvideo.h:503:64: note: Function 'SDL_GetDisplayDriverData' argument 1 names different: declaration 'display' definition 'displayID'.
extern SDL_DisplayData *SDL_GetDisplayDriverData(SDL_DisplayID display);
                                                               ^
src/video/SDL_video.c:817:57: note: Function 'SDL_GetDisplayDriverData' argument 1 names different: declaration 'display' definition 'displayID'.
SDL_DisplayData *SDL_GetDisplayDriverData(SDL_DisplayID displayID)
                                                        ^
src/video/SDL_video.c:1360:39: style: Variable 'display_index' is assigned a value that is never used. [unreadVariable]
                        display_index = i;
                                      ^
src/video/SDL_vulkan_utils.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/SDL_vulkan_utils.c:199:49: style:inconclusive: Function 'SDL_Vulkan_Display_CreateSurface' argument 1 names different: declaration 'vkGetInstanceProcAddr' definition 'vkGetInstanceProcAddr_'. [funcArgNamesDifferent]
SDL_bool SDL_Vulkan_Display_CreateSurface(void *vkGetInstanceProcAddr_,
                                                ^
src/video/SDL_vulkan_internal.h:77:56: note: Function 'SDL_Vulkan_Display_CreateSurface' argument 1 names different: declaration 'vkGetInstanceProcAddr' definition 'vkGetInstanceProcAddr_'.
extern SDL_bool SDL_Vulkan_Display_CreateSurface(void *vkGetInstanceProcAddr,
                                                       ^
src/video/SDL_vulkan_utils.c:199:49: note: Function 'SDL_Vulkan_Display_CreateSurface' argument 1 names different: declaration 'vkGetInstanceProcAddr' definition 'vkGetInstanceProcAddr_'.
SDL_bool SDL_Vulkan_Display_CreateSurface(void *vkGetInstanceProcAddr_,
                                                ^
src/video/SDL_yuv.c:1306:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1360:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1414:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1774:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1807:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1840:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1873:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1906:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1939:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y;
        ^
src/video/SDL_yuv.c:1192:12: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
static int SDL_TARGETING("sse2") SDL_ConvertPixels_SplitNV_to_UVPlanes_SSE2(int width, int height, const void *src, int src_pitch, void *dst, int dst_pitch, SDL_bool reverseUV)
           ^
src/video/android/SDL_androidclipboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidevents.c:126:36: style: Variable 'isContextExternal' is assigned a value that is never used. [unreadVariable]
        SDL_bool isContextExternal = SDL_IsVideoContextExternal();
                                   ^
src/video/android/SDL_androidevents.c:203:36: style: Variable 'isContextExternal' is assigned a value that is never used. [unreadVariable]
        SDL_bool isContextExternal = SDL_IsVideoContextExternal();
                                   ^
src/video/android/SDL_androidgl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidkeyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidmouse.c:213:46: style:inconclusive: Function 'Android_OnMouse' argument 2 names different: declaration 'button' definition 'state'. [funcArgNamesDifferent]
void Android_OnMouse(SDL_Window *window, int state, int action, float x, float y, SDL_bool relative)
                                             ^
src/video/android/SDL_androidmouse.h:28:53: note: Function 'Android_OnMouse' argument 2 names different: declaration 'button' definition 'state'.
extern void Android_OnMouse(SDL_Window *window, int button, int action, float x, float y, SDL_bool relative);
                                                    ^
src/video/android/SDL_androidmouse.c:213:46: note: Function 'Android_OnMouse' argument 2 names different: declaration 'button' definition 'state'.
void Android_OnMouse(SDL_Window *window, int state, int action, float x, float y, SDL_bool relative)
                                             ^
src/video/android/SDL_androidtouch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidvulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/android/SDL_androidwindow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/dummy/SDL_nullevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/dummy/SDL_nullframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/dummy/SDL_nullframebuffer.c:56:16: style: The scope of the variable 'frame_number' can be reduced. [variableScope]
    static int frame_number;
               ^
src/video/dummy/SDL_nullvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenevents.c:836:23: style: The scope of the variable 'display' can be reduced. [variableScope]
    SDL_VideoDisplay *display;
                      ^
src/video/emscripten/SDL_emscriptenframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenframebuffer.c:80:12: error: Syntax Error: AST broken, 'if' doesn't have two operands. [internalAstError]
        if (SDL3.ctxCanvas !== canvas) {
           ^
src/video/emscripten/SDL_emscriptenmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenmouse.c:196:13: error: There is an unknown macro here somewhere. Configuration is required. If MAIN_THREAD_EM_ASM is a macro then please configure it. [unknownMacro]
            MAIN_THREAD_EM_ASM(
            ^
src/video/emscripten/SDL_emscriptenopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/emscripten/SDL_emscriptenvideo.c:243:21: style: The scope of the variable 'data' can be reduced. [variableScope]
    SDL_WindowData *data;
                    ^
src/video/emscripten/SDL_emscriptenvideo.c:262:21: style: The scope of the variable 'data' can be reduced. [variableScope]
    SDL_WindowData *data;
                    ^
src/video/emscripten/SDL_emscriptenvideo.c:272:21: style: The scope of the variable 'data' can be reduced. [variableScope]
    SDL_WindowData *data;
                    ^
src/video/haiku/SDL_bclipboard.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_BWin.h:93:5: warning: Member variable 'SDL_BWin::_bordered' is not initialized in the constructor. [uninitMemberVar]
    SDL_BWin(BRect bounds, window_look look, uint32 flags)
    ^
src/video/haiku/SDL_BWin.h:93:5: warning: Member variable 'SDL_BWin::_resizable' is not initialized in the constructor. [uninitMemberVar]
    SDL_BWin(BRect bounds, window_look look, uint32 flags)
    ^
src/video/haiku/SDL_BWin.h:96:9: performance: Variable '_last_buttons' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        _last_buttons = 0;
        ^
src/core/haiku/SDL_BApp.h:84:5: style: Class 'SDL_BLooper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    SDL_BLooper(const char* name) : BLooper(name)
    ^
src/video/haiku/SDL_bevents.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bframebuffer.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bframebuffer.cc:39:12: style: C-style pointer casting [cstyleCast]
    return (SDL_BWin *)(window->driverdata);
           ^
src/video/haiku/SDL_bmodes.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bmodes.cc:52:12: style: C-style pointer casting [cstyleCast]
    return (SDL_BWin *)(window->driverdata);
           ^
src/video/haiku/SDL_bmodes.cc:61:13: style: C-style pointer casting [cstyleCast]
    return ((SDL_DisplayModeData *)mode->driverdata)->bmode;
            ^
src/video/haiku/SDL_bmodes.cc:175:33: style: C-style pointer casting [cstyleCast]
    SDL_DisplayModeData *data = (SDL_DisplayModeData*)SDL_calloc(1,
                                ^
src/video/haiku/SDL_bmodes.cc:68:45: style: Parameter 'mode' can be declared with const [constParameter]
static float get_refresh_rate(display_mode &mode) {
                                            ^
src/video/haiku/SDL_BWin.h:103:9: performance: Variable '_gl_type' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
        _gl_type = 0;
        ^
src/video/haiku/SDL_bopengl.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bopengl.cc:39:12: style: C-style pointer casting [cstyleCast]
    return (SDL_BWin *)(window->driverdata);
           ^
src/video/haiku/SDL_bopengl.cc:148:22: style: C-style pointer casting [cstyleCast]
    SDL_BWin *bwin = (SDL_BWin*)glView->Window();
                     ^
src/video/haiku/SDL_bopengl.cc:71:18: style: Variable 'err' is assigned a value that is never used. [unreadVariable]
        if ((err =
                 ^
src/video/haiku/SDL_bvideo.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bvideo.cc:44:12: style: C-style pointer casting [cstyleCast]
    return (SDL_BWin *)(window->driverdata);
           ^
src/video/haiku/SDL_bvideo.cc:62:14: style: C-style pointer casting [cstyleCast]
    device = (SDL_VideoDevice *) SDL_calloc(1, sizeof(SDL_VideoDevice));
             ^
src/video/haiku/SDL_bvideo.cc:159:14: style: C-style pointer casting [cstyleCast]
    cursor = (SDL_Cursor *) SDL_calloc(1, sizeof(*cursor));
             ^
src/video/haiku/SDL_bvideo.cc:196:14: style: C-style pointer casting [cstyleCast]
    cursor = (SDL_Cursor *) SDL_calloc(1, sizeof(*cursor));
             ^
src/video/haiku/SDL_bvideo.cc:129:43: style:inconclusive: Function 'HAIKU_DeleteDevice' argument 1 names different: declaration '_this' definition 'device'. [funcArgNamesDifferent]
void HAIKU_DeleteDevice(SDL_VideoDevice * device)
                                          ^
src/video/haiku/SDL_bvideo.h:34:32: note: Function 'HAIKU_DeleteDevice' argument 1 names different: declaration '_this' definition 'device'.
extern void HAIKU_DeleteDevice(_THIS);
                               ^
src/video/haiku/SDL_bvideo.cc:129:43: note: Function 'HAIKU_DeleteDevice' argument 1 names different: declaration '_this' definition 'device'.
void HAIKU_DeleteDevice(SDL_VideoDevice * device)
                                          ^
src/video/haiku/SDL_bwindow.cc:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/haiku/SDL_bwindow.cc:37:12: style: C-style pointer casting [cstyleCast]
    return (SDL_BWin *)(window->driverdata);
           ^
src/video/haiku/SDL_bwindow.cc:93:27: style: C-style pointer casting [cstyleCast]
    SDL_BWin *otherBWin = (SDL_BWin*)data;
                          ^
src/video/kmsdrm/SDL_kmsdrmdyn.c:44:0: information: Skipping configuration 'SDL_VIDEO_DRIVER_KMSDRM;SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC' since the value of 'SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    { NULL, SDL_VIDEO_DRIVER_KMSDRM_DYNAMIC }
^
src/video/kmsdrm/SDL_kmsdrmevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/kmsdrm/SDL_kmsdrmmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/kmsdrm/SDL_kmsdrmmouse.c:333:17: style: Condition 'cursor' is always true [knownConditionTrueFalse]
            if (cursor) {
                ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:314:34: note: Assuming that condition 'cursor==NULL' is not redundant
    if (window == NULL || cursor == NULL) {
                                 ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:333:17: note: Condition 'cursor' is always true
            if (cursor) {
                ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:215:13: warning: Either the condition 'cursor->driverdata' is redundant or there is possible null pointer dereference: curdata. [nullPointerRedundantCheck]
        if (curdata->buffer) {
            ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:220:19: note: Assuming that condition 'cursor->driverdata' is not redundant
        if (cursor->driverdata) {
                  ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:213:19: note: Assignment 'curdata=(struct KMSDRM_CursorData*)cursor->driverdata', assigned value is 0
        curdata = (KMSDRM_CursorData *)cursor->driverdata;
                  ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:215:13: note: Null pointer dereference
        if (curdata->buffer) {
            ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:209:24: style: The scope of the variable 'curdata' can be reduced. [variableScope]
    KMSDRM_CursorData *curdata;
                       ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:302:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:415:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret = 0;
        ^
src/video/kmsdrm/SDL_kmsdrmmouse.c:415:13: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int ret = 0;
            ^
src/video/kmsdrm/SDL_kmsdrmopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/kmsdrm/SDL_kmsdrmvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/kmsdrm/SDL_kmsdrmvideo.c:224:9: style: Redundant initialization for 'ret'. The initialized value is overwritten before it is read. [redundantInitialization]
    ret = get_driindex();
        ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:200:13: note: ret is initialized
    int ret = -ENOENT;
            ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:224:9: note: ret is overwritten
    ret = get_driindex();
        ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:411:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:499:22: style: The scope of the variable 'drm_mode' can be reduced. [variableScope]
    drmModeModeInfo *drm_mode;
                     ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:520:22: style: The scope of the variable 'dispdata' can be reduced. [variableScope]
    SDL_DisplayData *dispdata;
                     ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:521:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:793:13: style: The scope of the variable 'current_area' can be reduced. [variableScope]
        int current_area, largest_area = 0;
            ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:1429:22: style: The scope of the variable 'mode' can be reduced. [variableScope]
    drmModeModeInfo *mode;
                     ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:1572:78: style:inconclusive: Function 'KMSDRM_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'. [funcArgNamesDifferent]
void KMSDRM_SetWindowFullscreen(_THIS, SDL_Window *window, SDL_VideoDisplay *display, SDL_bool fullscreen)
                                                                             ^
src/video/kmsdrm/SDL_kmsdrmvideo.h:129:78: note: Function 'KMSDRM_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'.
void KMSDRM_SetWindowFullscreen(_THIS, SDL_Window *window, SDL_VideoDisplay *_display, SDL_bool fullscreen);
                                                                             ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:1572:78: note: Function 'KMSDRM_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'.
void KMSDRM_SetWindowFullscreen(_THIS, SDL_Window *window, SDL_VideoDisplay *display, SDL_bool fullscreen)
                                                                             ^
src/video/kmsdrm/SDL_kmsdrmvideo.c:76:18: style: Variable 'devindex' is assigned a value that is never used. [unreadVariable]
    int devindex = -1;
                 ^
src/video/kmsdrm/SDL_kmsdrmvulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/n3ds/SDL_n3dsevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/n3ds/SDL_n3dsframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/n3ds/SDL_n3dsswkb.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/n3ds/SDL_n3dsvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/ngage/SDL_ngageevents.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/ngage/SDL_ngageframebuffer.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/ngage/SDL_ngageframebuffer.cpp:148:16: style: The scope of the variable 'frame_number' can be reduced. [variableScope]
    static int frame_number;
               ^
src/video/ngage/SDL_ngagevideo.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/ngage/SDL_ngagevideo.cpp:96:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        device = NULL;
        ^
src/video/ngage/SDL_ngagevideo.cpp:57:29: warning: Either the condition 'device' is redundant or there is possible null pointer dereference: device. [nullPointerRedundantCheck]
    SDL_VideoData *phdata = device->driverdata;
                            ^
src/video/ngage/SDL_ngagevideo.cpp:94:9: note: Assuming that condition 'device' is not redundant
    if (device) {
        ^
src/video/ngage/SDL_ngagevideo.cpp:57:29: note: Null pointer dereference
    SDL_VideoData *phdata = device->driverdata;
                            ^
src/video/ngage/SDL_ngagevideo.cpp:113:14: style: C-style pointer casting [cstyleCast]
    phdata = (SDL_VideoData *)SDL_calloc(1, sizeof(SDL_VideoData));
             ^
src/video/ngage/SDL_ngagewindow.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/offscreen/SDL_offscreenevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/offscreen/SDL_offscreenframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/offscreen/SDL_offscreenframebuffer.c:57:16: style: The scope of the variable 'frame_number' can be reduced. [variableScope]
    static int frame_number;
               ^
src/video/offscreen/SDL_offscreenopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/offscreen/SDL_offscreenvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/offscreen/SDL_offscreenwindow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/ps2/SDL_ps2video.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/psp/SDL_pspevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 82 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/psp/SDL_pspgl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/psp/SDL_pspmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/psp/SDL_pspmouse.c:34:9: style: struct member 'WMcursor::unused' is never used. [unusedStructMember]
    int unused;
        ^
src/video/psp/SDL_pspvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/qnx/SDL_qnxgl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/qnx/SDL_qnxkeyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/qnx/SDL_qnxvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/raspberry/SDL_rpievents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/raspberry/SDL_rpimouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/raspberry/SDL_rpimouse.c:113:17: style: The scope of the variable 'env' can be reduced. [variableScope]
    const char *env;
                ^
src/video/raspberry/SDL_rpimouse.c:187:9: style: The scope of the variable 'ret' can be reduced. [variableScope]
    int ret;
        ^
src/video/raspberry/SDL_rpimouse.c:189:21: style: The scope of the variable 'curdata' can be reduced. [variableScope]
    RPI_CursorData *curdata;
                    ^
src/video/raspberry/SDL_rpiopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/raspberry/SDL_rpivideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/riscos/SDL_riscosevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/riscos/SDL_riscosevents.c:117:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, x, y, buttons;
        ^
src/video/riscos/SDL_riscosframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 39 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/riscos/SDL_riscosmodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/riscos/SDL_riscosmodes.c:262:52: portability: 'pos' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
    for (pos = block; pos < (void *)regs.r[6]; pos += *((int *)pos)) {
                                                   ^
src/video/riscos/SDL_riscosmodes.c:263:34: portability: 'pos' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        if (!read_mode_block(pos + 4, &mode, SDL_FALSE)) {
                                 ^
src/video/riscos/SDL_riscosmodes.c:271:50: portability: 'pos' is of type 'void *'. When using void pointers in calculations, the behaviour is undefined. [arithOperationsOnVoidPointer]
        mode.driverdata = convert_mode_block(pos + 4);
                                                 ^
src/video/riscos/SDL_riscosvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/riscos/SDL_riscoswindow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitaframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitagl_pvr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitagl_pvr.c:51:11: style: The scope of the variable 'default_path' can be reduced. [variableScope]
    char *default_path = "app0:module";
          ^
src/video/vita/SDL_vitagl_pvr.c:52:10: style: The scope of the variable 'target_path' can be reduced. [variableScope]
    char target_path[MAX_PATH];
         ^
src/video/vita/SDL_vitagl_pvr.c:86:10: style: The scope of the variable 'gl_version' can be reduced. [variableScope]
    char gl_version[3];
         ^
src/video/vita/SDL_vitagles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitagles_pvr.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitagles_pvr.c:40:11: style: The scope of the variable 'default_path' can be reduced. [variableScope]
    char *default_path = "app0:module";
          ^
src/video/vita/SDL_vitagles_pvr.c:41:10: style: The scope of the variable 'target_path' can be reduced. [variableScope]
    char target_path[MAX_PATH];
         ^
src/video/vita/SDL_vitakeyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitamessagebox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitamouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitatouch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitavideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 47 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vita/SDL_vitavideo.c:391:13: style: The scope of the variable 'utf8_buffer' can be reduced. [variableScope]
    uint8_t utf8_buffer[SCE_IME_MAX_TEXT_LENGTH];
            ^
src/video/vivante/SDL_vivanteopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vivante/SDL_vivanteplatform.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vivante/SDL_vivantevideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 48 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/vivante/SDL_vivantevulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandclipboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylanddatamanager.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylanddatamanager.c:171:24: warning:inconclusive: Possible null pointer dereference: mime_list [nullPointer]
        if (SDL_strcmp(mime_list->mime_type, mime_type) == 0) {
                       ^
src/video/wayland/SDL_waylanddatamanager.c:169:35: note: Assignment 'mime_list=NULL', assigned value is 0
    SDL_MimeDataList *mime_list = NULL;
                                  ^
src/video/wayland/SDL_waylanddatamanager.c:171:24: note: Null pointer dereference
        if (SDL_strcmp(mime_list->mime_type, mime_type) == 0) {
                       ^
src/video/wayland/SDL_waylanddatamanager.c:235:13: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
        if (mime_data->data != NULL) {
            ^
src/video/wayland/SDL_waylanddatamanager.c:230:35: note: Assignment 'mime_data=NULL', assigned value is 0
    SDL_MimeDataList *mime_data = NULL;
                                  ^
src/video/wayland/SDL_waylanddatamanager.c:235:13: note: Null pointer dereference
        if (mime_data->data != NULL) {
            ^
src/video/wayland/SDL_waylanddatamanager.c:238:13: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
        if (mime_data->mime_type != NULL) {
            ^
src/video/wayland/SDL_waylanddatamanager.c:230:35: note: Assignment 'mime_data=NULL', assigned value is 0
    SDL_MimeDataList *mime_data = NULL;
                                  ^
src/video/wayland/SDL_waylanddatamanager.c:238:13: note: Null pointer dereference
        if (mime_data->mime_type != NULL) {
            ^
src/video/wayland/SDL_waylanddatamanager.c:584:34: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
                                 mime_data->mime_type);
                                 ^
src/video/wayland/SDL_waylanddatamanager.c:580:39: note: Assignment 'mime_data=NULL', assigned value is 0
        SDL_MimeDataList *mime_data = NULL;
                                      ^
src/video/wayland/SDL_waylanddatamanager.c:584:34: note: Null pointer dereference
                                 mime_data->mime_type);
                                 ^
src/video/wayland/SDL_waylanddatamanager.c:588:64: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
                if (SDL_strcmp(mime_conversion_list[index][1], mime_data->mime_type) == 0) {
                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:580:39: note: Assignment 'mime_data=NULL', assigned value is 0
        SDL_MimeDataList *mime_data = NULL;
                                      ^
src/video/wayland/SDL_waylanddatamanager.c:588:64: note: Null pointer dereference
                if (SDL_strcmp(mime_conversion_list[index][1], mime_data->mime_type) == 0) {
                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:635:51: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
                                                  mime_data->mime_type);
                                                  ^
src/video/wayland/SDL_waylanddatamanager.c:631:39: note: Assignment 'mime_data=NULL', assigned value is 0
        SDL_MimeDataList *mime_data = NULL;
                                      ^
src/video/wayland/SDL_waylanddatamanager.c:635:51: note: Null pointer dereference
                                                  mime_data->mime_type);
                                                  ^
src/video/wayland/SDL_waylanddatamanager.c:639:64: warning:inconclusive: Possible null pointer dereference: mime_data [nullPointer]
                if (SDL_strcmp(mime_conversion_list[index][1], mime_data->mime_type) == 0) {
                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:631:39: note: Assignment 'mime_data=NULL', assigned value is 0
        SDL_MimeDataList *mime_data = NULL;
                                      ^
src/video/wayland/SDL_waylanddatamanager.c:639:64: note: Null pointer dereference
                if (SDL_strcmp(mime_conversion_list[index][1], mime_data->mime_type) == 0) {
                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:93:12: style: The scope of the variable 'new_buffer_length' can be reduced. [variableScope]
    size_t new_buffer_length = 0;
           ^
src/video/wayland/SDL_waylanddatamanager.c:95:12: style: The scope of the variable 'pos' can be reduced. [variableScope]
    size_t pos = 0;
           ^
src/video/wayland/SDL_waylanddatamanager.c:184:12: style: The scope of the variable 'mime_type_length' can be reduced. [variableScope]
    size_t mime_type_length = 0;
           ^
src/video/wayland/SDL_waylanddatamanager.c:539:64: style:inconclusive: Function 'Wayland_data_device_clear_selection' argument 1 names different: declaration 'device' definition 'data_device'. [funcArgNamesDifferent]
int Wayland_data_device_clear_selection(SDL_WaylandDataDevice *data_device)
                                                               ^
src/video/wayland/SDL_waylanddatamanager.h:148:71: note: Function 'Wayland_data_device_clear_selection' argument 1 names different: declaration 'device' definition 'data_device'.
extern int Wayland_data_device_clear_selection(SDL_WaylandDataDevice *device);
                                                                      ^
src/video/wayland/SDL_waylanddatamanager.c:539:64: note: Function 'Wayland_data_device_clear_selection' argument 1 names different: declaration 'device' definition 'data_device'.
int Wayland_data_device_clear_selection(SDL_WaylandDataDevice *data_device)
                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:553:89: style:inconclusive: Function 'Wayland_primary_selection_device_clear_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'. [funcArgNamesDifferent]
int Wayland_primary_selection_device_clear_selection(SDL_WaylandPrimarySelectionDevice *primary_selection_device)
                                                                                        ^
src/video/wayland/SDL_waylanddatamanager.h:149:96: note: Function 'Wayland_primary_selection_device_clear_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
extern int Wayland_primary_selection_device_clear_selection(SDL_WaylandPrimarySelectionDevice *device);
                                                                                               ^
src/video/wayland/SDL_waylanddatamanager.c:553:89: note: Function 'Wayland_primary_selection_device_clear_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
int Wayland_primary_selection_device_clear_selection(SDL_WaylandPrimarySelectionDevice *primary_selection_device)
                                                                                        ^
src/video/wayland/SDL_waylanddatamanager.c:568:62: style:inconclusive: Function 'Wayland_data_device_set_selection' argument 1 names different: declaration 'device' definition 'data_device'. [funcArgNamesDifferent]
int Wayland_data_device_set_selection(SDL_WaylandDataDevice *data_device,
                                                             ^
src/video/wayland/SDL_waylanddatamanager.h:150:69: note: Function 'Wayland_data_device_set_selection' argument 1 names different: declaration 'device' definition 'data_device'.
extern int Wayland_data_device_set_selection(SDL_WaylandDataDevice *device,
                                                                    ^
src/video/wayland/SDL_waylanddatamanager.c:568:62: note: Function 'Wayland_data_device_set_selection' argument 1 names different: declaration 'device' definition 'data_device'.
int Wayland_data_device_set_selection(SDL_WaylandDataDevice *data_device,
                                                             ^
src/video/wayland/SDL_waylanddatamanager.c:619:87: style:inconclusive: Function 'Wayland_primary_selection_device_set_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'. [funcArgNamesDifferent]
int Wayland_primary_selection_device_set_selection(SDL_WaylandPrimarySelectionDevice *primary_selection_device,
                                                                                      ^
src/video/wayland/SDL_waylanddatamanager.h:152:94: note: Function 'Wayland_primary_selection_device_set_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
extern int Wayland_primary_selection_device_set_selection(SDL_WaylandPrimarySelectionDevice *device,
                                                                                             ^
src/video/wayland/SDL_waylanddatamanager.c:619:87: note: Function 'Wayland_primary_selection_device_set_selection' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
int Wayland_primary_selection_device_set_selection(SDL_WaylandPrimarySelectionDevice *primary_selection_device,
                                                                                      ^
src/video/wayland/SDL_waylanddatamanager.c:670:59: style:inconclusive: Function 'Wayland_data_device_set_serial' argument 1 names different: declaration 'device' definition 'data_device'. [funcArgNamesDifferent]
int Wayland_data_device_set_serial(SDL_WaylandDataDevice *data_device,
                                                          ^
src/video/wayland/SDL_waylanddatamanager.h:154:66: note: Function 'Wayland_data_device_set_serial' argument 1 names different: declaration 'device' definition 'data_device'.
extern int Wayland_data_device_set_serial(SDL_WaylandDataDevice *device,
                                                                 ^
src/video/wayland/SDL_waylanddatamanager.c:670:59: note: Function 'Wayland_data_device_set_serial' argument 1 names different: declaration 'device' definition 'data_device'.
int Wayland_data_device_set_serial(SDL_WaylandDataDevice *data_device,
                                                          ^
src/video/wayland/SDL_waylanddatamanager.c:690:84: style:inconclusive: Function 'Wayland_primary_selection_device_set_serial' argument 1 names different: declaration 'device' definition 'primary_selection_device'. [funcArgNamesDifferent]
int Wayland_primary_selection_device_set_serial(SDL_WaylandPrimarySelectionDevice *primary_selection_device,
                                                                                   ^
src/video/wayland/SDL_waylanddatamanager.h:156:91: note: Function 'Wayland_primary_selection_device_set_serial' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
extern int Wayland_primary_selection_device_set_serial(SDL_WaylandPrimarySelectionDevice *device,
                                                                                          ^
src/video/wayland/SDL_waylanddatamanager.c:690:84: note: Function 'Wayland_primary_selection_device_set_serial' argument 1 names different: declaration 'device' definition 'primary_selection_device'.
int Wayland_primary_selection_device_set_serial(SDL_WaylandPrimarySelectionDevice *primary_selection_device,
                                                                                   ^
src/video/wayland/SDL_waylanddatamanager.c:93:30: style: Variable 'new_buffer_length' is assigned a value that is never used. [unreadVariable]
    size_t new_buffer_length = 0;
                             ^
src/video/wayland/SDL_waylanddatamanager.c:95:16: style: Variable 'pos' is assigned a value that is never used. [unreadVariable]
    size_t pos = 0;
               ^
src/video/wayland/SDL_waylanddatamanager.c:184:29: style: Variable 'mime_type_length' is assigned a value that is never used. [unreadVariable]
    size_t mime_type_length = 0;
                            ^
src/video/wayland/SDL_waylanddyn.c:51:0: information: Skipping configuration 'SDL_VIDEO_DRIVER_WAYLAND;SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC' since the value of 'SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    { NULL, SDL_VIDEO_DRIVER_WAYLAND_DYNAMIC },
^
src/video/wayland/SDL_waylandevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 46 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandevents.c:668:14: style: The scope of the variable 'sdl_button' can be reduced. [variableScope]
    uint32_t sdl_button;
             ^
src/video/wayland/SDL_waylandevents.c:740:11: style: The scope of the variable 'x' can be reduced. [variableScope]
    float x, y;
          ^
src/video/wayland/SDL_waylandevents.c:740:14: style: The scope of the variable 'y' can be reduced. [variableScope]
    float x, y;
             ^
src/video/wayland/SDL_waylandevents.c:2947:21: style: The scope of the variable 'w' can be reduced. [variableScope]
    SDL_WindowData *w;
                    ^
src/video/wayland/SDL_waylandevents.c:1843:23: style: Variable 'has_mime' is assigned a value that is never used. [unreadVariable]
    SDL_bool has_mime = SDL_FALSE;
                      ^
src/video/wayland/SDL_waylandkeyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 76 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandtouch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 49 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandvulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandwindow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 79 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/wayland/SDL_waylandwindow.c:273:27: style: The scope of the variable 'region' can be reduced. [variableScope]
        struct wl_region *region;
                          ^
src/video/wayland/SDL_waylandwindow.c:989:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/wayland/SDL_waylandwindow.c:1023:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/wayland/SDL_waylandwindow.c:1733:52: style:inconclusive: Function 'Wayland_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'. [funcArgNamesDifferent]
                                 SDL_VideoDisplay *display, SDL_bool fullscreen)
                                                   ^
src/video/wayland/SDL_waylandwindow.h:133:59: note: Function 'Wayland_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'.
                                        SDL_VideoDisplay *_display,
                                                          ^
src/video/wayland/SDL_waylandwindow.c:1733:52: note: Function 'Wayland_SetWindowFullscreen' argument 3 names different: declaration '_display' definition 'display'.
                                 SDL_VideoDisplay *display, SDL_bool fullscreen)
                                                   ^
src/video/windows/SDL_windowsclipboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsevents.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 55 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsevents.c:2010:0: information: Skipping configuration 'CS_BYTEALIGNCLIENT;CS_OWNDC;SDL_VIDEO_DRIVER_WINDOWS' since the value of 'CS_BYTEALIGNCLIENT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        style = (CS_BYTEALIGNCLIENT | CS_OWNDC);
^
src/video/windows/SDL_windowsevents.c:2010:0: information: Skipping configuration 'CS_BYTEALIGNCLIENT;CS_OWNDC;SDL_VIDEO_DRIVER_WINDOWS' since the value of 'CS_OWNDC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        style = (CS_BYTEALIGNCLIENT | CS_OWNDC);
^
src/video/windows/SDL_windowsevents.c:935:36: style: The scope of the variable 'wobble' can be reduced. [variableScope]
                        static int wobble;
                                   ^
src/video/windows/SDL_windowsframebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowskeyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 46 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsmessagebox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsmodes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 45 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsmouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsopengl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 46 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsopengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsshape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 43 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsvideo.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 82 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowsvideo.c:693:23: style: Condition 'value==0' is always false [knownConditionTrueFalse]
            if (value == 0) {
                      ^
src/video/windows/SDL_windowsvideo.c:687:19: note: Assignment 'value=~0U', assigned value is 4294967295
    DWORD value = ~0U;
                  ^
src/video/windows/SDL_windowsvideo.c:693:23: note: Condition 'value==0' is always false
            if (value == 0) {
                      ^
src/video/windows/SDL_windowsvideo.c:620:19: style: The scope of the variable 'nOutput' can be reduced. [variableScope]
    int nAdapter, nOutput;
                  ^
src/video/windows/SDL_windowsvulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowswindow.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 87 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/windows/SDL_windowswindow.c:365:0: information: Skipping configuration 'GWLP_WNDPROC;SDL_VIDEO_DRIVER_WINDOWS' since the value of 'GWLP_WNDPROC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    data->wndproc = (WNDPROC)GetWindowLongPtr(hwnd, GWLP_WNDPROC);
^
src/video/windows/SDL_windowswindow.c:369:0: information: Skipping configuration 'GWLP_WNDPROC;SDL_VIDEO_DRIVER_WINDOWS' since the value of 'GWLP_WNDPROC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
        SetWindowLongPtr(hwnd, GWLP_WNDPROC, (LONG_PTR)WIN_WindowProc);
^
src/video/windows/SDL_windowswindow.c:515:0: information: Skipping configuration 'GWLP_WNDPROC;SDL_VIDEO_DRIVER_WINDOWS' since the value of 'GWLP_WNDPROC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                SetWindowLongPtr(data->hwnd, GWLP_WNDPROC,
^
src/video/winrt/SDL_winrtevents.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 83 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtgamebar.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtkeyboard.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 40 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtmessagebox.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 41 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtmouse.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtopengles.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 42 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtpointerinput.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 44 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/winrt/SDL_winrtvideo.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 50 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11clipboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11dyn.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 20 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11dyn.c:61:0: information: Skipping configuration 'SDL_VIDEO_DRIVER_X11;SDL_VIDEO_DRIVER_X11_DYNAMIC' since the value of 'SDL_VIDEO_DRIVER_X11_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    { NULL, SDL_VIDEO_DRIVER_X11_DYNAMIC },
^
src/video/x11/SDL_x11dyn.c:61:0: information: Skipping configuration 'SDL_VIDEO_DRIVER_X11;SDL_VIDEO_DRIVER_X11_DYNAMIC;X_HAVE_UTF8_STRING' since the value of 'SDL_VIDEO_DRIVER_X11_DYNAMIC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    { NULL, SDL_VIDEO_DRIVER_X11_DYNAMIC },
^
src/video/x11/SDL_x11events.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 68 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11events.c:792:15: warning: Either the condition 'videodata' is redundant or there is possible null pointer dereference: videodata. [nullPointerRedundantCheck]
    display = videodata->display;
              ^
src/video/x11/SDL_x11events.c:864:9: note: Assuming that condition 'videodata' is not redundant
    if (videodata && videodata->windowlist) {
        ^
src/video/x11/SDL_x11events.c:792:15: note: Null pointer dereference
    display = videodata->display;
              ^
src/video/x11/SDL_x11events.c:857:10: warning: Either the condition 'videodata' is redundant or there is possible null pointer dereference: videodata. [nullPointerRedundantCheck]
    if ((videodata->clipboard_window != None) &&
         ^
src/video/x11/SDL_x11events.c:864:9: note: Assuming that condition 'videodata' is not redundant
    if (videodata && videodata->windowlist) {
        ^
src/video/x11/SDL_x11events.c:857:10: note: Null pointer dereference
    if ((videodata->clipboard_window != None) &&
         ^
src/video/x11/SDL_x11events.c:121:11: style: The scope of the variable 'name' can be reduced. [variableScope]
    char *name;
          ^
src/video/x11/SDL_x11events.c:1606:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
src/video/x11/SDL_x11events.c:1075:23: style: Variable 'status' is assigned a value that is never used. [unreadVariable]
        Status status = 0;
                      ^
src/video/x11/SDL_x11framebuffer.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 56 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11keyboard.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 61 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11keyboard.c:402:25: style: Variable 'data' is assigned a value that is never used. [unreadVariable]
    SDL_VideoData *data = _this->driverdata;
                        ^
src/video/x11/SDL_x11messagebox.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11modes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11mouse.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11opengl.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 61 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11opengles.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11shape.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11touch.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 56 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11video.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 69 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11vulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 56 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11window.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 70 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11xfixes.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 57 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/SDL_x11xinput2.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 60 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/video/x11/edid-parse.c:522:27: style:inconclusive: Function 'decode_edid' argument 1 names different: declaration 'data' definition 'edid'. [funcArgNamesDifferent]
decode_edid (const uchar *edid)
                          ^
src/video/x11/edid.h:164:39: note: Function 'decode_edid' argument 1 names different: declaration 'data' definition 'edid'.
MonitorInfo *decode_edid(const uchar *data);
                                      ^
src/video/x11/edid-parse.c:522:27: note: Function 'decode_edid' argument 1 names different: declaration 'data' definition 'edid'.
decode_edid (const uchar *edid)
                          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:31:17: note: Function 'yuv420_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_rgb565_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:31:35: note: Function 'yuv420_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_rgb565_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:31:53: note: Function 'yuv420_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:31:65: note: Function 'yuv420_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:31:84: note: Function 'yuv420_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:32:11: note: Function 'yuv420_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:32:25: note: Function 'yuv420_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:37:17: note: Function 'yuv420_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_rgb24_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:37:35: note: Function 'yuv420_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_rgb24_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:37:53: note: Function 'yuv420_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:37:65: note: Function 'yuv420_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:37:84: note: Function 'yuv420_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:38:11: note: Function 'yuv420_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:38:25: note: Function 'yuv420_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_rgba_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:43:17: note: Function 'yuv420_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_rgba_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:43:35: note: Function 'yuv420_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_rgba_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:43:53: note: Function 'yuv420_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:43:65: note: Function 'yuv420_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:43:84: note: Function 'yuv420_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:44:11: note: Function 'yuv420_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:44:25: note: Function 'yuv420_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_bgra_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:49:17: note: Function 'yuv420_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_bgra_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:49:35: note: Function 'yuv420_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_bgra_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:49:53: note: Function 'yuv420_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:49:65: note: Function 'yuv420_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:49:84: note: Function 'yuv420_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:50:11: note: Function 'yuv420_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:50:25: note: Function 'yuv420_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_argb_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:55:17: note: Function 'yuv420_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_argb_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:55:35: note: Function 'yuv420_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_argb_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:55:53: note: Function 'yuv420_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:55:65: note: Function 'yuv420_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:55:84: note: Function 'yuv420_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:56:11: note: Function 'yuv420_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:56:25: note: Function 'yuv420_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv420_abgr_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:61:17: note: Function 'yuv420_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv420_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv420_abgr_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:61:35: note: Function 'yuv420_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv420_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv420_abgr_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:61:53: note: Function 'yuv420_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv420_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv420_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:61:65: note: Function 'yuv420_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv420_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv420_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:61:84: note: Function 'yuv420_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv420_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv420_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:62:11: note: Function 'yuv420_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv420_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv420_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:62:25: note: Function 'yuv420_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv420_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:67:17: note: Function 'yuv422_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_rgb565_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:67:35: note: Function 'yuv422_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_rgb565_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:67:53: note: Function 'yuv422_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:67:65: note: Function 'yuv422_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:67:84: note: Function 'yuv422_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:68:11: note: Function 'yuv422_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:68:25: note: Function 'yuv422_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:73:17: note: Function 'yuv422_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_rgb24_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:73:35: note: Function 'yuv422_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_rgb24_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:73:53: note: Function 'yuv422_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:73:65: note: Function 'yuv422_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:73:84: note: Function 'yuv422_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:74:11: note: Function 'yuv422_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:74:25: note: Function 'yuv422_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_rgba_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:79:17: note: Function 'yuv422_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_rgba_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:79:35: note: Function 'yuv422_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_rgba_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:79:53: note: Function 'yuv422_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:79:65: note: Function 'yuv422_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:79:84: note: Function 'yuv422_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:80:11: note: Function 'yuv422_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:80:25: note: Function 'yuv422_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_bgra_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:85:17: note: Function 'yuv422_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_bgra_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:85:35: note: Function 'yuv422_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_bgra_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:85:53: note: Function 'yuv422_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:85:65: note: Function 'yuv422_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:85:84: note: Function 'yuv422_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:86:11: note: Function 'yuv422_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:86:25: note: Function 'yuv422_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_argb_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:91:17: note: Function 'yuv422_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_argb_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:91:35: note: Function 'yuv422_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_argb_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:91:53: note: Function 'yuv422_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:91:65: note: Function 'yuv422_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:91:84: note: Function 'yuv422_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:92:11: note: Function 'yuv422_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:92:25: note: Function 'yuv422_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuv422_abgr_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:97:17: note: Function 'yuv422_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuv422_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuv422_abgr_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:97:35: note: Function 'yuv422_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuv422_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuv422_abgr_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:97:53: note: Function 'yuv422_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuv422_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuv422_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:97:65: note: Function 'yuv422_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuv422_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuv422_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:97:84: note: Function 'yuv422_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuv422_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuv422_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:98:11: note: Function 'yuv422_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuv422_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuv422_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:98:25: note: Function 'yuv422_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuv422_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:103:17: note: Function 'yuvnv12_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_rgb565_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:103:35: note: Function 'yuvnv12_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_rgb565_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:103:53: note: Function 'yuvnv12_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_rgb565_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:103:65: note: Function 'yuvnv12_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_rgb565_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:103:84: note: Function 'yuvnv12_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_rgb565_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:104:11: note: Function 'yuvnv12_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_rgb565_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:104:25: note: Function 'yuvnv12_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_rgb565_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:109:17: note: Function 'yuvnv12_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_rgb24_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:109:35: note: Function 'yuvnv12_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_rgb24_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:109:53: note: Function 'yuvnv12_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_rgb24_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:109:65: note: Function 'yuvnv12_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_rgb24_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:109:84: note: Function 'yuvnv12_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_rgb24_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:110:11: note: Function 'yuvnv12_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_rgb24_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:110:25: note: Function 'yuvnv12_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_rgb24_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_rgba_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:115:17: note: Function 'yuvnv12_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_rgba_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_rgba_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:115:35: note: Function 'yuvnv12_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_rgba_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_rgba_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:115:53: note: Function 'yuvnv12_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_rgba_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:115:65: note: Function 'yuvnv12_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_rgba_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:115:84: note: Function 'yuvnv12_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_rgba_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:116:11: note: Function 'yuvnv12_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_rgba_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:116:25: note: Function 'yuvnv12_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_rgba_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_bgra_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:121:17: note: Function 'yuvnv12_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_bgra_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_bgra_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:121:35: note: Function 'yuvnv12_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_bgra_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_bgra_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:121:53: note: Function 'yuvnv12_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_bgra_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:121:65: note: Function 'yuvnv12_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_bgra_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:121:84: note: Function 'yuvnv12_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_bgra_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:122:11: note: Function 'yuvnv12_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_bgra_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:122:25: note: Function 'yuvnv12_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_bgra_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_argb_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:127:17: note: Function 'yuvnv12_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_argb_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_argb_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:127:35: note: Function 'yuvnv12_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_argb_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_argb_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:127:53: note: Function 'yuvnv12_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_argb_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:127:65: note: Function 'yuvnv12_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_argb_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:127:84: note: Function 'yuvnv12_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_argb_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:128:11: note: Function 'yuvnv12_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_argb_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:128:25: note: Function 'yuvnv12_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_argb_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: style:inconclusive: Function 'yuvnv12_abgr_std' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:133:17: note: Function 'yuvnv12_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:17: note: Function 'yuvnv12_abgr_std' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: style:inconclusive: Function 'yuvnv12_abgr_std' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:133:35: note: Function 'yuvnv12_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:35: note: Function 'yuvnv12_abgr_std' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: style:inconclusive: Function 'yuvnv12_abgr_std' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:133:53: note: Function 'yuvnv12_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:53: note: Function 'yuvnv12_abgr_std' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: style:inconclusive: Function 'yuvnv12_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb.h:133:65: note: Function 'yuvnv12_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:65: note: Function 'yuvnv12_abgr_std' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: style:inconclusive: Function 'yuvnv12_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb.h:133:84: note: Function 'yuvnv12_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:74:84: note: Function 'yuvnv12_abgr_std' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *Y, const uint8_t *U, const uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: style:inconclusive: Function 'yuvnv12_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:134:11: note: Function 'yuvnv12_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:11: note: Function 'yuvnv12_abgr_std' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *RGB, uint32_t RGB_stride,
          ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: style:inconclusive: Function 'yuvnv12_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.h:134:25: note: Function 'yuvnv12_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_std_func.h:75:25: note: Function 'yuvnv12_abgr_std' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *RGB, uint32_t RGB_stride,
                        ^
src/video/yuv2rgb/yuv_rgb.c:187:17: style:inconclusive: Function 'rgb24_yuv420_std' argument 3 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
 const uint8_t *RGB, uint32_t RGB_stride,
                ^
src/video/yuv2rgb/yuv_rgb.h:361:17: note: Function 'rgb24_yuv420_std' argument 3 names different: declaration 'rgb' definition 'RGB'.
 const uint8_t *rgb, uint32_t rgb_stride,
                ^
src/video/yuv2rgb/yuv_rgb.c:187:17: note: Function 'rgb24_yuv420_std' argument 3 names different: declaration 'rgb' definition 'RGB'.
 const uint8_t *RGB, uint32_t RGB_stride,
                ^
src/video/yuv2rgb/yuv_rgb.c:187:31: style:inconclusive: Function 'rgb24_yuv420_std' argument 4 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
 const uint8_t *RGB, uint32_t RGB_stride,
                              ^
src/video/yuv2rgb/yuv_rgb.h:361:31: note: Function 'rgb24_yuv420_std' argument 4 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 const uint8_t *rgb, uint32_t rgb_stride,
                              ^
src/video/yuv2rgb/yuv_rgb.c:187:31: note: Function 'rgb24_yuv420_std' argument 4 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 const uint8_t *RGB, uint32_t RGB_stride,
                              ^
src/video/yuv2rgb/yuv_rgb.c:188:11: style:inconclusive: Function 'rgb24_yuv420_std' argument 5 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
          ^
src/video/yuv2rgb/yuv_rgb.h:362:11: note: Function 'rgb24_yuv420_std' argument 5 names different: declaration 'y' definition 'Y'.
 uint8_t *y, uint8_t *u, uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
          ^
src/video/yuv2rgb/yuv_rgb.c:188:11: note: Function 'rgb24_yuv420_std' argument 5 names different: declaration 'y' definition 'Y'.
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
          ^
src/video/yuv2rgb/yuv_rgb.c:188:23: style:inconclusive: Function 'rgb24_yuv420_std' argument 6 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                      ^
src/video/yuv2rgb/yuv_rgb.h:362:23: note: Function 'rgb24_yuv420_std' argument 6 names different: declaration 'u' definition 'U'.
 uint8_t *y, uint8_t *u, uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                      ^
src/video/yuv2rgb/yuv_rgb.c:188:23: note: Function 'rgb24_yuv420_std' argument 6 names different: declaration 'u' definition 'U'.
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                      ^
src/video/yuv2rgb/yuv_rgb.c:188:35: style:inconclusive: Function 'rgb24_yuv420_std' argument 7 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.h:362:35: note: Function 'rgb24_yuv420_std' argument 7 names different: declaration 'v' definition 'V'.
 uint8_t *y, uint8_t *u, uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.c:188:35: note: Function 'rgb24_yuv420_std' argument 7 names different: declaration 'v' definition 'V'.
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb.c:188:47: style:inconclusive: Function 'rgb24_yuv420_std' argument 8 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                              ^
src/video/yuv2rgb/yuv_rgb.h:362:47: note: Function 'rgb24_yuv420_std' argument 8 names different: declaration 'y_stride' definition 'Y_stride'.
 uint8_t *y, uint8_t *u, uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                              ^
src/video/yuv2rgb/yuv_rgb.c:188:47: note: Function 'rgb24_yuv420_std' argument 8 names different: declaration 'y_stride' definition 'Y_stride'.
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                              ^
src/video/yuv2rgb/yuv_rgb.c:188:66: style:inconclusive: Function 'rgb24_yuv420_std' argument 9 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                 ^
src/video/yuv2rgb/yuv_rgb.h:362:66: note: Function 'rgb24_yuv420_std' argument 9 names different: declaration 'uv_stride' definition 'UV_stride'.
 uint8_t *y, uint8_t *u, uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                 ^
src/video/yuv2rgb/yuv_rgb.c:188:66: note: Function 'rgb24_yuv420_std' argument 9 names different: declaration 'uv_stride' definition 'UV_stride'.
 uint8_t *Y, uint8_t *U, uint8_t *V, uint32_t Y_stride, uint32_t UV_stride,
                                                                 ^
src/video/yuv2rgb/yuv_rgb_std_func.h:220:4: style: Variable 'rgb_ptr1' is assigned a value that is never used. [unreadVariable]
   PACK_PIXEL(rgb_ptr1);
   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:334:34: style: The comparison 'uv_y_sample_interval == 2' is always true. [knownConditionTrueFalse]
        if (uv_y_sample_interval == 2 && ypos == (height - 1)) {
                                 ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:278:38: note: 'uv_y_sample_interval' is assigned value '2' here.
    const int uv_y_sample_interval = 2;
                                     ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:334:34: note: The comparison 'uv_y_sample_interval == 2' is always true.
        if (uv_y_sample_interval == 2 && ypos == (height - 1)) {
                                 ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:297:14: style: The scope of the variable 'xpos' can be reduced. [variableScope]
    uint32_t xpos, ypos;
             ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:297:20: style: The scope of the variable 'ypos' can be reduced. [variableScope]
    uint32_t xpos, ypos;
                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb.h:385:17: note: Function 'yuv420_rgb24_lsx' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: note: Function 'yuv420_rgb24_lsx' argument 3 names different: declaration 'y' definition 'Y'.
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 4 names different: declaration 'u' definition 'U'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb.h:385:35: note: Function 'yuv420_rgb24_lsx' argument 4 names different: declaration 'u' definition 'U'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: note: Function 'yuv420_rgb24_lsx' argument 4 names different: declaration 'u' definition 'U'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 5 names different: declaration 'v' definition 'V'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb.h:385:53: note: Function 'yuv420_rgb24_lsx' argument 5 names different: declaration 'v' definition 'V'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: note: Function 'yuv420_rgb24_lsx' argument 5 names different: declaration 'v' definition 'V'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb.h:385:65: note: Function 'yuv420_rgb24_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: note: Function 'yuv420_rgb24_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb.h:385:84: note: Function 'yuv420_rgb24_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *u, const uint8_t *v, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: note: Function 'yuv420_rgb24_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:386:11: note: Function 'yuv420_rgb24_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: note: Function 'yuv420_rgb24_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: style:inconclusive: Function 'yuv420_rgb24_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb.h:386:25: note: Function 'yuv420_rgb24_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: note: Function 'yuv420_rgb24_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: style:inconclusive: Function 'yuv420_rgba_lsx' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb.h:391:17: note: Function 'yuv420_rgba_lsx' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: note: Function 'yuv420_rgba_lsx' argument 3 names different: declaration 'y' definition 'Y'.
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: style:inconclusive: Function 'yuv420_rgba_lsx' argument 4 names different: declaration 'v' definition 'U'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb.h:391:35: note: Function 'yuv420_rgba_lsx' argument 4 names different: declaration 'v' definition 'U'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: note: Function 'yuv420_rgba_lsx' argument 4 names different: declaration 'v' definition 'U'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: style:inconclusive: Function 'yuv420_rgba_lsx' argument 5 names different: declaration 'u' definition 'V'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb.h:391:53: note: Function 'yuv420_rgba_lsx' argument 5 names different: declaration 'u' definition 'V'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: note: Function 'yuv420_rgba_lsx' argument 5 names different: declaration 'u' definition 'V'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: style:inconclusive: Function 'yuv420_rgba_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb.h:391:65: note: Function 'yuv420_rgba_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: note: Function 'yuv420_rgba_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: style:inconclusive: Function 'yuv420_rgba_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb.h:391:84: note: Function 'yuv420_rgba_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: note: Function 'yuv420_rgba_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: style:inconclusive: Function 'yuv420_rgba_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:392:11: note: Function 'yuv420_rgba_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: note: Function 'yuv420_rgba_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: style:inconclusive: Function 'yuv420_rgba_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb.h:392:25: note: Function 'yuv420_rgba_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: note: Function 'yuv420_rgba_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: style:inconclusive: Function 'yuv420_bgra_lsx' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb.h:397:17: note: Function 'yuv420_bgra_lsx' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: note: Function 'yuv420_bgra_lsx' argument 3 names different: declaration 'y' definition 'Y'.
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: style:inconclusive: Function 'yuv420_bgra_lsx' argument 4 names different: declaration 'v' definition 'U'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb.h:397:35: note: Function 'yuv420_bgra_lsx' argument 4 names different: declaration 'v' definition 'U'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: note: Function 'yuv420_bgra_lsx' argument 4 names different: declaration 'v' definition 'U'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: style:inconclusive: Function 'yuv420_bgra_lsx' argument 5 names different: declaration 'u' definition 'V'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb.h:397:53: note: Function 'yuv420_bgra_lsx' argument 5 names different: declaration 'u' definition 'V'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: note: Function 'yuv420_bgra_lsx' argument 5 names different: declaration 'u' definition 'V'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: style:inconclusive: Function 'yuv420_bgra_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb.h:397:65: note: Function 'yuv420_bgra_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: note: Function 'yuv420_bgra_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: style:inconclusive: Function 'yuv420_bgra_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb.h:397:84: note: Function 'yuv420_bgra_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: note: Function 'yuv420_bgra_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: style:inconclusive: Function 'yuv420_bgra_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:398:11: note: Function 'yuv420_bgra_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: note: Function 'yuv420_bgra_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: style:inconclusive: Function 'yuv420_bgra_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb.h:398:25: note: Function 'yuv420_bgra_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: note: Function 'yuv420_bgra_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: style:inconclusive: Function 'yuv420_argb_lsx' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb.h:403:17: note: Function 'yuv420_argb_lsx' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: note: Function 'yuv420_argb_lsx' argument 3 names different: declaration 'y' definition 'Y'.
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: style:inconclusive: Function 'yuv420_argb_lsx' argument 4 names different: declaration 'v' definition 'U'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb.h:403:35: note: Function 'yuv420_argb_lsx' argument 4 names different: declaration 'v' definition 'U'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: note: Function 'yuv420_argb_lsx' argument 4 names different: declaration 'v' definition 'U'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: style:inconclusive: Function 'yuv420_argb_lsx' argument 5 names different: declaration 'u' definition 'V'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb.h:403:53: note: Function 'yuv420_argb_lsx' argument 5 names different: declaration 'u' definition 'V'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: note: Function 'yuv420_argb_lsx' argument 5 names different: declaration 'u' definition 'V'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: style:inconclusive: Function 'yuv420_argb_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb.h:403:65: note: Function 'yuv420_argb_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: note: Function 'yuv420_argb_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: style:inconclusive: Function 'yuv420_argb_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb.h:403:84: note: Function 'yuv420_argb_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: note: Function 'yuv420_argb_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: style:inconclusive: Function 'yuv420_argb_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:404:11: note: Function 'yuv420_argb_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: note: Function 'yuv420_argb_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: style:inconclusive: Function 'yuv420_argb_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb.h:404:25: note: Function 'yuv420_argb_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: note: Function 'yuv420_argb_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: style:inconclusive: Function 'yuv420_abgr_lsx' argument 3 names different: declaration 'y' definition 'Y'. [funcArgNamesDifferent]
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb.h:409:17: note: Function 'yuv420_abgr_lsx' argument 3 names different: declaration 'y' definition 'Y'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:268:72: note: Function 'yuv420_abgr_lsx' argument 3 names different: declaration 'y' definition 'Y'.
void LSX_FUNCTION_NAME(uint32_t width, uint32_t height, const uint8_t *Y,
                                                                       ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: style:inconclusive: Function 'yuv420_abgr_lsx' argument 4 names different: declaration 'v' definition 'U'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb.h:409:35: note: Function 'yuv420_abgr_lsx' argument 4 names different: declaration 'v' definition 'U'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                  ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:39: note: Function 'yuv420_abgr_lsx' argument 4 names different: declaration 'v' definition 'U'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                      ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: style:inconclusive: Function 'yuv420_abgr_lsx' argument 5 names different: declaration 'u' definition 'V'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb.h:409:53: note: Function 'yuv420_abgr_lsx' argument 5 names different: declaration 'u' definition 'V'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:57: note: Function 'yuv420_abgr_lsx' argument 5 names different: declaration 'u' definition 'V'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: style:inconclusive: Function 'yuv420_abgr_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'. [funcArgNamesDifferent]
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb.h:409:65: note: Function 'yuv420_abgr_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:269:69: note: Function 'yuv420_abgr_lsx' argument 6 names different: declaration 'y_stride' definition 'Y_stride'.
                       const uint8_t *U, const uint8_t *V, uint32_t Y_stride,
                                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: style:inconclusive: Function 'yuv420_abgr_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb.h:409:84: note: Function 'yuv420_abgr_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
 const uint8_t *y, const uint8_t *v, const uint8_t *u, uint32_t y_stride, uint32_t uv_stride,
                                                                                   ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:33: note: Function 'yuv420_abgr_lsx' argument 7 names different: declaration 'uv_stride' definition 'UV_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: style:inconclusive: Function 'yuv420_abgr_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb.h:410:11: note: Function 'yuv420_abgr_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
 uint8_t *rgb, uint32_t rgb_stride,
          ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:53: note: Function 'yuv420_abgr_lsx' argument 8 names different: declaration 'rgb' definition 'RGB'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                    ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: style:inconclusive: Function 'yuv420_abgr_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'. [funcArgNamesDifferent]
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb.h:410:25: note: Function 'yuv420_abgr_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
 uint8_t *rgb, uint32_t rgb_stride,
                        ^
src/video/yuv2rgb/yuv_rgb_lsx_func.h:270:67: note: Function 'yuv420_abgr_lsx' argument 9 names different: declaration 'rgb_stride' definition 'RGB_stride'.
                       uint32_t UV_stride, uint8_t *RGB, uint32_t RGB_stride,
                                                                  ^
src/video/yuv2rgb/yuv_rgb_sse_func.h:385:6: error: There is an unknown macro here somewhere. Configuration is required. If SDL_TARGETING is a macro then please configure it. [unknownMacro]
void SDL_TARGETING("sse2") SSE_FUNCTION_NAME(uint32_t width, uint32_t height,
     ^
test/gamepadmap.c:727:17: style: The scope of the variable 'name' can be reduced. [variableScope]
    const char *name;
                ^
test/loopwave.c:110:9: style: Condition 'done' is always false [knownConditionTrueFalse]
    if (done || (SDL_GetAudioDeviceStatus(device) != SDL_AUDIO_PLAYING)) {
        ^
test/loopwavequeue.c:137:0: information: Skipping configuration 'HAVE_SIGNAL_H;SIGHUP' since the value of 'SIGHUP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (void)signal(SIGHUP, poked);
^
test/loopwavequeue.c:141:0: information: Skipping configuration 'HAVE_SIGNAL_H;SIGQUIT' since the value of 'SIGQUIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (void)signal(SIGQUIT, poked);
^
test/testatomic.c:25:24: style: The scope of the variable 't' can be reduced. [variableScope]
    static const char *t = "TRUE";
                       ^
test/testatomic.c:106:31: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    CountTo_GreaterThanZero = CountTo > 0,
                              ^
test/testatomic.c:117:23: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    unsigned long N = NInter;
                      ^
test/testatomic.c:176:26: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_AtomicSet(&good, CountTo);
                         ^
test/testatomic.c:178:21: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(v == CountTo);
                    ^
test/testatomic.c:185:21: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(v == CountTo); /* ensure no swap */
                    ^
test/testatomic.c:187:30: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    b = SDL_AtomicCAS(&good, CountTo, 44);
                             ^
test/testatomic.c:222:26: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_AtomicSet(&good, CountTo);
                         ^
test/testatomic.c:224:21: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(v == CountTo);
                    ^
test/testatomic.c:226:11: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    bad = CountTo;
          ^
test/testatomic.c:227:23: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(bad == CountTo);
                      ^
test/testatomic.c:229:61: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_Log("Counting down from %d, Expect %d remaining\n", CountTo, Expect);
                                                            ^
test/testatomic.c:234:21: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(v == Expect);
                    ^
test/testatomic.c:235:23: portability: Shifting signed 32-bit value by 31 bits is implementation-defined behaviour [shiftTooManyBitsSigned]
    SDL_assert(bad != Expect);
                      ^
test/testatomic.c:106:31: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    CountTo_GreaterThanZero = CountTo > 0,
                              ^
test/testatomic.c:117:23: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    unsigned long N = NInter;
                      ^
test/testatomic.c:176:26: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_AtomicSet(&good, CountTo);
                         ^
test/testatomic.c:178:21: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(v == CountTo);
                    ^
test/testatomic.c:185:21: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(v == CountTo); /* ensure no swap */
                    ^
test/testatomic.c:187:30: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    b = SDL_AtomicCAS(&good, CountTo, 44);
                             ^
test/testatomic.c:222:26: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_AtomicSet(&good, CountTo);
                         ^
test/testatomic.c:224:21: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(v == CountTo);
                    ^
test/testatomic.c:226:11: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    bad = CountTo;
          ^
test/testatomic.c:227:23: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(bad == CountTo);
                      ^
test/testatomic.c:229:61: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_Log("Counting down from %d, Expect %d remaining\n", CountTo, Expect);
                                                            ^
test/testatomic.c:234:21: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(v == Expect);
                    ^
test/testatomic.c:235:23: error: Signed integer overflow for expression '1<<((sizeof(int)*8)-1)'. [integerOverflow]
    SDL_assert(bad != Expect);
                      ^
test/testatomic.c:499:21: style: Variable 'event.user.code' is assigned a value that is never used. [unreadVariable]
    event.user.code = 0;
                    ^
test/testaudiohotplug.c:205:0: information: Skipping configuration 'HAVE_SIGNAL_H;SIGHUP' since the value of 'SIGHUP' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (void)signal(SIGHUP, poked);
^
test/testaudiohotplug.c:209:0: information: Skipping configuration 'HAVE_SIGNAL_H;SIGQUIT' since the value of 'SIGQUIT' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    (void)signal(SIGQUIT, poked);
^
test/testaudioinfo.c:53:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testautomation_audio.c:185:30: style: Variable 'desired.freq' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                desired.freq = 48000;
                             ^
test/testautomation_audio.c:176:30: note: $symbol is assigned
                desired.freq = 22050;
                             ^
test/testautomation_audio.c:185:30: note: $symbol is overwritten
                desired.freq = 48000;
                             ^
test/testautomation_audio.c:186:32: style: Variable 'desired.format' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                desired.format = AUDIO_F32SYS;
                               ^
test/testautomation_audio.c:177:32: note: $symbol is assigned
                desired.format = AUDIO_S16SYS;
                               ^
test/testautomation_audio.c:186:32: note: $symbol is overwritten
                desired.format = AUDIO_F32SYS;
                               ^
test/testautomation_audio.c:187:34: style: Variable 'desired.channels' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                desired.channels = 2;
                                 ^
test/testautomation_audio.c:178:34: note: $symbol is assigned
                desired.channels = 2;
                                 ^
test/testautomation_audio.c:187:34: note: $symbol is overwritten
                desired.channels = 2;
                                 ^
test/testautomation_audio.c:188:33: style: Variable 'desired.samples' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                desired.samples = 2048;
                                ^
test/testautomation_audio.c:179:33: note: $symbol is assigned
                desired.samples = 4096;
                                ^
test/testautomation_audio.c:188:33: note: $symbol is overwritten
                desired.samples = 2048;
                                ^
test/testautomation_audio.c:189:34: style: Variable 'desired.callback' is reassigned a value before the old one has been used. 'break;' missing? [redundantAssignInSwitch]
                desired.callback = audio_testCallback;
                                 ^
test/testautomation_audio.c:180:34: note: $symbol is assigned
                desired.callback = audio_testCallback;
                                 ^
test/testautomation_audio.c:189:34: note: $symbol is overwritten
                desired.callback = audio_testCallback;
                                 ^
test/testautomation_audio.c:145:17: style: The scope of the variable 'audioDriver' can be reduced. [variableScope]
    const char *audioDriver;
                ^
test/testautomation_audio.c:238:17: style: The scope of the variable 'audioDriver' can be reduced. [variableScope]
    const char *audioDriver;
                ^
test/testautomation_audio.c:362:12: style: The scope of the variable 'n' can be reduced. [variableScope]
    int i, n, nn;
           ^
test/testautomation_audio.c:420:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, j, no, nc;
        ^
test/testautomation_audio.c:421:17: style: The scope of the variable 'name' can be reduced. [variableScope]
    const char *name;
                ^
test/testautomation_audio.c:465:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, n;
        ^
test/testautomation_audio.c:466:17: style: The scope of the variable 'name' can be reduced. [variableScope]
    const char *name;
                ^
test/testautomation_audio.c:591:17: style: The scope of the variable 'error' can be reduced. [variableScope]
    const char *error;
                ^
test/testautomation_audio.c:592:22: style: The scope of the variable 'stream' can be reduced. [variableScope]
    SDL_AudioStream *stream;
                     ^
test/testautomation_audio.c:692:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testautomation_audio.c:694:17: style: The scope of the variable 'device' can be reduced. [variableScope]
    const char *device;
                ^
test/testautomation_audio.c:752:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testautomation_audio.c:754:17: style: The scope of the variable 'device' can be reduced. [variableScope]
    const char *device;
                ^
test/testautomation_audio.c:599:18: style: Variable 'spec1.format' is assigned a value that is never used. [unreadVariable]
    spec1.format = AUDIO_S8;
                 ^
test/testautomation_audio.c:600:20: style: Variable 'spec1.channels' is assigned a value that is never used. [unreadVariable]
    spec1.channels = 1;
                   ^
test/testautomation_audio.c:601:16: style: Variable 'spec1.freq' is assigned a value that is never used. [unreadVariable]
    spec1.freq = 22050;
               ^
test/testautomation_audio.c:602:18: style: Variable 'spec2.format' is assigned a value that is never used. [unreadVariable]
    spec2.format = AUDIO_S16LSB;
                 ^
test/testautomation_audio.c:603:20: style: Variable 'spec2.channels' is assigned a value that is never used. [unreadVariable]
    spec2.channels = 2;
                   ^
test/testautomation_audio.c:604:16: style: Variable 'spec2.freq' is assigned a value that is never used. [unreadVariable]
    spec2.freq = 44100;
               ^
test/testautomation_audio.c:939:16: style: Variable 'result' is assigned a value that is never used. [unreadVariable]
    int result = -1;
               ^
test/testautomation_guid.c:121:29: style: Array index 'written_size' is used before limits check. [arrayIndexThenCheck]
            while ((guid_str[written_size] & 0xff) != fill_char && written_size < 256) {
                            ^
test/testautomation_hints.c:67:17: style: The scope of the variable 'result1' can be reduced. [variableScope]
    const char *result1;
                ^
test/testautomation_hints.c:68:17: style: The scope of the variable 'result2' can be reduced. [variableScope]
    const char *result2;
                ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:323:47: note: Address of variable taken here.
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                              ^
test/testautomation_intrinsics.c:323:47: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                              ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:333:47: note: Address of variable taken here.
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                              ^
test/testautomation_intrinsics.c:333:47: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                              ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:323:51: note: Address of variable taken here.
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:323:51: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:333:51: note: Address of variable taken here.
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:333:51: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
        if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:576:51: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:576:51: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:576:55: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:576:55: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:373:51: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:373:51: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:373:55: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:373:55: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:457:51: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:457:51: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:457:55: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:457:55: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:34:13: warning: The address of local variable 'a' might be accessed at non-zero index. [objectIndex]
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:485:51: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:485:51: note: Calling function 'allocate_random_int_arrays', 2nd argument '&a' value is lifetime=a
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                  ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:34:13: note: The address of local variable 'a' might be accessed at non-zero index.
        (*a)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:35:13: warning: The address of local variable 'b' might be accessed at non-zero index. [objectIndex]
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_intrinsics.c:485:55: note: Address of variable taken here.
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:485:55: note: Calling function 'allocate_random_int_arrays', 3rd argument '&b' value is lifetime=b
            if (allocate_random_int_arrays(&dest, &a, &b, &size) < 0) {
                                                      ^
test/testautomation_intrinsics.c:28:23: note: Assuming condition is Assuming condition is false
    if (!*dest || !*a || !*b) {
                      ^
test/testautomation_intrinsics.c:35:13: note: The address of local variable 'b' might be accessed at non-zero index.
        (*b)[i] = SDLTest_RandomSint32();
            ^
test/testautomation_keyboard.c:104:17: style: The scope of the variable 'expectedError' can be reduced. [variableScope]
    const char *expectedError = "Parameter 'scancode' is invalid";
                ^
test/testautomation_keyboard.c:574:17: style: The scope of the variable 'expectedError' can be reduced. [variableScope]
    const char *expectedError = "Parameter 'name' is invalid";
                ^
test/testautomation_math.c:1069:0: information: Skipping configuration 'M_E' since the value of 'M_E' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    SDLTest_AssertCheck(result >= EULER - EPSILON &&
^
test/testautomation_math.c:1070:0: information: Skipping configuration 'M_E' since the value of 'M_E' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                            result <= EULER + EPSILON,
^
test/testautomation_math.c:1072:0: information: Skipping configuration 'M_E' since the value of 'M_E' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                        1.0, EULER - EPSILON, EULER + EPSILON, result);
^
test/testautomation_math.c:1141:0: information: Skipping configuration 'M_E' since the value of 'M_E' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
    result = SDL_log(EULER);
^
test/testautomation_math.c:1144:0: information: Skipping configuration 'M_E' since the value of 'M_E' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
                        EULER, 1.0, result);
^
test/testautomation_mouse.c:423:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        window = NULL;
        ^
test/testautomation_mouse.c:525:17: style: Variable 'focusWindow' is reassigned a value before the old one has been used. [redundantAssignment]
    focusWindow = SDL_GetMouseFocus();
                ^
test/testautomation_mouse.c:504:17: note: focusWindow is assigned
    focusWindow = SDL_GetMouseFocus();
                ^
test/testautomation_mouse.c:525:17: note: focusWindow is overwritten
    focusWindow = SDL_GetMouseFocus();
                ^
test/testautomation_pixels.c:206:17: style: The scope of the variable 'error' can be reduced. [variableScope]
    const char *error;
                ^
test/testautomation_platform.c:77:34: style: Condition '(*((char*)&value)>>4)==0x1' is always false [knownConditionTrueFalse]
    if ((*((char *)&value) >> 4) == 0x1) {
                                 ^
test/testautomation_platform.c:56:20: note: Assignment 'value=0x1234', assigned value is 4660
    Uint16 value = 0x1234;
                   ^
test/testautomation_platform.c:77:34: note: Condition '(*((char*)&value)>>4)==0x1' is always false
    if ((*((char *)&value) >> 4) == 0x1) {
                                 ^
test/testautomation_platform.c:132:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len;
           ^
test/testautomation_platform.c:333:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len;
           ^
test/testautomation_rect.c:969:9: style: The scope of the variable 'newx' can be reduced. [variableScope]
    int newx, newy;
        ^
test/testautomation_rect.c:969:15: style: The scope of the variable 'newy' can be reduced. [variableScope]
    int newx, newy;
              ^
test/testautomation_rect.c:1131:9: style: The scope of the variable 'newx' can be reduced. [variableScope]
    int newx, newy;
        ^
test/testautomation_rect.c:1131:15: style: The scope of the variable 'newy' can be reduced. [variableScope]
    int newx, newy;
              ^
test/testautomation_render.c:1166:22: style:inconclusive: Function 'compare' argument 1 names different: declaration 'reference' definition 'referenceSurface'. [funcArgNamesDifferent]
compare(SDL_Surface *referenceSurface, int allowable_error)
                     ^
test/testautomation_render.c:38:34: note: Function 'compare' argument 1 names different: declaration 'reference' definition 'referenceSurface'.
static void compare(SDL_Surface *reference, int allowable_error);
                                 ^
test/testautomation_render.c:1166:22: note: Function 'compare' argument 1 names different: declaration 'reference' definition 'referenceSurface'.
compare(SDL_Surface *referenceSurface, int allowable_error)
                     ^
test/testautomation_rwops.c:423:12: style: The scope of the variable 'rv_file' can be reduced. [variableScope]
    size_t rv_file;
           ^
test/testautomation_rwops.c:424:12: style: The scope of the variable 'rv_mem' can be reduced. [variableScope]
    size_t rv_mem;
           ^
test/testautomation_rwops.c:427:16: style: The scope of the variable 'rwops_file' can be reduced. [variableScope]
    SDL_RWops *rwops_file;
               ^
test/testautomation_rwops.c:428:16: style: The scope of the variable 'rwops_mem' can be reduced. [variableScope]
    SDL_RWops *rwops_mem;
               ^
test/testautomation_rwops.c:430:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result;
        ^
test/testautomation_rwops.c:485:16: style: The scope of the variable 'rw' can be reduced. [variableScope]
    SDL_RWops *rw;
               ^
test/testautomation_rwops.c:488:12: style: The scope of the variable 'objectsWritten' can be reduced. [variableScope]
    size_t objectsWritten;
           ^
test/testautomation_rwops.c:501:9: style: The scope of the variable 'cresult' can be reduced. [variableScope]
    int cresult;
        ^
test/testautomation_sdltest.c:1092:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len;
           ^
test/testautomation_sdltest.c:1093:9: style: The scope of the variable 'nonAsciiCharacters' can be reduced. [variableScope]
    int nonAsciiCharacters;
        ^
test/testautomation_sdltest.c:1094:12: style: The scope of the variable 'i' can be reduced. [variableScope]
    size_t i;
           ^
test/testautomation_sdltest.c:1127:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len;
           ^
test/testautomation_sdltest.c:1128:9: style: The scope of the variable 'nonAsciiCharacters' can be reduced. [variableScope]
    int nonAsciiCharacters;
        ^
test/testautomation_sdltest.c:1129:12: style: The scope of the variable 'i' can be reduced. [variableScope]
    size_t i;
           ^
test/testautomation_sdltest.c:1179:12: style: The scope of the variable 'len' can be reduced. [variableScope]
    size_t len;
           ^
test/testautomation_sdltest.c:1180:9: style: The scope of the variable 'nonAsciiCharacters' can be reduced. [variableScope]
    int nonAsciiCharacters;
        ^
test/testautomation_sdltest.c:1181:12: style: The scope of the variable 'i' can be reduced. [variableScope]
    size_t i;
           ^
test/testautomation_stdlib.c:420:5: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    SIZED_TEST_CASE(short, short, "%hd")
    ^
test/testautomation_stdlib.c:420:5: note: result is assigned
    SIZED_TEST_CASE(short, short, "%hd")
    ^
test/testautomation_stdlib.c:420:5: note: result is overwritten
    SIZED_TEST_CASE(short, short, "%hd")
    ^
test/testautomation_stdlib.c:421:5: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    SIZED_TEST_CASE(long, long, "%ld")
    ^
test/testautomation_stdlib.c:421:5: note: result is assigned
    SIZED_TEST_CASE(long, long, "%ld")
    ^
test/testautomation_stdlib.c:421:5: note: result is overwritten
    SIZED_TEST_CASE(long, long, "%ld")
    ^
test/testautomation_stdlib.c:422:5: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    SIZED_TEST_CASE(long long, long_long, "%lld")
    ^
test/testautomation_stdlib.c:422:5: note: result is assigned
    SIZED_TEST_CASE(long long, long_long, "%lld")
    ^
test/testautomation_stdlib.c:422:5: note: result is overwritten
    SIZED_TEST_CASE(long long, long_long, "%lld")
    ^
test/testautomation_stdlib.c:428:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = SDL_sscanf(text, "%zu", &size_output);
           ^
test/testautomation_stdlib.c:427:12: note: result is assigned
    result = SDL_snprintf(text, sizeof(text), "%zu", expected_size_output);
           ^
test/testautomation_stdlib.c:428:12: note: result is overwritten
    result = SDL_sscanf(text, "%zu", &size_output);
           ^
test/testautomation_stdlib.c:454:11: style: The scope of the variable 'ptr' can be reduced. [variableScope]
    void *ptr;
          ^
test/testautomation_surface.c:37:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result;
        ^
test/testautomation_surface.c:334:19: style: Variable 'ret' is assigned a value that is never used. [unreadVariable]
    int i, j, ret = 0;
                  ^
test/testautomation_video.c:38:9: warning: Assignment of function parameter has no effect outside the function. Did you forget dereferencing it? [uselessAssignmentPtrArg]
        window = NULL;
        ^
test/testautomation_video.c:689:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = SDL_GetWindowFromID(0);
           ^
test/testautomation_video.c:685:12: note: result is assigned
    result = SDL_GetWindowFromID(randomId);
           ^
test/testautomation_video.c:689:12: note: result is overwritten
    result = SDL_GetWindowFromID(0);
           ^
test/testautomation_video.c:691:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = SDL_GetWindowFromID(UINT32_MAX);
           ^
test/testautomation_video.c:689:12: note: result is assigned
    result = SDL_GetWindowFromID(0);
           ^
test/testautomation_video.c:691:12: note: result is overwritten
    result = SDL_GetWindowFromID(UINT32_MAX);
           ^
test/testautomation_video.c:698:12: style: Variable 'result' is reassigned a value before the old one has been used. [redundantAssignment]
    result = SDL_GetWindowFromID(id);
           ^
test/testautomation_video.c:691:12: note: result is assigned
    result = SDL_GetWindowFromID(UINT32_MAX);
           ^
test/testautomation_video.c:698:12: note: result is overwritten
    result = SDL_GetWindowFromID(id);
           ^
test/testautomation_video.c:255:29: style: The scope of the variable 'modes' can be reduced. [variableScope]
    const SDL_DisplayMode **modes;
                            ^
test/testautomation_video.c:257:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testautomation_video.c:284:29: style: The scope of the variable 'modes' can be reduced. [variableScope]
    const SDL_DisplayMode **modes;
                            ^
test/testautomation_video.c:286:28: style: The scope of the variable 'closest' can be reduced. [variableScope]
    const SDL_DisplayMode *closest;
                           ^
test/testautomation_video.c:287:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_modes;
        ^
test/testautomation_video.c:331:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testautomation_video.c:332:9: style: The scope of the variable 'variation' can be reduced. [variableScope]
    int variation;
        ^
test/testautomation_video.c:371:28: style: The scope of the variable 'mode' can be reduced. [variableScope]
    const SDL_DisplayMode *mode;
                           ^
test/testautomation_video.c:390:17: style: The scope of the variable 'invalidWindowError' can be reduced. [variableScope]
    const char *invalidWindowError = "Invalid window";
                ^
test/testautomation_video.c:923:17: style: The scope of the variable 'invalidParameterError' can be reduced. [variableScope]
    const char *invalidParameterError = "Parameter";
                ^
test/testautomation_video.c:1630:17: style: The scope of the variable 'window' can be reduced. [variableScope]
    SDL_Window *window;
                ^
test/testautomation_video.c:1631:17: style: The scope of the variable 'title' can be reduced. [variableScope]
    const char *title = "video_setWindowCenteredOnDisplay Test Window";
                ^
test/testautomation_video.c:1632:9: style: The scope of the variable 'x' can be reduced. [variableScope]
    int x, y, w, h;
        ^
test/testautomation_video.c:1632:12: style: The scope of the variable 'y' can be reduced. [variableScope]
    int x, y, w, h;
           ^
test/testautomation_video.c:1632:15: style: The scope of the variable 'w' can be reduced. [variableScope]
    int x, y, w, h;
              ^
test/testautomation_video.c:1632:18: style: The scope of the variable 'h' can be reduced. [variableScope]
    int x, y, w, h;
                 ^
test/testautomation_video.c:1633:9: style: The scope of the variable 'xVariation' can be reduced. [variableScope]
    int xVariation, yVariation;
        ^
test/testautomation_video.c:1633:21: style: The scope of the variable 'yVariation' can be reduced. [variableScope]
    int xVariation, yVariation;
                    ^
test/testautomation_video.c:1635:9: style: The scope of the variable 'result' can be reduced. [variableScope]
    int result;
        ^
test/testbounds.c:20:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testdisplayinfo.c:36:29: style: The scope of the variable 'modes' can be reduced. [variableScope]
    const SDL_DisplayMode **modes;
                            ^
test/testdisplayinfo.c:37:28: style: The scope of the variable 'mode' can be reduced. [variableScope]
    const SDL_DisplayMode *mode;
                           ^
test/testdraw.c:44:11: style: The scope of the variable 'x' can be reduced. [variableScope]
    float x, y;
          ^
test/testdraw.c:44:14: style: The scope of the variable 'y' can be reduced. [variableScope]
    float x, y;
             ^
test/testdrawchessboard.c:33:18: style: The scope of the variable 'column' can be reduced. [variableScope]
    int row = 0, column = 0, x = 0;
                 ^
test/testdrawchessboard.c:33:30: style: The scope of the variable 'x' can be reduced. [variableScope]
    int row = 0, column = 0, x = 0;
                             ^
test/testdrawchessboard.c:33:25: style: Variable 'column' is assigned a value that is never used. [unreadVariable]
    int row = 0, column = 0, x = 0;
                        ^
test/testdrawchessboard.c:33:32: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
    int row = 0, column = 0, x = 0;
                               ^
test/testevdev.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 33 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/SDL_internal.h:200:0: information: Skipping configuration 'DECLSPEC' since the value of 'DECLSPEC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
extern DECLSPEC int SDLCALL SDL_SemWaitTimeoutNS(SDL_sem *sem, Sint64 timeoutNS);
^
src/SDL_internal.h:201:0: information: Skipping configuration 'DECLSPEC' since the value of 'DECLSPEC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
extern DECLSPEC int SDLCALL SDL_CondWaitTimeoutNS(SDL_cond *cond, SDL_mutex *mutex, Sint64 timeoutNS);
^
src/SDL_internal.h:202:0: information: Skipping configuration 'DECLSPEC' since the value of 'DECLSPEC' is unknown. Use -D if you want to check it. You can use -U to skip it explicitly. [ConfigurationNotChecked]
extern DECLSPEC int SDLCALL SDL_WaitEventTimeoutNS(SDL_Event *event, Sint64 timeoutNS);
^
test/testgamepad.c:409:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testgamepad.c:477:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testgles.c:33:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testgles2.c:90:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testgles2.c:220:10: style: The scope of the variable 'buffer' can be reduced. [variableScope]
    char buffer[1024];
         ^
test/testgles2.c:250:10: style: The scope of the variable 'buffer' can be reduced. [variableScope]
    char buffer[1024];
         ^
test/testgles2.c:51:17: style: struct member 'thread_data::thread' is never used. [unusedStructMember]
    SDL_Thread *thread;
                ^
test/testgles2.c:52:9: style: struct member 'thread_data::done' is never used. [unusedStructMember]
    int done;
        ^
test/testgles2.c:53:9: style: struct member 'thread_data::index' is never used. [unusedStructMember]
    int index;
        ^
test/testgles2_sdf.c:543:13: style: Condition 'g_use_SDF' is always true [knownConditionTrueFalse]
        if (g_use_SDF) {
            ^
test/testgles2_sdf.c:540:21: note: Assignment 'g_use_SDF=1', assigned value is 1
        g_use_SDF = 1;
                    ^
test/testgles2_sdf.c:543:13: note: Condition 'g_use_SDF' is always true
        if (g_use_SDF) {
            ^
test/testgles2_sdf.c:92:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testgles2_sdf.c:132:10: style: The scope of the variable 'buffer' can be reduced. [variableScope]
    char buffer[1024];
         ^
test/testiconv.c:55:11: style: The scope of the variable 'ucs4' can be reduced. [variableScope]
    char *ucs4;
          ^
test/testime.c:147:13: style: The scope of the variable 'i' can be reduced. [variableScope]
        int i, codepointHexSize;
            ^
test/testintersections.c:47:11: style: The scope of the variable 'x' can be reduced. [variableScope]
    float x, y;
          ^
test/testintersections.c:47:14: style: The scope of the variable 'y' can be reduced. [variableScope]
    float x, y;
             ^
test/testlock.c:57:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testmouse.c:128:31: style: The if condition is the same as the previous if condition [duplicateCondition]
            if (event.wheel.x != 0.0f) {
                              ^
test/testmouse.c:123:31: note: First condition
            if (event.wheel.x != 0.0f) {
                              ^
test/testmouse.c:128:31: note: Second condition
            if (event.wheel.x != 0.0f) {
                              ^
test/testnative.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 38 configurations. Use --force to check all configurations. [toomanyconfigs]

^
test/testnative.c:66:16: style: The scope of the variable 'position' can be reduced. [variableScope]
    SDL_FRect *position, *velocity;
               ^
test/testnative.c:66:27: style: The scope of the variable 'velocity' can be reduced. [variableScope]
    SDL_FRect *position, *velocity;
                          ^
test/testnativew32.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
test/testnativex11.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 36 configurations. Use --force to check all configurations. [toomanyconfigs]

^
test/testoverlay.c:461:26: warning: Either the condition 'mooseRGBSurface==NULL' is redundant or there is possible null pointer dereference: mooseRGBSurface. [nullPointerRedundantCheck]
            Uint8 *rgb = mooseRGBSurface->pixels;
                         ^
test/testoverlay.c:455:29: note: Assuming that condition 'mooseRGBSurface==NULL' is not redundant
        if (mooseRGBSurface == NULL) {
                            ^
test/testoverlay.c:461:26: note: Null pointer dereference
            Uint8 *rgb = mooseRGBSurface->pixels;
                         ^
test/testplatform.c:378:35: error: The address of local variable 'result' is accessed at non-zero index. [objectIndex]
                        t->arg, rl[1], rl[0], el[1], el[0]);
                                  ^
test/testplatform.c:373:44: note: Address of variable taken here.
        unsigned int *rl = (unsigned int *)&result;
                                           ^
test/testplatform.c:378:35: note: The address of local variable 'result' is accessed at non-zero index.
                        t->arg, rl[1], rl[0], el[1], el[0]);
                                  ^
test/testsensor.c:62:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, num_sensors, num_opened;
        ^
test/testshape.c:48:12: style: The scope of the variable 'bitmap_scanline' can be reduced. [variableScope]
    Uint8 *bitmap_scanline;
           ^
test/testshape.c:42:11: style: Variable 'x' is assigned a value that is never used. [unreadVariable]
    int x = 0;
          ^
test/testshape.c:44:38: style: Variable 'alpha' is assigned a value that is never used. [unreadVariable]
    Uint8 r = 0, g = 0, b = 0, alpha = 0;
                                     ^
test/testshape.c:46:24: style: Variable 'pixel_value' is assigned a value that is never used. [unreadVariable]
    Uint32 pixel_value = 0, mask_value = 0;
                       ^
test/testsprite.c:94:27: style: The scope of the variable 'velocity' can be reduced. [variableScope]
    SDL_FRect *position, *velocity;
                          ^
test/testspriteminimal.c:54:16: style: The scope of the variable 'position' can be reduced. [variableScope]
    SDL_FRect *position, *velocity;
               ^
test/testspriteminimal.c:54:27: style: The scope of the variable 'velocity' can be reduced. [variableScope]
    SDL_FRect *position, *velocity;
                          ^
test/teststreaming.c:83:13: style: The scope of the variable 'dst' can be reduced. [variableScope]
    Uint32 *dst;
            ^
test/testthread.c:162:5: style:inconclusive: Statements following return, break, continue, goto or throw will never be executed. [unreachableCode]
    SDL_Quit(); /* Never reached */
    ^
test/testurl.c:27:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i;
        ^
test/testvulkan.c:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 28 configurations. Use --force to check all configurations. [toomanyconfigs]

^
test/testvulkan.c:626:14: style: The scope of the variable 'i' can be reduced. [variableScope]
    uint32_t i;
             ^
test/testwm.c:63:9: style: The scope of the variable 'i' can be reduced. [variableScope]
    int i, j;
        ^
test/testwm.c:63:12: style: The scope of the variable 'j' can be reduced. [variableScope]
    int i, j;
           ^
test/testwm.c:64:9: style: The scope of the variable 'column_chars' can be reduced. [variableScope]
    int column_chars = 0;
        ^
test/testwm.c:65:9: style: The scope of the variable 'text_length' can be reduced. [variableScope]
    int text_length;
        ^
test/testyuv.c:121:25: warning: Either the condition 'pattern==NULL' is redundant or there is possible null pointer dereference: pattern. [nullPointerRedundantCheck]
    const int yuv_len = MAX_YUV_SURFACE_SIZE(pattern->w, pattern->h, extra_pitch);
                        ^
test/testyuv.c:127:17: note: Assuming that condition 'pattern==NULL' is not redundant
    if (pattern == NULL || yuv1 == NULL || yuv2 == NULL) {
                ^
test/testyuv.c:121:25: note: Null pointer dereference
    const int yuv_len = MAX_YUV_SURFACE_SIZE(pattern->w, pattern->h, extra_pitch);
                        ^
test/testyuv.c:249:17: style: The scope of the variable 'titles' can be reduced. [variableScope]
    const char *titles[3] = { "ORIGINAL", "SOFTWARE", "HARDWARE" };
                ^
test/testyuv.c:250:10: style: The scope of the variable 'title' can be reduced. [variableScope]
    char title[128];
         ^
test/testyuv.c:255:9: style: The scope of the variable 'current' can be reduced. [variableScope]
    int current = 0;
        ^
test/testyuv_cvt.c:184:15: style: Variable 'U' is assigned a value that is never used. [unreadVariable]
            U += UV_advance;
              ^
test/testyuv_cvt.c:187:15: style: Variable 'V' is assigned a value that is never used. [unreadVariable]
            V += UV_advance;
              ^
src/thread/ngage/SDL_sysmutex.cpp:29:1: error: The one definition rule is violated, different classes/structs have the same name 'SDL_mutex' [ctuOneDefinitionRuleViolation]
struct SDL_mutex
^
src/thread/stdcpp/SDL_sysmutex_c.h:25:1: note: The one definition rule is violated, different classes/structs have the same name 'SDL_mutex'
struct SDL_mutex
^
src/thread/ngage/SDL_sysmutex.cpp:29:1: note: The one definition rule is violated, different classes/structs have the same name 'SDL_mutex'
struct SDL_mutex
^
src/video/winrt/SDL_winrtvideo_cpp.h:42:1: error: The one definition rule is violated, different classes/structs have the same name 'SDL_VideoData' [ctuOneDefinitionRuleViolation]
struct SDL_VideoData
^
src/video/ngage/SDL_ngagevideo.h:37:1: note: The one definition rule is violated, different classes/structs have the same name 'SDL_VideoData'
struct SDL_VideoData
^
src/video/winrt/SDL_winrtvideo_cpp.h:42:1: note: The one definition rule is violated, different classes/structs have the same name 'SDL_VideoData'
struct SDL_VideoData
^
src/core/android/SDL_android.c:842:0: style: The function 'Android_ActivityMutex_Lock' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:847:0: style: The function 'Android_ActivityMutex_Unlock' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1801:0: style: The function 'Android_JNI_AudioSetThreadPriority' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1954:0: style: The function 'Android_JNI_FileClose' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1904:0: style: The function 'Android_JNI_FileOpen' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1927:0: style: The function 'Android_JNI_FileRead' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1946:0: style: The function 'Android_JNI_FileSeek' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1938:0: style: The function 'Android_JNI_FileSize' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1933:0: style: The function 'Android_JNI_FileWrite' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:447:0: style: The function 'Android_JNI_SetupThread' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:1452:0: style: The function 'Android_JNI_ShouldMinimizeOnFocusLoss' is never used. [unusedFunction]

^
src/video/SDL_blit_N.c:2552:0: style: The function 'Blit2to2Key' is never used. [unusedFunction]

^
src/video/SDL_blit_N.c:578:0: style: The function 'Blit32to32KeyAltivec' is never used. [unusedFunction]

^
src/video/SDL_blit_0.c:444:0: style: The function 'Blit4bto4' is never used. [unusedFunction]

^
src/video/SDL_blit_0.c:476:0: style: The function 'Blit4bto4Key' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1072:0: style: The function 'Blit555to555SurfaceAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1034:0: style: The function 'Blit565to565SurfaceAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1155:0: style: The function 'BlitARGBto555PixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1110:0: style: The function 'BlitARGBto565PixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:447:0: style: The function 'BlitARGBto565PixelAlphaARMNEON' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:417:0: style: The function 'BlitARGBto565PixelAlphaARMSIMD' is never used. [unusedFunction]

^
src/video/SDL_blit_N.c:2487:0: style: The function 'BlitNto1Key' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:76:0: style: The function 'BlitNto1PixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:30:0: style: The function 'BlitNto1SurfaceAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:121:0: style: The function 'BlitNto1SurfaceAlphaKey' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1279:0: style: The function 'BlitNtoNPixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1201:0: style: The function 'BlitNtoNSurfaceAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:1239:0: style: The function 'BlitNtoNSurfaceAlphaKey' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:592:0: style: The function 'BlitRGBtoBGRPixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:540:0: style: The function 'BlitRGBtoRGBPixelAlpha' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:461:0: style: The function 'BlitRGBtoRGBPixelAlphaARMNEON' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:431:0: style: The function 'BlitRGBtoRGBPixelAlphaARMSIMD' is never used. [unusedFunction]

^
src/video/SDL_blit_A.c:499:0: style: The function 'BlitRGBtoRGBSurfaceAlpha' is never used. [unusedFunction]

^
src/render/direct3d12/SDL_shaders_d3d12.c:6918:0: style: The function 'D3D12_GetPixelShader' is never used. [unusedFunction]

^
src/render/direct3d12/SDL_shaders_d3d12.c:6929:0: style: The function 'D3D12_GetRootSignatureData' is never used. [unusedFunction]

^
src/render/direct3d12/SDL_shaders_d3d12.c:6924:0: style: The function 'D3D12_GetRootSignatureType' is never used. [unusedFunction]

^
src/render/direct3d12/SDL_shaders_d3d12.c:6912:0: style: The function 'D3D12_GetVertexShader' is never used. [unusedFunction]

^
cmake/test/main_lib.c:9:0: style: The function 'DllMain' is never used. [unusedFunction]

^
src/core/gdk/SDL_gdk.cpp:64:0: style: The function 'GDK_DispatchTaskQueue' is never used. [unusedFunction]

^
src/video/haiku/SDL_bopengl.cc:176:0: style: The function 'HAIKU_GL_RebootContexts' is never used. [unusedFunction]

^
src/video/haiku/SDL_bvideo.cc:296:0: style: The function 'HAIKU_OpenURL' is never used. [unusedFunction]

^
src/joystick/hidapi/SDL_hidapijoystick.c:1260:0: style: The function 'HIDAPI_GetGamepadTypeFromGUID' is never used. [unusedFunction]

^
src/joystick/hidapi/SDL_hidapijoystick.c:1242:0: style: The function 'HIDAPI_GetJoystickTypeFromGUID' is never used. [unusedFunction]

^
src/joystick/hidapi/SDL_hidapijoystick.c:1160:0: style: The function 'HIDAPI_IsDeviceTypePresent' is never used. [unusedFunction]

^
src/hidapi/testgui/mac_support.cpp:33:0: style: The function 'HandleWildCardMessage' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:512:0: style: The function 'JNI_OnLoad' is never used. [unusedFunction]

^
src/video/kmsdrm/SDL_kmsdrmmouse.c:406:0: style: The function 'KMSDRM_QuitMouse' is never used. [unusedFunction]

^
src/file/n3ds/SDL_rwopsromfs.c:39:0: style: The function 'N3DS_FileOpen' is never used. [unusedFunction]

^
src/video/n3ds/SDL_n3dsswkb.c:38:0: style: The function 'N3DS_SwkbPoll' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1274:0: style: The function 'PLATFORM_hid_close' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1085:0: style: The function 'PLATFORM_hid_enumerate' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1344:0: style: The function 'PLATFORM_hid_error' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1349:0: style: The function 'PLATFORM_hid_exit' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1116:0: style: The function 'PLATFORM_hid_free_enumeration' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1259:0: style: The function 'PLATFORM_hid_get_feature_report' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1339:0: style: The function 'PLATFORM_hid_get_indexed_string' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1297:0: style: The function 'PLATFORM_hid_get_manufacturer_string' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1311:0: style: The function 'PLATFORM_hid_get_product_string' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1325:0: style: The function 'PLATFORM_hid_get_serial_number_string' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1050:0: style: The function 'PLATFORM_hid_init' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1126:0: style: The function 'PLATFORM_hid_open' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1132:0: style: The function 'PLATFORM_hid_open_path' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1231:0: style: The function 'PLATFORM_hid_read' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1243:0: style: The function 'PLATFORM_hid_send_feature_report' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1238:0: style: The function 'PLATFORM_hid_set_nonblocking' is never used. [unusedFunction]

^
src/hidapi/android/hid.cpp:1165:0: style: The function 'PLATFORM_hid_write' is never used. [unusedFunction]

^
src/joystick/windows/SDL_rawinputjoystick.c:1890:0: style: The function 'RAWINPUT_RegisterNotifications' is never used. [unusedFunction]

^
src/joystick/windows/SDL_rawinputjoystick.c:1909:0: style: The function 'RAWINPUT_UnregisterNotifications' is never used. [unusedFunction]

^
src/joystick/windows/SDL_rawinputjoystick.c:1928:0: style: The function 'RAWINPUT_WindowProc' is never used. [unusedFunction]

^
src/video/raspberry/SDL_rpimouse.c:308:0: style: The function 'RPI_QuitMouse' is never used. [unusedFunction]

^
src/test/SDL_test_font.c:3470:0: style: The function 'SDLTest_CleanupTextDrawing' is never used. [unusedFunction]

^
src/test/SDL_test_crc32.c:153:0: style: The function 'SDLTest_Crc32Done' is never used. [unusedFunction]

^
src/test/SDL_test_font.c:3461:0: style: The function 'SDLTest_TextWindowDestroy' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2351:0: style: The function 'SDL_AndroidBackButton' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2302:0: style: The function 'SDL_AndroidGetActivity' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2456:0: style: The function 'SDL_AndroidGetExternalStoragePath' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2411:0: style: The function 'SDL_AndroidGetExternalStorageState' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2297:0: style: The function 'SDL_AndroidGetJNIEnv' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2501:0: style: The function 'SDL_AndroidRequestPermission' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2150:0: style: The function 'SDL_AndroidSendMessage' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2506:0: style: The function 'SDL_AndroidShowToast' is never used. [unusedFunction]

^
src/video/SDL_shape.c:209:0: style: The function 'SDL_CalculateShapeTree' is never used. [unusedFunction]

^
src/core/linux/SDL_dbus.c:356:0: style: The function 'SDL_DBus_QueryProperty' is never used. [unusedFunction]

^
src/core/linux/SDL_dbus.c:408:0: style: The function 'SDL_DBus_ScreensaverInhibit' is never used. [unusedFunction]

^
src/core/linux/SDL_dbus.c:361:0: style: The function 'SDL_DBus_ScreensaverTickle' is never used. [unusedFunction]

^
src/haptic/windows/SDL_dinputhaptic.c:1172:0: style: The function 'SDL_DINPUT_HapticMaybeRemoveDevice' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1198:0: style: The function 'SDL_DINPUT_JoystickClose' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1168:0: style: The function 'SDL_DINPUT_JoystickDetect' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1189:0: style: The function 'SDL_DINPUT_JoystickGetCapabilities' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1163:0: style: The function 'SDL_DINPUT_JoystickInit' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1178:0: style: The function 'SDL_DINPUT_JoystickOpen' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1202:0: style: The function 'SDL_DINPUT_JoystickQuit' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1183:0: style: The function 'SDL_DINPUT_JoystickRumble' is never used. [unusedFunction]

^
src/joystick/windows/SDL_dinputjoystick.c:1194:0: style: The function 'SDL_DINPUT_JoystickUpdate' is never used. [unusedFunction]

^
src/video/windows/SDL_windowsvideo.c:605:0: style: The function 'SDL_DXGIGetOutputInfo_REAL' is never used. [unusedFunction]

^
src/dynapi/SDL_dynapi.c:360:0: style: The function 'SDL_DYNAPI_entry' is never used. [unusedFunction]

^
src/video/windows/SDL_windowsvideo.c:531:0: style: The function 'SDL_Direct3D9GetAdapterIndex_REAL' is never used. [unusedFunction]

^
src/core/linux/SDL_evdev_kbd.c:104:0: style: The function 'SDL_EVDEV_dump_accents' is never used. [unusedFunction]

^
src/core/linux/SDL_evdev_kbd.c:126:0: style: The function 'SDL_EVDEV_dump_keymap' is never used. [unusedFunction]

^
src/core/gdk/SDL_gdk.cpp:211:0: style: The function 'SDL_GDKSuspendComplete' is never used. [unusedFunction]

^
src/SDL_assert.c:96:0: style: The function 'SDL_GenerateAssertionReport' is never used. [unusedFunction]

^
src/SDL_dataqueue.c:319:0: style: The function 'SDL_GetDataQueueMutex' is never used. [unusedFunction]

^
src/power/winrt/SDL_syspower.cpp:27:0: style: The function 'SDL_GetPowerInfo_WinRT' is never used. [unusedFunction]

^
src/render/direct3d11/SDL_render_d3d11.c:2406:0: style: The function 'SDL_GetRenderD3D11Device' is never used. [unusedFunction]

^
src/render/direct3d/SDL_render_d3d.c:1734:0: style: The function 'SDL_GetRenderD3D9Device' is never used. [unusedFunction]

^
src/events/SDL_keyboard.c:1012:0: style: The function 'SDL_HardwareKeyboardKeyPressed' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2333:0: style: The function 'SDL_IsAndroidTV' is never used. [unusedFunction]

^
src/core/android/SDL_android.c:2327:0: style: The function 'SDL_IsAndroidTablet' is never used. [unusedFunction]

^
src/joystick/SDL_gamepad.c:2022:0: style: The function 'SDL_IsGamepadNameAndGUID' is never used. [unusedFunction]

^
src/joystick/SDL_joystick.c:2276:0: style: The function 'SDL_IsJoystickNintendoSwitchJoyCon' is never used. [unusedFunction]

^
src/joystick/SDL_joystick.c:2264:0: style: The function 'SDL_IsJoystickNintendoSwitchPro' is never used. [unusedFunction]

^
src/joystick/SDL_joystick.c:2242:0: style: The function 'SDL_IsJoystickPS4' is never used. [unusedFunction]

^
src/joystick/SDL_joystick.c:2248:0: style: The function 'SDL_IsJoystickPS5' is never used. [unusedFunction]

^
src/joystick/virtual/SDL_virtualjoystick.c:108:0: style: The function 'SDL_JoystickAttachVirtualInner' is never used. [unusedFunction]

^
src/joystick/virtual/SDL_virtualjoystick.c:257:0: style: The function 'SDL_JoystickDetachVirtualInner' is never used. [unusedFunction]

^
src/core/linux/SDL_threadprio.c:252:0: style: The function 'SDL_LinuxSetThreadPriority' is never used. [unusedFunction]

^
src/core/linux/SDL_threadprio.c:284:0: style: The function 'SDL_LinuxSetThreadPriorityAndPolicy' is never used. [unusedFunction]

^
src/SDL_list.c:77:0: style: The function 'SDL_ListClear' is never used. [unusedFunction]

^
src/SDL_list.c:41:0: style: The function 'SDL_ListPop' is never used. [unusedFunction]

^
src/dynapi/SDL_dynapi.c:219:0: style: The function 'SDL_LogVerbose' is never used. [unusedFunction]

^
src/SDL_dataqueue.c:234:0: style: The function 'SDL_PeekIntoDataQueue' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:417:0: style: The function 'SDL_RegisterApp' is never used. [unusedFunction]

^
src/render/direct3d12/SDL_render_d3d12.c:3049:0: style: The function 'SDL_RenderGetD3D12Device' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:607:0: style: The function 'SDL_ResampleCVT_SRC_c1' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:608:0: style: The function 'SDL_ResampleCVT_SRC_c2' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:609:0: style: The function 'SDL_ResampleCVT_SRC_c4' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:610:0: style: The function 'SDL_ResampleCVT_SRC_c6' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:611:0: style: The function 'SDL_ResampleCVT_SRC_c8' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:593:0: style: The function 'SDL_ResampleCVT_c1' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:594:0: style: The function 'SDL_ResampleCVT_c2' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:595:0: style: The function 'SDL_ResampleCVT_c4' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:596:0: style: The function 'SDL_ResampleCVT_c6' is never used. [unusedFunction]

^
src/audio/SDL_audiocvt.c:597:0: style: The function 'SDL_ResampleCVT_c8' is never used. [unusedFunction]

^
src/render/SDL_yuv_sw.c:109:0: style: The function 'SDL_SW_QueryYUVTexturePixels' is never used. [unusedFunction]

^
src/render/SDL_yuv_sw.c:334:0: style: The function 'SDL_SW_UnlockYUVTexture' is never used. [unusedFunction]

^
src/events/SDL_mouse.c:774:0: style: The function 'SDL_SendMouseButtonClicks' is never used. [unusedFunction]

^
src/joystick/SDL_joystick.c:2006:0: style: The function 'SDL_SetJoystickGUIDVendor' is never used. [unusedFunction]

^
src/joystick/virtual/SDL_virtualjoystick.c:268:0: style: The function 'SDL_SetJoystickVirtualAxisInner' is never used. [unusedFunction]

^
src/joystick/virtual/SDL_virtualjoystick.c:290:0: style: The function 'SDL_SetJoystickVirtualButtonInner' is never used. [unusedFunction]

^
src/joystick/virtual/SDL_virtualjoystick.c:312:0: style: The function 'SDL_SetJoystickVirtualHatInner' is never used. [unusedFunction]

^
src/events/SDL_mouse.c:386:0: style: The function 'SDL_SetMouseSystemScale' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:429:0: style: The function 'SDL_SetWindowsMessageHook' is never used. [unusedFunction]

^
src/video/SDL_video.c:4886:0: style: The function 'SDL_ShouldAllowTopmost' is never used. [unusedFunction]

^
src/core/linux/SDL_udev.c:220:0: style: The function 'SDL_UDEV_GetProductInfo' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:425:0: style: The function 'SDL_UnregisterApp' is never used. [unusedFunction]

^
src/core/winrt/SDL_winrtapp_common.cpp:44:0: style: The function 'SDL_WinRTGetDeviceFamily' is never used. [unusedFunction]

^
src/haptic/windows/SDL_xinputhaptic.c:364:0: style: The function 'SDL_XINPUT_HapticMaybeRemoveDevice' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:596:0: style: The function 'SDL_XINPUT_JoystickClose' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:572:0: style: The function 'SDL_XINPUT_JoystickDetect' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:587:0: style: The function 'SDL_XINPUT_JoystickGetCapabilities' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:567:0: style: The function 'SDL_XINPUT_JoystickInit' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:576:0: style: The function 'SDL_XINPUT_JoystickOpen' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:600:0: style: The function 'SDL_XINPUT_JoystickQuit' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:581:0: style: The function 'SDL_XINPUT_JoystickRumble' is never used. [unusedFunction]

^
src/joystick/windows/SDL_xinputjoystick.c:592:0: style: The function 'SDL_XINPUT_JoystickUpdate' is never used. [unusedFunction]

^
src/video/vita/SDL_vitaframebuffer.c:66:0: style: The function 'VITA_CreateWindowFramebuffer' is never used. [unusedFunction]

^
src/video/vita/SDL_vitaframebuffer.c:102:0: style: The function 'VITA_DestroyWindowFramebuffer' is never used. [unusedFunction]

^
src/video/vita/SDL_vitamessagebox.c:33:0: style: The function 'VITA_ShowMessageBox' is never used. [unusedFunction]

^
src/video/vita/SDL_vitaframebuffer.c:96:0: style: The function 'VITA_UpdateWindowFramebuffer' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivanteopengles.c:37:0: style: The function 'VIVANTE_GLES_CreateContext' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivanteopengles.c:30:0: style: The function 'VIVANTE_GLES_LoadLibrary' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivanteopengles.c:39:0: style: The function 'VIVANTE_GLES_MakeCurrent' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivanteopengles.c:38:0: style: The function 'VIVANTE_GLES_SwapWindow' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivantevulkan.c:135:0: style: The function 'VIVANTE_Vulkan_CreateSurface' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivantevulkan.c:119:0: style: The function 'VIVANTE_Vulkan_GetInstanceExtensions' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivantevulkan.c:36:0: style: The function 'VIVANTE_Vulkan_LoadLibrary' is never used. [unusedFunction]

^
src/video/vivante/SDL_vivantevulkan.c:111:0: style: The function 'VIVANTE_Vulkan_UnloadLibrary' is never used. [unusedFunction]

^
src/audio/wasapi/SDL_wasapi.c:377:0: style: The function 'WASAPI_PrepDevice' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:210:0: style: The function 'WIN_IsWindows7OrGreater' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:219:0: style: The function 'WIN_IsWindows8OrGreater' is never used. [unusedFunction]

^
src/video/windows/SDL_windowsevents.c:651:0: style: The function 'WIN_KeyboardHookProc' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:318:0: style: The function 'WIN_RECTToRect' is never used. [unusedFunction]

^
src/core/windows/SDL_windows.c:326:0: style: The function 'WIN_RectToRECT' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:50:0: style: The function 'Wayland_GLES_CreateContext' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:191:0: style: The function 'Wayland_GLES_DeleteContext' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:198:0: style: The function 'Wayland_GLES_GetEGLSurface' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:95:0: style: The function 'Wayland_GLES_GetSwapInterval' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:37:0: style: The function 'Wayland_GLES_LoadLibrary' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:174:0: style: The function 'Wayland_GLES_MakeCurrent' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:73:0: style: The function 'Wayland_GLES_SetSwapInterval' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandopengles.c:105:0: style: The function 'Wayland_GLES_SwapWindow' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandvulkan.c:134:0: style: The function 'Wayland_Vulkan_CreateSurface' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandvulkan.c:118:0: style: The function 'Wayland_Vulkan_GetInstanceExtensions' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandvulkan.c:44:0: style: The function 'Wayland_Vulkan_LoadLibrary' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandvulkan.c:110:0: style: The function 'Wayland_Vulkan_UnloadLibrary' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandevents.c:2942:0: style: The function 'Wayland_input_unlock_pointer' is never used. [unusedFunction]

^
src/video/wayland/SDL_waylandtouch.c:254:0: style: The function 'Wayland_touch_create' is never used. [unusedFunction]

^
src/video/x11/SDL_x11opengl.c:709:0: style: The function 'X11_GL_CreateContext' is never used. [unusedFunction]

^
src/video/x11/SDL_x11opengl.c:164:0: style: The function 'X11_GL_LoadLibrary' is never used. [unusedFunction]

^
src/video/x11/SDL_x11opengl.c:881:0: style: The function 'X11_GL_SetSwapInterval' is never used. [unusedFunction]

^
src/video/x11/SDL_x11opengl.c:966:0: style: The function 'X11_GL_SwapWindow' is never used. [unusedFunction]

^
src/video/x11/SDL_x11opengl.c:281:0: style: The function 'X11_GL_UnloadLibrary' is never used. [unusedFunction]

^
src/video/x11/edid-parse.c:522:0: style: The function 'decode_edid' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4419:0: style: The function 'dlindependent_calloc' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4425:0: style: The function 'dlindependent_comalloc' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4462:0: style: The function 'dlmallinfo' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4453:0: style: The function 'dlmalloc_footprint' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4457:0: style: The function 'dlmalloc_max_footprint' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4467:0: style: The function 'dlmalloc_stats' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4444:0: style: The function 'dlmalloc_trim' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4471:0: style: The function 'dlmalloc_usable_size' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4480:0: style: The function 'dlmallopt' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4437:0: style: The function 'dlpvalloc' is never used. [unusedFunction]

^
src/stdlib/SDL_malloc.c:4430:0: style: The function 'dlvalloc' is never used. [unusedFunction]

^
src/video/x11/edid-parse.c:550:0: style: The function 'dump_monitor_info' is never used. [unusedFunction]

^
src/render/vitagxm/SDL_render_vita_gxm_tools.c:955:0: style: The function 'gxm_texture_get_format' is never used. [unusedFunction]

^
cmake/test/inc_sdl_noslash.c:4:0: style: The function 'inc_sdl_noslash' is never used. [unusedFunction]

^
cmake/test/inc_sdl_slash.c:4:0: style: The function 'inc_sdl_slash' is never used. [unusedFunction]

^
cmake/test/main_lib.c:18:0: style: The function 'mylibrary_init' is never used. [unusedFunction]

^
cmake/test/main_lib.c:27:0: style: The function 'mylibrary_quit' is never used. [unusedFunction]

^
cmake/test/main_lib.c:31:0: style: The function 'mylibrary_work' is never used. [unusedFunction]

^
src/video/yuv2rgb/yuv_rgb.c:185:0: style: The function 'rgb24_yuv420_std' is never used. [unusedFunction]

^
nofile:0:0: information: Cppcheck cannot find all the include files (use --check-config for details) [missingInclude]

